<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>Adam Kiryk</title>
 <link href="http://akiryk.github.io/" rel="self"/>
 <link href="http://akiryk.github.io"/>
 <updated>2015-02-23T17:48:31-05:00</updated>
 <id>http://akiryk.github.io</id>
 <author>
   <name>Adam Kiryk</name>
   <email>adamkiryk@gmail.com</email>
 </author>

 
 <entry>
   <title>A better way to browse books online</title>
   <link href="http://akiryk.github.io/blog/2015/12/11/better-book-browsing"/>
   <updated>2015-12-11T00:00:00-05:00</updated>
   <id>http://akiryk.github.io/blog/2015/12/11/better-book-browsing</id>
   <content type="html">&lt;p&gt;I wrote &lt;a href=&quot;/blog/2014/01/15/whats-wrong-with-browsing/&quot;&gt;a post on this subject&lt;/a&gt; about a year ago, and wanted to revisit it in light of &lt;a href=&quot;http://apps.npr.org/best-books-2014/&quot;&gt;NPR&amp;rsquo;s Book Concierge&lt;/a&gt;, which does a lot of the things I was looking for back then.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m critical of the online book browsing experience in general because it tends to feel too transactional and not enough&amp;hellip; well, fun. For example, the image at the top of this post — from an earlier version of the iBooks store — feels dry, repetitive, like the books are just products to be purchased. True, they &lt;em&gt;are&lt;/em&gt; products. But the experience also matters, and the experience of sorting through them feels flat and uninspired.&lt;/p&gt;

&lt;p&gt;Unlike shopping for hardware supplies, shopping for books is in large measure about exploration and discovery. It&amp;rsquo;s fun to see all the different covers, to feel the different textures of paper, to serendipitously find something intresting and new. More than merely products to be purchased, browsing for books is entertaining and educational. &lt;/p&gt;

&lt;p&gt;I did some visual and UX sketches last year that tried to address some of the things I wanted. Following are a few of my explorations with comments about what I liked and what I didn&amp;rsquo;t like.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;A masonry approach:&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;pic-normal&quot;&gt;
  &lt;span data-picture data-alt=&quot;A first pass at creating an online browsing experience.&quot;&gt;
  &lt;span data-src=&quot;/assets/images/book-browsing-npr/browsing-1-small.jpg&quot;&gt;&lt;/span&gt;
  &lt;span data-src=&quot;/assets/images/book-browsing-npr/browsing-1-med.jpg&quot; data-media=&quot;(min-width: 26.25em)&quot;&gt;&lt;/span&gt;
  &lt;!-- Fallback content for non-JS browsers. Same img src as the initial, unqualified source element. --&gt;
  &lt;noscript&gt;
    &lt;img src=&quot;/assets/images/book-browsing-npr/browsing-1-small.jpg&quot;&gt;
  &lt;/noscript&gt;
  &lt;/span&gt;
&lt;div class=&quot;caption&quot;&gt;A first pass at creating an online browsing experience.&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;The idea is a page full of covers, as many columns as you need — like &lt;a href=&quot;https://www.flickr.com/explore&quot;&gt;flickr&lt;/a&gt; or &lt;a href=&quot;https://www.pinterest.com/&quot;&gt;pinterist&lt;/a&gt;. It feels colorful, and the layout creates an interesting rhythm that&amp;rsquo;s more lively than your typical arrangement of thumbnails in a rigid grid. Removing the price and buy buttons is appropriate, too, because it lets you focus on the books. I imagine that touching or hovering over a cover would bring up some kind of details panel, probably with a price and way to purchase.&lt;/p&gt;

&lt;p&gt;I was a little concerned that this approach could feel static in its own way because every book has the same general scale and importance. However, it&amp;rsquo;s basically the approach taken by NPR, which turns out to be pretty engaging. Sure, everything is the same  size, but as you scroll things happen and hovering brings each book to life.&lt;/p&gt;

&lt;hr/&gt;

&lt;p&gt;&lt;strong&gt;In which some books are more equal than others&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;pic-normal&quot;&gt;
  &lt;span data-picture data-alt=&quot;A next attempt, in which I tried give a feeling of &#39;volume&#39; to certain books.&quot;&gt;
  &lt;span data-src=&quot;/assets/images/book-browsing-npr/browsing-2-small.jpg&quot;&gt;&lt;/span&gt;
  &lt;span data-src=&quot;/assets/images/book-browsing-npr/browsing-2-med.jpg&quot; data-media=&quot;(min-width: 26.25em)&quot;&gt;&lt;/span&gt;
  &lt;!-- Fallback content for non-JS browsers. Same img src as the initial, unqualified source element. --&gt;
  &lt;noscript&gt;
    &lt;img src=&quot;/assets/images/book-browsing-npr/browsing-2-small.jpg&quot;&gt;
  &lt;/noscript&gt;
  &lt;/span&gt;
&lt;div class=&quot;caption&quot;&gt;A next attempt, in which I tried give a feeling of &amp;lsquo;volume&amp;rsquo; to certain books.&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;This is very much like the previous idea, except it&amp;rsquo;s inspired by the metaphor of a promotions table in a bookshop, where some titles are piled high, some are on their spines, and others are flat, side by side. In this variation, some books are given &amp;ldquo;volume&amp;rdquo; — made big — and are like the hero books piled high on a table. The idea is to let people browse at different levels of intensity: your eye can jump from hero to hero, or you can go more slowly looking at each and every volume. &lt;/p&gt;

&lt;hr/&gt;

&lt;p&gt;&lt;strong&gt;The independent bookseller&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;pic-large&quot;&gt;
  &lt;span data-picture data-alt=&quot;This variation aims for the metaphor of browsing randomly through an independent bookstore.&quot;&gt;
  &lt;span data-src=&quot;/assets/images/book-browsing-npr/browsing-3-small.jpg&quot;&gt;&lt;/span&gt;
  &lt;span data-src=&quot;/assets/images/book-browsing-npr/browsing-3-med.jpg&quot; data-media=&quot;(min-width: 26.25em)&quot;&gt;&lt;/span&gt;
  &lt;span data-src=&quot;/assets/images/book-browsing-npr/browsing-3-large.jpg&quot; data-media=&quot;(min-width: 63.75em)&quot;&gt;&lt;/span&gt;
  &lt;!-- Fallback content for non-JS browsers. Same img src as the initial, unqualified source element. --&gt;
  &lt;noscript&gt;
    &lt;img src=&quot;/assets/images/book-browsing-npr/browsing-3-small.jpg&quot;&gt;
  &lt;/noscript&gt;
  &lt;/span&gt;
&lt;div class=&quot;caption&quot;&gt;This variation aims for the metaphor of browsing randomly through an independent bookstore.&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;In the variation above, there&amp;rsquo;s order, but it risks becoming a jumble. The idea is to aim for the exploration and happenstance of browsing randomly through an independent bookstore. &lt;/p&gt;

&lt;p&gt;I imagine that clicking on any of the books in this view would take you to a new view with a new set of books related to the one you clicked on — taking you on an ever-branching path through related books. &lt;/p&gt;

&lt;p&gt;Not for someone who knows what they&amp;rsquo;re looking for but for someone who&amp;rsquo;s content to take their time. &lt;/p&gt;

&lt;hr/&gt;

&lt;p&gt;&lt;strong&gt;The book blog&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;pic-large&quot;&gt;
  &lt;span data-picture data-alt=&quot;Browse a meandering aisle of books, with occasional pauses to look at things that stand out.&quot;&gt;
  &lt;span data-src=&quot;/assets/images/book-browsing-npr/browsing-4-small.jpg&quot;&gt;&lt;/span&gt;
  &lt;span data-src=&quot;/assets/images/book-browsing-npr/browsing-4-med.jpg&quot; data-media=&quot;(min-width: 26.25em)&quot;&gt;&lt;/span&gt;
  &lt;span data-src=&quot;/assets/images/book-browsing-npr/browsing-4-large.jpg&quot; data-media=&quot;(min-width: 63.75em)&quot;&gt;&lt;/span&gt;
  &lt;!-- Fallback content for non-JS browsers. Same img src as the initial, unqualified source element. --&gt;
  &lt;noscript&gt;
    &lt;img src=&quot;/assets/images/book-browsing-npr/browsing-4-small.jpg&quot;&gt;
  &lt;/noscript&gt;
  &lt;/span&gt;
&lt;div class=&quot;caption&quot;&gt;Browse a meandering aisle of books, with occasional pauses to look at things that stand out.&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;The book blog idea is obviously inspired by the experience of scrolling through a blog, but it also tries to echo the feeling of walking down the aisle of a bookstore. There&amp;rsquo;s order, one book after another, but there&amp;rsquo;s also an interesting rhythm. &lt;/p&gt;

&lt;p&gt;It reflects the metaphor of a meandering aisle, with detours and places to pause, such as a real bookstore might provide with a comfy chair or a table piled high with staff favorites. For example, the collection, &amp;ldquo;our young adult favorites,&amp;rdquo; or the promotion for &lt;em&gt;Dr. Sleep, A Novel,&lt;/em&gt; encourage little pauses as you go down the page.&lt;/p&gt;

&lt;p&gt;This variation benefits from asking very little of users — just scroll, no need to click or hover unless you really want to. There&amp;rsquo;s much less a sense of exploration or happenstance, but at it&amp;rsquo;s best this idea could provide a nicely curated experience.&lt;/p&gt;

&lt;hr/&gt;

&lt;p&gt;&lt;strong&gt;The NPR Books Concierge&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;pic-large&quot;&gt;
  &lt;span data-picture data-alt=&quot;The NPR Books Concierge. Browse all books at once, or sort them by filter to the left.&quot;&gt;
  &lt;span data-src=&quot;/assets/images/book-browsing-npr/npr-concierge-small.jpg&quot;&gt;&lt;/span&gt;
  &lt;span data-src=&quot;/assets/images/book-browsing-npr/npr-concierge-med.jpg&quot; data-media=&quot;(min-width: 26.25em)&quot;&gt;&lt;/span&gt;
  &lt;span data-src=&quot;/assets/images/book-browsing-npr/npr-concierge-large.jpg&quot; data-media=&quot;(min-width: 63.75em)&quot;&gt;&lt;/span&gt;
  &lt;!-- Fallback content for non-JS browsers. Same img src as the initial, unqualified source element. --&gt;
  &lt;noscript&gt;
    &lt;img src=&quot;/assets/images/book-browsing-npr/npr-concierge-small.jpg&quot;&gt;
  &lt;/noscript&gt;
  &lt;/span&gt;
&lt;div class=&quot;caption&quot;&gt;The NPR Books Concierge. Browse all books at once, or sort them by filter to the left.&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;I think this app gets a lot right. It&amp;rsquo;s visual and serendipitous and engaging. Clicking a tag to the left doesn&amp;rsquo;t display anything new, but it changes the arrangement enough that you find things you&amp;rsquo;d previously overlooked. The instantaneous feedback you get by hovering over a book feels great — it takes advantage of something you can do online that you can&amp;rsquo;t do with a real book.&lt;/p&gt;

&lt;p&gt;Also, the curation is excellent, which is critical. When you visit a site like Amazon or Apple&amp;rsquo;s bookstore, it seems as though books are only curated according to their popularity — or, perhaps, based on whether you&amp;rsquo;ve purchased a similar book before. You don&amp;rsquo;t get the sense that there&amp;rsquo;s a real book-loving person there. &lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ll be using this as my go-to online book browsing resource for the foreseeable future. &lt;/p&gt;

&lt;p&gt;Check out my earlier post about &lt;a href=&quot;/blog/2014/01/15/whats-wrong-with-browsing/&quot;&gt;what&amp;rsquo;s wrong with online browsing&lt;/a&gt;. And check out &lt;a href=&quot;http://apps.npr.org/best-books-2014/&quot;&gt;NPR&amp;rsquo;s Book Concierge&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Around the (scrum) world in 80 days</title>
   <link href="http://akiryk.github.io/blog/2015/03/01/eighty-days"/>
   <updated>2015-03-01T00:00:00-05:00</updated>
   <id>http://akiryk.github.io/blog/2015/03/01/eighty-days</id>
   <content type="html">&lt;p&gt;I recently role-hopped around my scrum team over the course of about 80 days — from developer to UX Lead to Product Owner. Ah, the adventures I had! How did it come about? What did I learn? What do I think? &lt;/p&gt;

&lt;p&gt;I think it&amp;rsquo;s been great, and I&amp;rsquo;d recommend it to anyone — or almost anyone, as long as you like trying new things and are comfortable learning as you go. Since I was already comfortable doing front-end development work, design work, and thinking about user experience, the biggest challenge was in stepping into the Product Owner role. &lt;/p&gt;

&lt;p&gt;I&amp;rsquo;d sometimes wondered what it would be like to be a product owner. I figured I could guide the team to focus on &lt;/p&gt;

&lt;p&gt;is al First, shaking things up and trying something new from time to time is refreshing. It forces you to think about what you do best and what you enjoy doing best, but also gives a chance to discover something you didn&amp;rsquo;t know, to grow in an area where you aren&amp;rsquo;t as confident, and — possibly most important — to walk in the shoes of your colleagues.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Curb ramps on the web!</title>
   <link href="http://akiryk.github.io/blog/2015/02/19/accessibility"/>
   <updated>2015-02-19T00:00:00-05:00</updated>
   <id>http://akiryk.github.io/blog/2015/02/19/accessibility</id>
   <content type="html">&lt;p&gt;I went to a talk the other night by &lt;a href=&quot;https://twitter.com/aaronlev&quot;&gt;Aaron Leventhal&lt;/a&gt;, a guy who&amp;rsquo;s worked on accessibility issues for a long time, and he said some things that got me thinking.&lt;/p&gt;

&lt;p&gt;He stressed that what people typically mean by &amp;ldquo;accessibility&amp;rdquo; only improves the experience for a fairly small portion of the world. That&amp;rsquo;s because the things that make a site &amp;ldquo;accessible&amp;rdquo; — proper, semantic markup, ARIA attributes, and so on — are useful only to the extent that users have special tools, such as screenreaders, to take advantage of them. He suggested the metaphor of a drawbridge, which only works when both sides are in place —  accessible markup on one side and tools on the other. &lt;/p&gt;

&lt;p&gt;In reality, there are millions of people who don&amp;rsquo;t have special tools and would benefit nevertheless if the web were easier to read, easier to navigate, and easier to deal with.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Universal Design&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;pic-medium pull-right&quot;&gt;
  





  &lt;span data-picture data-alt=&quot;The curb ramp, or curb cut, is a great example of a feature that&#39;s necessary for some people and helpful for everyone.&quot;&gt;
    &lt;span data-src=&quot;/assets/images/2-15-accessibility/curbcut-tiny.jpg&quot;&gt;&lt;/span&gt;
    &lt;span data-src=&quot;/assets/images/2-15-accessibility/curbcut-small.jpg&quot; data-media=&quot;(min-width: 36.5625em)&quot;&gt;&lt;/span&gt;
    &lt;!-- Fallback content for non-JS browsers. Same img src as the initial, unqualified source element. --&gt;
    &lt;noscript&gt;
      &lt;img src=&quot;/assets/images/2-15-accessibility/curbcut-tiny.jpg&quot;&gt;
    &lt;/noscript&gt;
  &lt;/span&gt;

&lt;div class=&quot;caption&quot;&gt;The curb ramp, or curb cut, is a great example of a feature that&amp;rsquo;s necessary for some people and helpful for everyone.&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Universal design refers to an approach that solves problems for everyone, not only for people with special needs. The curb cut (see example photo) illustrates this perfectly, because it enables people in wheelchairs to get around more easily but also makes life easier for people who are on bicycles, pushing baby-strollers, or simply walking. It doesn&amp;rsquo;t cry out, &amp;ldquo;hey handicapped people, use me!&amp;rdquo; It&amp;rsquo;s just there, a universal improvement.&lt;/p&gt;

&lt;p&gt;This is a really important feature, because anyone can have reduced abilities for a variety of reasons (see &lt;a href=&quot;https://the-pastry-box-project.net/anne-gibson/2014-july-31&quot;&gt;An Alphabet of Accessibility Issues&lt;/a&gt;). For example:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You&amp;rsquo;re standing in a bus, holding a strap with one hand, so you&amp;rsquo;re effectively one-handed;&lt;/li&gt;
&lt;li&gt;You outside in bright sun so your tablet screen looks dim and washed out — your vision is effectively compromised;&lt;/li&gt;
&lt;li&gt;You&amp;rsquo;re in a noisy environment and navigate to a website or app with lots of audio clips — your hearing is effectively impaired for the moment.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Consider these things: movement, sight, hearing, touch, clear-thinking, literacy&amp;hellip; Are you designing something that requires any of them? What if any of these things are reduced — for any reason? Are there any &amp;ldquo;curb cuts&amp;rdquo; you could design to improve the experience?&lt;/p&gt;

&lt;p&gt;Examples on the web are hard to come by. Aaron named the &lt;a href=&quot;https://readability.com/&quot;&gt;Readability&lt;/a&gt; app and the type-size tool (the feature that lets users increase or decrease font size as needed), but they aren&amp;rsquo;t perfect examples. You have to know about Readability to use it. Same with the type-size tool. You can find it on the New York Times site under the gear icon, but it&amp;rsquo;s more of a special setting than a univeral enhancement. &lt;/p&gt;

&lt;div class=&quot;pic-normal&quot;&gt;
  &lt;span data-picture data-alt=&quot;The Reader View icon in Safari.&quot;&gt;
  &lt;span data-src=&quot;/assets/images/2-15-accessibility/safari-small.jpg&quot;&gt;&lt;/span&gt;
  &lt;span data-src=&quot;/assets/images/2-15-accessibility/safari-med.jpg&quot; data-media=&quot;(min-width: 26.25em)&quot;&gt;&lt;/span&gt;
  &lt;!-- Fallback content for non-JS browsers. Same img src as the initial, unqualified source element. --&gt;
  &lt;noscript&gt;
    &lt;img src=&quot;/assets/images/2-15-accessibility/safari-small.jpg&quot;&gt;
  &lt;/noscript&gt;
  &lt;/span&gt;
&lt;div class=&quot;caption&quot;&gt;The Reader View icon in Safari.&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;The best example I can think of right now is probably the Reader View on Safari, which makes the reading experience much better for everyone. It just sits there, ready for anyone to use, but it isn&amp;rsquo;t the most obvious thing to find — it&amp;rsquo;s nothing like a curb ramp conveniently placed at the end of a crosswalk.&lt;/p&gt;

&lt;div class=&quot;pic-large&quot;&gt;
  &lt;span data-picture data-alt=&quot;Side by side comparison of a story in regular view and in reader view.&quot;&gt;
  &lt;span data-src=&quot;/assets/images/2-15-accessibility/reader-small.jpg&quot;&gt;&lt;/span&gt;
  &lt;span data-src=&quot;/assets/images/2-15-accessibility/reader-med.jpg&quot; data-media=&quot;(min-width: 26.25em)&quot;&gt;&lt;/span&gt;
  &lt;span data-src=&quot;/assets/images/2-15-accessibility/reader-large.jpg&quot; data-media=&quot;(min-width: 63.75em)&quot;&gt;&lt;/span&gt;
  &lt;!-- Fallback content for non-JS browsers. Same img src as the initial, unqualified source element. --&gt;
  &lt;noscript&gt;
    &lt;img src=&quot;/assets/images/2-15-accessibility/reader-small.jpg&quot;&gt;
  &lt;/noscript&gt;
  &lt;/span&gt;
&lt;div class=&quot;caption&quot;&gt;Side by side comparison of a story in regular view and in reader view.&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;I&amp;rsquo;m going to keep thinking about the notion of curb cuts. In the meantime, I think the best practices of &lt;em&gt;Universal Design&lt;/em&gt; seem to align with good design in general: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Good typography, with appropriate line-length, leading, font-size, font color, and font. &lt;/li&gt;
&lt;li&gt;Good use of white space. Let the content come first: remove all the junk that doesn&amp;rsquo;t pertain to the content people came to your site to read; &lt;/li&gt;
&lt;li&gt;Good visual structure, with a clear hierarchy of information and a clear flow.&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Bus Ride Reads — Microinteractions</title>
   <link href="http://akiryk.github.io/blog/2014/10/12/microinteractions"/>
   <updated>2014-10-12T00:00:00-04:00</updated>
   <id>http://akiryk.github.io/blog/2014/10/12/microinteractions</id>
   <content type="html">&lt;p style=&quot;font-style: italic;&quot;&gt;&lt;a href=&quot;/tag/bus-ride-reads/&quot;&gt;Bus ride reads&lt;/a&gt; is an occasional series in which I discuss a design or ux book I&amp;rsquo;ve been reading on my commute. More recap than review, my goal is to capture the key ideas that stand out for me, and to explore how those ideas relate to my own work whenever possible. &lt;/p&gt;

&lt;p&gt;Microinteractions, by Dan Saffer, is about little details that make a huge difference. If you’ve ever looked through the tumblr &lt;a href=&quot;http://littlebigdetails.com/&quot;&gt;Little Big Details&lt;/a&gt;, you have a decent idea of the kind of thing it covers — and the book is full of examples from that site. But whereas Little Big Details typically celebrates unexpected moments of delight or humor, Microinteractions stresses the role small things play in the overall success of a technology. &lt;/p&gt;

&lt;p&gt;First, as the name implies, a microinteraction is a little bitty thing, usually — but not always — part of a larger feature. From the book: &amp;ldquo;A music player is a feature; adjusting the volume is a microinteraction.” Because such interactions are small and highly focused, they can and should be at the pinnacle of simplicity and ease-of-use. The book’s thesis is that well-polished micro interactions not only help make products great, but can become “signature” moments in their own right — key elements in making something truly stand out. &lt;/p&gt;

&lt;p&gt;There are four parts of a micro interaction. The trigger, rules, feedback, and loops and modes. &lt;/p&gt;

&lt;p&gt;The trigger is fairly self-explanatory. It could be a button that says “log in” or it could be a camera icon that opens a smartphone camera. Triggers can be super obvious, like the public transit kiosks with a giant “touch me” call-to-action, or they can be hidden, like with Google Maps for iOS, where shaking the phone is a invisible trigger for giving feedback. As a designer, you have to strike a balance where the interface is clean and simple and scannable enough that users can easily do the main tasks they want to do, yet not so minimal that the key functionality is  lost. How to determine when to be self-evident and when to be subtle is obviously a trick. Saffer quotes what he calls a golden rule:&lt;/p&gt;

&lt;blockquote&gt;Microinteractions that most people do, most often, should be highly discoverable.&lt;br/&gt;&lt;br/&gt;
Microinteractions that some people do, somewhat often, should be easily discoverable.&lt;br/&gt;&lt;br/&gt;
Microinteractions that few people do, infrequently, should take some searching to find.&lt;/blockquote&gt;

&lt;div class=&quot;pic-medium pull-right&quot;&gt;
  




  


  &lt;span data-picture data-alt=&quot;When a user touches the scrubber, all other controls are hidden so that the user can focus exclusively on the task.&quot;&gt;
    &lt;span data-src=&quot;/assets/images/9-14-microinteractions/npr-1-app-animation-tiny.gif&quot;&gt;&lt;/span&gt;
    &lt;span data-src=&quot;/assets/images/9-14-microinteractions/npr-1-app-animation-small.gif&quot; data-media=&quot;(min-width: 36.5625em)&quot;&gt;&lt;/span&gt;
    &lt;!-- Fallback content for non-JS browsers. Same img src as the initial, unqualified source element. --&gt;
    &lt;noscript&gt;
      &lt;img src=&quot;/assets/images/9-14-microinteractions/npr-1-app-animation-tiny.gif&quot;&gt;
    &lt;/noscript&gt;
  &lt;/span&gt;

&lt;div class=&quot;caption&quot;&gt;When a user touches the scrubber, all other controls are hidden so that the user can focus exclusively on the task.&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;This seems hard to argue with, although sometimes designers have to guess about what things people will do most often, or even about what counts as highly discoverable. I love the way we’ve handled the scrubber on our NPR One app, because the trigger &lt;em&gt;is&lt;/em&gt; the scrubber. You touch it to scrub and it becomes larger for easy handling. It’s the best of both worlds, because the interface is uncluttered yet still highly findable — the animated image at right shows how it changes on touch. &lt;/p&gt;

&lt;p&gt;The book describes several principles of good trigger design. I won’t list them all, but a couple seem worth noting.&lt;/p&gt;

&lt;p&gt;First, it should initiate the same action every time. Apparently, the Galaxy S Note has icons that display different menus  depending on when you click on them, which is confusing and counterproductive because it prevents users from developing an accurate mental model of how the micro interaction works.&lt;/p&gt;

&lt;p&gt;Not to harp on iPhoto too much, but they suffer from this problem as well. Clicking on the “Share” item in the upper-left set of options displays a sub-menu with Facebook, Flickr, and the like. &lt;/p&gt;

&lt;div class=&quot;pic-normal&quot;&gt;
  &lt;span data-picture data-alt=&quot;iPhoto has two share triggers, but they don&#39;t do the same thing.&quot;&gt;
  &lt;span data-src=&quot;/assets/images/9-14-microinteractions/share1-small.jpg&quot;&gt;&lt;/span&gt;
  &lt;span data-src=&quot;/assets/images/9-14-microinteractions/share1-med.jpg&quot; data-media=&quot;(min-width: 26.25em)&quot;&gt;&lt;/span&gt;
  &lt;!-- Fallback content for non-JS browsers. Same img src as the initial, unqualified source element. --&gt;
  &lt;noscript&gt;
    &lt;img src=&quot;/assets/images/9-14-microinteractions/share1-small.jpg&quot;&gt;
  &lt;/noscript&gt;
  &lt;/span&gt;
&lt;div class=&quot;caption&quot;&gt;iPhoto has two share triggers, but they don&amp;rsquo;t do the same thing.&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Clicking on the “Share” item in the lower right set of options displays a sub-menu with the same options but also others, including buttons to create a book, order prints, or make an album. If a user has learned that “share” means share on social media, how likely is it they’ll click the share button when trying to create a book? &lt;/p&gt;

&lt;div class=&quot;pic-normal&quot;&gt;
  &lt;span data-picture data-alt=&quot;Unlike &#39;share&#39; above, this one enables user to make books, cards, and other assets.&quot;&gt;
  &lt;span data-src=&quot;/assets/images/9-14-microinteractions/share2-small.jpg&quot;&gt;&lt;/span&gt;
  &lt;span data-src=&quot;/assets/images/9-14-microinteractions/share2-med.jpg&quot; data-media=&quot;(min-width: 26.25em)&quot;&gt;&lt;/span&gt;
  &lt;!-- Fallback content for non-JS browsers. Same img src as the initial, unqualified source element. --&gt;
  &lt;noscript&gt;
    &lt;img src=&quot;/assets/images/9-14-microinteractions/share2-small.jpg&quot;&gt;
  &lt;/noscript&gt;
  &lt;/span&gt;
&lt;div class=&quot;caption&quot;&gt;Unlike &amp;lsquo;share&amp;rsquo; above, this one enables user to make books, cards, and other assets.&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Second, the trigger should bring the data forward. This is a cool idea and worth aiming to do when it makes sense, as in a notifications badge that is first a trigger to view messages and second an indicator of how many messages you have. This can also work really well with button labels. For example, if someone is on a donation form and has selected to give $200, have the button say &amp;quot;Donate $200&amp;rdquo; instead of the more common and less explicit &amp;ldquo;Donate&amp;rdquo; or &amp;ldquo;Submit.&amp;rdquo; &lt;/p&gt;

&lt;div class=&quot;pic-normal&quot;&gt;
  &lt;span data-picture data-alt=&quot;The button text changes as a user toggles between monthly and one-time payments.&quot;&gt;
  &lt;span data-src=&quot;/assets/images/9-14-microinteractions/monthly-anim-small.gif&quot;&gt;&lt;/span&gt;
  &lt;span data-src=&quot;/assets/images/9-14-microinteractions/monthly-anim-med.gif&quot; data-media=&quot;(min-width: 26.25em)&quot;&gt;&lt;/span&gt;
  &lt;!-- Fallback content for non-JS browsers. Same img src as the initial, unqualified source element. --&gt;
  &lt;noscript&gt;
    &lt;img src=&quot;/assets/images/9-14-microinteractions/monthly-anim-small.gif&quot;&gt;
  &lt;/noscript&gt;
  &lt;/span&gt;
&lt;div class=&quot;caption&quot;&gt;The button text changes as a user toggles between monthly and one-time payments.&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;As a counter-example, Dropbox does not bring data forward in its trigger for viewing a folder — you just see a plain folder icon. This means you have to click into the folder to find out if it&amp;rsquo;s empty or not, which can be kind of frustrating. In the image below, I’ve contrasted the default display with a simple variation that brings some data forward: &lt;em&gt;Bully From Space&lt;/em&gt; is empty; &lt;em&gt;Photos&lt;/em&gt; has 22 files.&lt;/p&gt;

&lt;div class=&quot;pic-normal&quot;&gt;
  &lt;span data-picture data-alt=&quot;In this animated gif, notice how we can improve Dropbox&#39;s design by bringing data forward. Adding nothing more than a number to the folder icon enables us to see that one folder is empty and the other has content. &quot;&gt;
  &lt;span data-src=&quot;/assets/images/9-14-microinteractions/dropbox-small.gif&quot;&gt;&lt;/span&gt;
  &lt;span data-src=&quot;/assets/images/9-14-microinteractions/dropbox-med.gif&quot; data-media=&quot;(min-width: 26.25em)&quot;&gt;&lt;/span&gt;
  &lt;!-- Fallback content for non-JS browsers. Same img src as the initial, unqualified source element. --&gt;
  &lt;noscript&gt;
    &lt;img src=&quot;/assets/images/9-14-microinteractions/dropbox-small.gif&quot;&gt;
  &lt;/noscript&gt;
  &lt;/span&gt;
&lt;div class=&quot;caption&quot;&gt;In this animated gif, notice how we can improve Dropbox&amp;rsquo;s design by bringing data forward. Adding nothing more than a number to the folder icon enables us to see that one folder is empty and the other has content. &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Rules&lt;/strong&gt;
Every micro interaction has to have rules. Some are very simple: only show the login button if a user isn’t already logged in. Some are more complex: only show the option to translate a web page if it&amp;rsquo;s in a language other than the user’s default. Saffer’s general advice is to limit options so that the rules stay simple. The whole idea of a micro interaction is to do one small thing really well, so you want to be careful of trying to do to much. &lt;/p&gt;

&lt;p&gt;In my Gronster drawing game, I built some shortcuts for changing the color and size of the brush, but I didn’t want to over-complicate the experience by making everyone read through a paragraph of help text. Instead, I created a rule that says: if a user changes the size of their brush more than two times, show them a little help tip explaining the shortcut. &lt;/p&gt;

&lt;div class=&quot;pic-normal&quot;&gt;
  &lt;span data-picture data-alt=&quot;Not all users will want to be bothered by remembering  keyboard shortcuts, so Gronster doesn&#39;t display them. On the other hand, users who change colors regularly are more likely to benefit. There&#39;s a rule for that.&quot;&gt;
  &lt;span data-src=&quot;/assets/images/9-14-microinteractions/gronster-small.jpg&quot;&gt;&lt;/span&gt;
  &lt;span data-src=&quot;/assets/images/9-14-microinteractions/gronster-med.jpg&quot; data-media=&quot;(min-width: 26.25em)&quot;&gt;&lt;/span&gt;
  &lt;!-- Fallback content for non-JS browsers. Same img src as the initial, unqualified source element. --&gt;
  &lt;noscript&gt;
    &lt;img src=&quot;/assets/images/9-14-microinteractions/gronster-small.jpg&quot;&gt;
  &lt;/noscript&gt;
  &lt;/span&gt;
&lt;div class=&quot;caption&quot;&gt;Not all users will want to be bothered by remembering  keyboard shortcuts, so Gronster doesn&amp;rsquo;t display them. On the other hand, users who change colors regularly are more likely to benefit. There&amp;rsquo;s a rule for that.&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;An ounce of prevention&amp;hellip;&lt;/strong&gt;
In interactions that user-input, there’s the possibility of errors. Certainly, one can always fall back on the old error message — in many cases, they’re unavoidable. But it’s better to eliminate the chance of errors if at all possible. For example, when pasting a url into a field in this internal NPR app, we don’t give an error if the user forgets to add the ‘http://&amp;rsquo; part, we do it for them. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Absorb complexity&lt;/strong&gt; Basically, if the computer can help out users by making a calculation or identifying a reasonable default, do it. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Controls and User Input&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I found Saffer’s discussion of operational simplicity vs. perceived simplicity to be a bit confusing, but I think I can explain what he means. In this image of two blenders, the old one with all the buttons would be considered operationally simple because it gives every command its own control, such as stir, whip, or beat. The Vitamix, on the other hand, has perceived simplicity because a single control — the middle dial — enables several actions.&lt;/p&gt;

&lt;div class=&quot;pic-normal&quot;&gt;
  &lt;span data-picture data-alt=&quot;A vintage blender with operational simplicity and a Vitamix with perceived simplicity.&quot;&gt;
  &lt;span data-src=&quot;/assets/images/9-14-microinteractions/operational-small.jpg&quot;&gt;&lt;/span&gt;
  &lt;span data-src=&quot;/assets/images/9-14-microinteractions/operational-med.jpg&quot; data-media=&quot;(min-width: 26.25em)&quot;&gt;&lt;/span&gt;
  &lt;!-- Fallback content for non-JS browsers. Same img src as the initial, unqualified source element. --&gt;
  &lt;noscript&gt;
    &lt;img src=&quot;/assets/images/9-14-microinteractions/operational-small.jpg&quot;&gt;
  &lt;/noscript&gt;
  &lt;/span&gt;
&lt;div class=&quot;caption&quot;&gt;A vintage blender with operational simplicity and a Vitamix with perceived simplicity.&lt;/div&gt;
&lt;/div&gt; 

&lt;p&gt;How to decide when to go for operational simplicity or perceived simplicity? Saffer says:&lt;/p&gt;

&lt;p&gt;For micro interactions that will be done repeatedly, err on the side of perceived simplicity, unless it is an action that needs to be done quickly and with no chance of error — for example, the Mute button on a conference phone; combing it with the Make Quieter action would probably be a disaster. For micro interactions that will only be done once or occasionally, err on the side of operational simplicity; display all the options so that little to no foreknowledge is required.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Feedback&lt;/strong&gt; We need to provide feedback to our users that their action has had an effect. Sometimes this is embedded in the micro-interaction and no additional feedback is necessary — for example, if I click “pause” on Spotify, the music stops. I don’t need it to tell me, “Hey, we’ve stopped the music.” On the other hand, many interactions aren’t so clearcut. If I click on an Add to Cart button on a shopping experience, I’ll need some kind of feedback that my action was successful. &lt;/p&gt;

&lt;div class=&quot;pic-normal&quot;&gt;
  &lt;span data-picture data-alt=&quot;Saffer cautions against using animations to communicate feedback unless the information is critical. Debatable in this case, but it&#39;s not a bad implementation.&quot;&gt;
  &lt;span data-src=&quot;/assets/images/9-14-microinteractions/shopping-cart-small.gif&quot;&gt;&lt;/span&gt;
  &lt;span data-src=&quot;/assets/images/9-14-microinteractions/shopping-cart-med.gif&quot; data-media=&quot;(min-width: 26.25em)&quot;&gt;&lt;/span&gt;
  &lt;!-- Fallback content for non-JS browsers. Same img src as the initial, unqualified source element. --&gt;
  &lt;noscript&gt;
    &lt;img src=&quot;/assets/images/9-14-microinteractions/shopping-cart-small.gif&quot;&gt;
  &lt;/noscript&gt;
  &lt;/span&gt;
&lt;div class=&quot;caption&quot;&gt;Saffer cautions against using animations to communicate feedback unless the information is critical. Debatable in this case, but it&amp;rsquo;s not a bad implementation.&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Two ideas stand out to me from this section:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;With feedback, less is often more. Giving users too much information at the wrong time can be confusing, so aim to provide the least amount of feedback necessary to communicate what’s going on. Simply showing a little cart icon with a number 1 in it might be all you need to do to indicate success rather than an actual animation.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;“Use the overlooked as a means of message delivery.” I’d love to see more of this, and there are probably a variety of ways to do this in projects I’m currently working on. Could the play button in an online audio player indicate something about the duration of the audio clip? Could a spinning/loading icon reveal information about the file being loaded?  &lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The last section of the book is about loops and modes. Loops are all the micro interactions that occur in some kind of repeating way — an alarm, say. Modes are different states of an interface — like normal vs edit. Saffer cautions that modes can cause confusion, because the same or similar triggers can behave in new ways. For example, in the Stitcher podcast app, the normal behavior for clicking on a podcast is to display options related to that podcast — save for later, view all, etc. But in the edit mode, clicking on a podcast does nothing. I think Stitcher does a reasonably good job with this, because they make it really clear when you’re in edit mode, but it’s worthwhile thinking hard about how best to handle modes. &lt;/p&gt;

&lt;div class=&quot;pic-normal&quot;&gt;
  &lt;span data-picture data-alt=&quot;Two screens for different modes on Stitcher, a podcast listening app — normal on left and edit on right.&quot;&gt;
  &lt;span data-src=&quot;/assets/images/9-14-microinteractions/stitcher-small.jpg&quot;&gt;&lt;/span&gt;
  &lt;span data-src=&quot;/assets/images/9-14-microinteractions/stitcher-med.jpg&quot; data-media=&quot;(min-width: 26.25em)&quot;&gt;&lt;/span&gt;
  &lt;!-- Fallback content for non-JS browsers. Same img src as the initial, unqualified source element. --&gt;
  &lt;noscript&gt;
    &lt;img src=&quot;/assets/images/9-14-microinteractions/stitcher-small.jpg&quot;&gt;
  &lt;/noscript&gt;
  &lt;/span&gt;
&lt;div class=&quot;caption&quot;&gt;Two screens for different modes on Stitcher, a podcast listening app — normal on left and edit on right.&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;The book covers a lot more than what I’ve mentioned here, but these are the things that stood out most to me. It’s important to design triggers carefully, to use them consistently, and to make give them the right degree of discoverability. Every micro interaction has rules, and they can quickly become difficult to manage, so it’s important to keep them simple whenever possible. Think creatively about how to give feedback, using overlooked design elements or moments of down-time to convey the right amount of information.   &lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>The Best Pledge Experience Ever, Part 3</title>
   <link href="http://akiryk.github.io/blog/2014/10/07/pledge-part-3"/>
   <updated>2014-10-07T00:00:00-04:00</updated>
   <id>http://akiryk.github.io/blog/2014/10/07/pledge-part-3</id>
   <content type="html">&lt;p&gt;I’ve just written a couple of posts about the online donation experience — &lt;a href=&quot;/blog/2014/09/16/pledge-part-1/&quot;&gt;one&lt;/a&gt; about best and worst practices and &lt;a href=&quot;/blog/2014/09/28/pledge-part-2/&quot;&gt;another&lt;/a&gt; that presents a sample best-case approach. There’s still a big piece I haven’t explored. A particularly thorny problem my team has grappled with at work:  is it possible to prod supporters into giving larger donations by up-selling them more “expensive” premiums — thank-you gifts like concert tickets, hand-crafted tote bags, or cases of wine? &lt;/p&gt;

&lt;p&gt;Or what about up-selling a greater variety of the normal sort of premiums — a black tote bag as well as a cream colored one, perhaps one in organic cotton and the other synthetic? &lt;/p&gt;

&lt;p&gt;And is it possible to do this without making the experience cumbersome and confusing or losing sight of the main objective, which is to collect a donation? &lt;/p&gt;

&lt;p&gt;The short answer is no. The long answer is… well, read on.
&lt;div class=&quot;marginator&quot;&gt;
  &lt;p&gt;
    In my &lt;a href=&quot;/blog/2014/09/28/pledge-part-2/&quot;&gt;last post&lt;/a&gt;, I proposed solving the question of thank-you gifts by limiting them to just a few simple and brand-appropriate items. In other words, a public radio station could offer $50-donors a mug with the station logo or $100-donors tickets to a station-sponsored concert event — and that’s just fine. It strengthens your brand in the minds of supporters and doesn’t add any real work on their part to complete the donation experience. 
  &lt;/p&gt;
  &lt;div class=&quot;marginalia&quot;&gt;
    &lt;p&gt;&lt;span class=&quot;margin-heading&quot;&gt;The value of premiums &lt;/span&gt;Nonprofit consultancy M+R &lt;a href=&quot;http://www.mrss.com/lab/the-power-of-the-premium-convincing-prospective-donors-to-give/&quot;&gt;studied 4 nonprofits&lt;/a&gt;, and found that a small selection of appropriate premiums — like in my earlier post — can help increase donations.
    &lt;/p&gt;&lt;/div&gt;
&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;• Every thank-you gift has an associated donation requirement (e.g. you have to give at least $50 to get the tote-bag).&lt;/p&gt;

&lt;p&gt;• A supporter/shopper can select as many gifts as they’d like.&lt;/p&gt;

&lt;p&gt;• For any item, a supporter/shopper can choose from among multiple attributes (color, size, material, etc).&lt;/p&gt;

&lt;p&gt;• The donation amount may need to change to reflect the premiums selected. For example, a tee-shirt requires a minimum donation of $50; you selected three; your donation needs to climb to $150.&lt;/p&gt;

&lt;p&gt;I think this is crazy. &lt;/p&gt;

&lt;p&gt;In this post, I’m going to explore how to provide the best user experience possible for the premiums-situation described above, but first I need to explain why I think this approach to handling premiums is nuts. &lt;/p&gt;

&lt;div class=&quot;pullquote pull-left&quot;&gt;
  
&lt;div class=&quot;gamma&quot;&gt;Why would you sidetrack would-be donors away from giving and into a bad shopping experience?&lt;/div&gt;

&lt;/div&gt;

&lt;p&gt;It’s nuts because it sidetracks would-be donors from making a simple donation and forces them instead into a bad online retail experience. Simple as that. It would be better to thank them with a basic tote and turn them into a regular supporter than to try and compete in the online shopping game.&lt;/p&gt;

&lt;p&gt;Do we have to offer a &lt;em&gt;bad&lt;/em&gt; online retail experience? Perhaps we can make it good. No. There are laws of retail physics that can’t be broken, and online giving tends to break at least one of them.&lt;/p&gt;

&lt;p&gt;Retail physics law #1: a good shopping experience requires that you sell something customers want. Often, this means specializing in a limited category of things — &lt;a href=&quot;https://www.missionbicycle.com/&quot;&gt;bicycles&lt;/a&gt;, say. You attract customers who want to shop for a bicycle. Alternately, you carry a truly wide range of stuff, like Amazon or Target, where shoppers know they’ll find it no matter what it is. Nobody shops at a store carrying a miscellaneous array of mugs, tote-bags, and umbrellas. &lt;/p&gt;

&lt;p&gt;There’s the occasional exception: many museums have successful stores. A good &lt;a href=&quot;http://www.momastore.org/&quot;&gt;museum store&lt;/a&gt; makes money for the institution by selling a somewhat random selection of things. The difference is a) it’s a very well-curated selection of things; b) each of those things typically has something to do with the focus of the museum; c) it’s a store, and clearly distinct from the institution&amp;rsquo;s donation process — ultimately, you shop there because they have things you want to buy, not because you’re trying to support the museum.&lt;/p&gt;

&lt;p&gt;Retail physics law #2: people want to shop first, then pay. Imagine walking into Whole Foods and being told to pay first. How much should you pay? Guess too high and you won’t get your money’s worth. Guess too low and you’ll waste time shopping for things you can’t carry home. You’d never do it. &lt;/p&gt;

&lt;p&gt;When it comes to shopping for premiums, there are a few ways to handle this pay-first situation. Unfortunately, none are very satisfactory.&lt;/p&gt;

&lt;h3&gt;Potential Solution 1&lt;/h3&gt; 

&lt;p&gt;The most obvious solution would simply be to let supporters shop first and then calculate their donation based on what’s been added to the cart. In other words, turn it into a shopping experience. Add a cd to your cart and your donation climbs to $50. Add a pair of tickets to opening night at the symphony, it grows to $500. It’s fair, it works, and it makes sense. Success!&lt;/p&gt;

&lt;p&gt;Wait. Really? We’ve now gone from letting people choose their thank-you gifts to creating a full-on shopping experience. Which misses the point in a major way. We want our supporters to donate, not shop. &lt;em&gt;Our supporters&lt;/em&gt; want to donate, not shop. Sure, it’s possible to do what I’ve described, but does your nonprofit really have the expertise, interest, or bandwidth to make it work?&lt;/p&gt;

&lt;div class=&quot;pic-normal&quot;&gt;
  &lt;span data-picture data-alt=&quot;Other issues: it&#39;s kind of weird to drive users to a shopping site with a call-to-action like &#39;donate.&#39; Should you say &#39;shop and donate&#39;? Do you need an additional site dedicated to traditional donations?&quot;&gt;
  &lt;span data-src=&quot;/assets/images/9-2014-pledge3/user-alt-small.jpg&quot;&gt;&lt;/span&gt;
  &lt;span data-src=&quot;/assets/images/9-2014-pledge3/user-alt-med.jpg&quot; data-media=&quot;(min-width: 26.25em)&quot;&gt;&lt;/span&gt;
  &lt;!-- Fallback content for non-JS browsers. Same img src as the initial, unqualified source element. --&gt;
  &lt;noscript&gt;
    &lt;img src=&quot;/assets/images/9-2014-pledge3/user-alt-small.jpg&quot;&gt;
  &lt;/noscript&gt;
  &lt;/span&gt;
&lt;div class=&quot;caption&quot;&gt;Other issues: it&amp;rsquo;s kind of weird to drive users to a shopping site with a call-to-action like &amp;lsquo;donate.&amp;rsquo; Should you say &#39;shop and donate&amp;rsquo;? Do you need an additional site dedicated to traditional donations?&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;And don’t forget about retail law #1 — sell stuff people want. Nobody wants to “shop” at a store offering only random tote-bags and the like. You’d have to think about finding and maintaining inventory that could actually be sold. Ugh. This causes more headaches than it solves.&lt;/p&gt;

&lt;h3&gt;Potential Solution 2&lt;/h3&gt;

&lt;p&gt;The most user-friendly solution would be to let supporters choose the amount they want to give and then display only the thank-you gifts they can actually “afford.” That is, if I say I want to give $50, you let me choose from a mug or a tote-bag or a bumper-sticker. If I plan to give $100, you add a few more items to the list: a cd, tickets, something else. That works pretty well, and has a precedent in shopping — think of sites where you can filter results and only shop for cameras under $100 or whatever. &lt;/p&gt;

&lt;div class=&quot;pullquote pull-right&quot;&gt;
  
&lt;div class=&quot;gamma&quot;&gt;This solution is basically sound, except that it kills the chance to up-sell.&lt;/div&gt;

&lt;/div&gt;

&lt;p&gt;This solution is basically sound, except that it kills the chance to up-sell, which is ostensibly the point of offering a large selection of premiums. If your nonprofit isn’t going to benefit from offering a richer selection of premiums, why go to the trouble? And it is trouble. You’ll need staff to maintain a more complex inventory; you’ll need a backend to your website that can handle the variety of choices; and of course there will be more chances to make a mistake — send the wrong thing or forget to order more of something that’s running low. &lt;/p&gt;

&lt;p&gt;There’s another thing. One of our business rules says users should be able to select more than one of an item. We can easily hide $100 thank-you gifts from a $50 donor, but what if that donor wants two of the lower-value gifts? Well, they&amp;rsquo;d need to give $100, so we have to either show them an error message or increase their donation or both. It’s no longer such a clean operation.  &lt;/p&gt;

&lt;h3&gt;Potential Solution 3&lt;/h3&gt;

&lt;p&gt;Let our supporters select how much they want to give first, then let them select one or more thank-you gifts from the full collection — enabling the possibility that we up-sell some to a higher level. If you say you want to give $50 and then choose a gift at the $100 level, we’ll increase your donation to $100. Works well for our nonprofit — but risks pissing off supporters.&lt;/p&gt;

&lt;p&gt;There’s really only one way to manage this scenario, and that’s to be as transparent as possible. We have to make it clear to our supporters that their donation goes up or down based on the premiums they select. And we have to make it easy for them to remove premiums to reach a comfortable level of giving.&lt;/p&gt;

&lt;div class=&quot;marginator&quot;&gt;
  &lt;p&gt;
    We can do this by interrupting supporters when they’ve gone over their limit — say, with an error message: “hey, we just increased your donation to $75!” If we want to err on the side of ensuring they truly understand, we could force them to say yes or no, as in, “Are you sure you want to give $75 and receive this gift? Yes, No.” 
  &lt;/p&gt;
  &lt;div class=&quot;marginalia&quot;&gt;
    &lt;p&gt;&lt;span class=&quot;margin-heading&quot;&gt;Uber&amp;rsquo;s surge warning &lt;/span&gt;To ensure users are aware of price surges, Uber requires that you &lt;a href=&quot;http://www.phillymag.com/news/2013/12/18/uber-surge-pricing/&quot;&gt;manually key-in the price multiple&lt;/a&gt;.
    &lt;/p&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;pic-normal&quot;&gt;
  &lt;span data-picture data-alt=&quot;This wireframe shows how we could prevent users from continueing without first consenting to the larger donation amount. It&#39;s a heavy-handed solution.&quot;&gt;
  &lt;span data-src=&quot;/assets/images/9-2014-pledge3/modal-small.jpg&quot;&gt;&lt;/span&gt;
  &lt;span data-src=&quot;/assets/images/9-2014-pledge3/modal-med.jpg&quot; data-media=&quot;(min-width: 26.25em)&quot;&gt;&lt;/span&gt;
  &lt;!-- Fallback content for non-JS browsers. Same img src as the initial, unqualified source element. --&gt;
  &lt;noscript&gt;
    &lt;img src=&quot;/assets/images/9-2014-pledge3/modal-small.jpg&quot;&gt;
  &lt;/noscript&gt;
  &lt;/span&gt;
&lt;div class=&quot;caption&quot;&gt;This wireframe shows how we could prevent users from continueing without first consenting to the larger donation amount. It&amp;rsquo;s a heavy-handed solution.&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;These methods work okay, but they’re flawed because they make it too easy for users to create errors. We want our supporters to have a smooth and successful giving experience. Cluttering that experience with alerts and warnings doesn’t help. Ideally, we’d make it so that errors weren’t possible. For example, we could hide the high-donation gifts from low-donation supporters as in solution 2 above. Of course, we’ve been through this already, and that won’t work for our requirements. &lt;/p&gt;

&lt;p&gt;Which brings us to our last best hope for a reasonable solution. A way to lead with the donation, let supporters choose whatever gifts they want, and ensure supporters don’t walk away resentful. Here it is. Ahem.&lt;/p&gt;

&lt;p&gt;A user, let’s call her Kathy, comes to our donation page. Looking it over, she can see that we’ve already made some guesses about what she’d like to do — we’ve set a default donation of $75, which is indicated in both the form and in a summary panel. That&amp;rsquo;s a little high for her, so she changes to $25. (She may or may not notice the number in upper left corner — I&amp;rsquo;ll call it the summary panel — but that&amp;rsquo;s okay for now). &lt;/p&gt;

&lt;div class=&quot;pic-normal&quot;&gt;
  &lt;span data-picture data-alt=&quot;This wireframe suggests how a summary area could help inform users of any changes to their donation amount.&quot;&gt;
  &lt;span data-src=&quot;/assets/images/9-2014-pledge3/select-amount-small.gif&quot;&gt;&lt;/span&gt;
  &lt;span data-src=&quot;/assets/images/9-2014-pledge3/select-amount-med.gif&quot; data-media=&quot;(min-width: 26.25em)&quot;&gt;&lt;/span&gt;
  &lt;!-- Fallback content for non-JS browsers. Same img src as the initial, unqualified source element. --&gt;
  &lt;noscript&gt;
    &lt;img src=&quot;/assets/images/9-2014-pledge3/select-amount-small.gif&quot;&gt;
  &lt;/noscript&gt;
  &lt;/span&gt;
&lt;div class=&quot;caption&quot;&gt;This wireframe suggests how a summary area could help inform users of any changes to their donation amount.&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;She scrolls down the page a bit, and sees that we offer a variety of thank-you gifts organized by value. They&amp;rsquo;re clearly labeled, so she can tell which are in the $50 category, which are in the $100 category, and which are in the $250 category.&lt;/p&gt;

&lt;p&gt;She likes something in the $50 group and clicks ‘add to cart.’ This triggers a change in the summary panel, where the donation climbs to $50 and the shopping cart icon, which until now has been empty, indicates that it contains one item. With a little animation, or a distinct color, or simply the switch from zero to 1, she notices the change. &lt;/p&gt;

&lt;div class=&quot;pic-normal&quot;&gt;
  &lt;span data-picture data-alt=&quot;This wireframe shows how the donation amount and shopping cart change as a user adds premiums.&quot;&gt;
  &lt;span data-src=&quot;/assets/images/9-2014-pledge3/add-gifts-small.gif&quot;&gt;&lt;/span&gt;
  &lt;span data-src=&quot;/assets/images/9-2014-pledge3/add-gifts-med.gif&quot; data-media=&quot;(min-width: 26.25em)&quot;&gt;&lt;/span&gt;
  &lt;!-- Fallback content for non-JS browsers. Same img src as the initial, unqualified source element. --&gt;
  &lt;noscript&gt;
    &lt;img src=&quot;/assets/images/9-2014-pledge3/add-gifts-small.gif&quot;&gt;
  &lt;/noscript&gt;
  &lt;/span&gt;
&lt;div class=&quot;caption&quot;&gt;This wireframe shows how the donation amount and shopping cart change as a user adds premiums.&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;As with other online shopping sites, she can view her cart to confirm its contents and make changes — or she can continue on her way. Let’s say she does. She sees another gift she likes and adds that. Then another. Her cart changes from 1 to 2 to 3 items and the donation changes to $100 and then $150.&lt;/p&gt;

&lt;p&gt;Finally, she’s ready to move on, so she clicks a button marked “check out” and goes to the last part of the form. This displays fields where she can enter payment details — credit card number, expiration date, and so on. But there’s also a table that reviews her gifts and her total donation. She may not have originally intended to give $225, but that’s what she’s giving now and we make it obvious. Given the visual cues of the summary and shopping cart in the first part of the form, she’s probably not surprised, but if she is — or if she changes her mind — it’s easy to remove a gift or two and reduce the total donation. &lt;/p&gt;

&lt;div class=&quot;pic-normal&quot;&gt;
  &lt;span data-picture data-alt=&quot;Wireframe. Before gathering payment details — or at least before taking the user&#39;s money — we show a summary and enable users to remove items to reduce the donation.&quot;&gt;
  &lt;span data-src=&quot;/assets/images/9-2014-pledge3/remove-stuff-small.gif&quot;&gt;&lt;/span&gt;
  &lt;span data-src=&quot;/assets/images/9-2014-pledge3/remove-stuff-med.gif&quot; data-media=&quot;(min-width: 26.25em)&quot;&gt;&lt;/span&gt;
  &lt;!-- Fallback content for non-JS browsers. Same img src as the initial, unqualified source element. --&gt;
  &lt;noscript&gt;
    &lt;img src=&quot;/assets/images/9-2014-pledge3/remove-stuff-small.gif&quot;&gt;
  &lt;/noscript&gt;
  &lt;/span&gt;
&lt;div class=&quot;caption&quot;&gt;Wireframe. Before gathering payment details — or at least before taking the user&amp;rsquo;s money — we show a summary and enable users to remove items to reduce the donation.&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;I think this solution is the best match for the given business requirements. By leading with the ask, we establish giving as the primary goal. By letting supporters choose freely from the selection of premiums, we create the possibility that at least some might step up their donation. By using a shopping cart icon and language like “add to cart,” we start to feel more and more like a shopping site, which has the advantage of helping supporters form an accurate mental model for how our process works: the more gifts you choose, the more you give.&lt;/p&gt;

&lt;p&gt;We know from user-interviews that at least some supporters are bothered by this overt retail experience. My feeling is we can’t have it both ways. If we’re going to let people choose items that we’re assigning a value to, even letting them select color or size or other attributes, we’ve essentially created a retail experience. Pretending otherwise only makes it more confusing. &lt;/p&gt;

&lt;p&gt;In the beginning of this post, I said it’s not possible to up-sell premiums in a way that doesn’t lose site of the main objective or become unwieldy and confusing. I’ve just presented a way that sorta kinda works. But it’s flawed. It’s complicated, requiring the nonprofit to maintain a store-load of inventory (without becoming a store) and supporters to navigate a bunch of items with different values and keep track of a “shopping cart” even though their first objective is to give. &lt;/p&gt;

&lt;p&gt;And do all of these efforts to up-sell even work? Do they work well enough to justify the added trouble and expense? We don’t really know. That’s why I think it’s better to create a simpler and more straightforward experience like I described in my earlier post. Getting people to give is hard. Make it easy, and I think both nonprofits and supporters will be happier. &lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>The Best Pledge Experience Ever, Part 2</title>
   <link href="http://akiryk.github.io/blog/2014/09/28/pledge-part-2"/>
   <updated>2014-09-28T00:00:00-04:00</updated>
   <id>http://akiryk.github.io/blog/2014/09/28/pledge-part-2</id>
   <content type="html">&lt;p&gt;In my &lt;a href=&quot;/blog/2014/09/16/pledge-part-1/&quot;&gt;last post&lt;/a&gt; about the donation experience, I gave a variety of examples of best and worst practices. In this post, I’d like to sketch out an example site that pulls all the best practices together. It’s just an example, so I’m going to invent a classical-music format public radio station and pretend they’re amenable to my recommendations. However, this being public radio, I’ll work within some constraints that would be silly to ignore.&lt;/p&gt;

&lt;p&gt;First, I’ll assume this station wants to give thank-you gifts (you know, those mugs and tote-bags). It makes the experience more complicated and it isn&amp;rsquo;t really that common among other non-profit organizations, but it’s in the public radio DNA. It needs to be there. In any case, I’ll keep the gift selection process simple, as it should be — this station won’t offer 30+ gift options like some I can think of. (See &lt;a href=&quot;/blog/2014/10/07/pledge-part-3/&quot;&gt;part 3&lt;/a&gt; for more on this).&lt;/p&gt;

&lt;p&gt;Next, I’ll assume there are multiple ways to give support. You can give money, sure, but you can also give real-estate, stocks, an old car — or you could volunteer time. I’ll have to find a way to let users find these various ways without distracting from the primary goal of getting cash donations. &lt;/p&gt;

&lt;p&gt;Okay, let’s start with how users get to the form. There should be a prominent button somewhere in the header that says “donate” or, if not that, something clear and explicit. If an organization has a clean and open header, it might be possible to include “other ways to give” as a discrete link beside the button that can drive to a page that covers the full gamut of options. &lt;/p&gt;

&lt;div class=&quot;pic-normal&quot;&gt;
  &lt;span data-picture data-alt=&quot;Here&#39;s a wireframe showing one way to make it possible for users to find other ways to give support. Donate is primary, but other ways to give are findable.&quot;&gt;
  &lt;span data-src=&quot;/assets/images/9-2014-pledge2/donate-button-small.jpg&quot;&gt;&lt;/span&gt;
  &lt;span data-src=&quot;/assets/images/9-2014-pledge2/donate-button-med.jpg&quot; data-media=&quot;(min-width: 26.25em)&quot;&gt;&lt;/span&gt;
  &lt;!-- Fallback content for non-JS browsers. Same img src as the initial, unqualified source element. --&gt;
  &lt;noscript&gt;
    &lt;img src=&quot;/assets/images/9-2014-pledge2/donate-button-small.jpg&quot;&gt;
  &lt;/noscript&gt;
  &lt;/span&gt;
&lt;div class=&quot;caption&quot;&gt;Here&amp;rsquo;s a wireframe showing one way to make it possible for users to find other ways to give support. Donate is primary, but other ways to give are findable.&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;However, I think a better solution would be to have an item in the navigation called something like “Ways to Give.” It could be a drop down menu that contained links to specific things: Donate your car, Volunteer, Give stock, whatever. I prefer this because it allows each type of support to get its own dedicated place. For example, if a user clicked “volunteer,” we could take them to a page where they could enter times and dates when they were available to help.&lt;/p&gt;

&lt;div class=&quot;pic-normal&quot;&gt;
  &lt;span data-picture data-alt=&quot;In addition to the donate button, provide an item in nav-bar that says &#39;Ways to give.&#39; On click, reveal a dropdown menu with various choices (donate, volunteer, give your car, etc), each one going to a dedicated page.&quot;&gt;
  &lt;span data-src=&quot;/assets/images/9-2014-pledge2/drawing-small.jpg&quot;&gt;&lt;/span&gt;
  &lt;span data-src=&quot;/assets/images/9-2014-pledge2/drawing-med.jpg&quot; data-media=&quot;(min-width: 26.25em)&quot;&gt;&lt;/span&gt;
  &lt;!-- Fallback content for non-JS browsers. Same img src as the initial, unqualified source element. --&gt;
  &lt;noscript&gt;
    &lt;img src=&quot;/assets/images/9-2014-pledge2/drawing-small.jpg&quot;&gt;
  &lt;/noscript&gt;
  &lt;/span&gt;
&lt;div class=&quot;caption&quot;&gt;In addition to the donate button, provide an item in nav-bar that says &amp;lsquo;Ways to give.&amp;rsquo; On click, reveal a dropdown menu with various choices (donate, volunteer, give your car, etc), each one going to a dedicated page.&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;This makes sense, because the things we want many people to do most often (donating) should be highly discoverable, whereas things that fewer people do with less frequency should take some searching to find (paraphrased from Microinteractions, p30). Trying to make everything highly discoverable is self-defeating because it only creates clutter and confusion. Focus, man!&lt;/p&gt;

&lt;p&gt;Great, so a user clicks on the donate button and goes straight to a page where they can donate. This page should have certain characteristics. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It should be free of clutter and distractions&lt;/li&gt;
&lt;li&gt;It should require the user to do as little work as possible&lt;/li&gt;
&lt;li&gt;It should be easy to use on a smartphone or tablet&lt;/li&gt;
&lt;li&gt;It should reinforce the user’s desire to give, if it doesn’t interfere with the other three goals&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Below are a couple of snapshots illustrating a two-step process — choose a donation level and then enter payment details. Starting at the top, there’s a logo and a tagline, but no navigation or other links. This is by design: we want to reduce distractions and keep people on this page. We need the logo to give supporters a sense of place, to let them know they’re giving money to the group they intend to support. The tagline we could possibly do without, but it’s understated, and it contributes to objective #4 in that it reminds users of why they support this station. &lt;/p&gt;

&lt;div class=&quot;pic-large&quot;&gt;
  &lt;span data-picture data-alt=&quot;Here are the two views — first a user selects an amount to donate, then they enter payment details.&quot;&gt;
  &lt;span data-src=&quot;/assets/images/9-2014-pledge2/two-panes-small.jpg&quot;&gt;&lt;/span&gt;
  &lt;span data-src=&quot;/assets/images/9-2014-pledge2/two-panes-med.jpg&quot; data-media=&quot;(min-width: 26.25em)&quot;&gt;&lt;/span&gt;
  &lt;span data-src=&quot;/assets/images/9-2014-pledge2/two-panes-large.jpg&quot; data-media=&quot;(min-width: 63.75em)&quot;&gt;&lt;/span&gt;
  &lt;!-- Fallback content for non-JS browsers. Same img src as the initial, unqualified source element. --&gt;
  &lt;noscript&gt;
    &lt;img src=&quot;/assets/images/9-2014-pledge2/two-panes-small.jpg&quot;&gt;
  &lt;/noscript&gt;
  &lt;/span&gt;
&lt;div class=&quot;caption&quot;&gt;Here are the two views — first a user selects an amount to donate, then they enter payment details.&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;As mentioned, we’re offering thank-you gifts, and they add some inevitable complexity to the interaction. At the very least, we have to explain what they are — a cd or tickets to a performance. We may also have to provide users with a chance to opt-out — no perk for me, thanks. We probably also have to explain the gifts in a more general sense: we aren’t selling them, they’re little perks or rewards for our supporters.&lt;/p&gt;

&lt;p&gt;Given these challenges, the form is about as simple and frictionless as it gets. To start, we only ask supporters a single question — how much do you want to give? Actually, we make it even easier by defaulting to an amount we believe most users will select, in this case $100.&lt;/p&gt;

&lt;p&gt;Explaining the nature of the thank-you gifts is handled with the heading, “Donate and get a gift.” It’s brief and clear, and means we don’t need to put an additional label above the column of gifts or next to each item. Further, these gifts aren’t just random tote bags and tee-shirts. If this is a classical music station, let’s give rewards that enhance our brand — things related to music, like a cd, performance tickets, or fancy headphones. And we can always send a mug or tote-bag (with branding!) for the smaller donations.&lt;/p&gt;

&lt;div class=&quot;pic-normal&quot;&gt;
  &lt;span data-picture data-alt=&quot;Notice how &#39;No gift, thank you&#39; gets displayed once the $100 amount is selected.&quot;&gt;
  &lt;span data-src=&quot;/assets/images/9-2014-pledge2/no-gift-small.gif&quot;&gt;&lt;/span&gt;
  &lt;span data-src=&quot;/assets/images/9-2014-pledge2/no-gift-med.gif&quot; data-media=&quot;(min-width: 26.25em)&quot;&gt;&lt;/span&gt;
  &lt;!-- Fallback content for non-JS browsers. Same img src as the initial, unqualified source element. --&gt;
  &lt;noscript&gt;
    &lt;img src=&quot;/assets/images/9-2014-pledge2/no-gift-small.gif&quot;&gt;
  &lt;/noscript&gt;
  &lt;/span&gt;
&lt;div class=&quot;caption&quot;&gt;Notice how &#39;No gift, thank you&amp;rsquo; gets displayed once the $100 amount is selected.&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Note the micro interaction, in which clicking on an amount reveals an otherwise hidden option not to receive the gift. One might argue this belongs at the top of the page just below the heading, but placing it there would create a minor speed bump I’d rather avoid, a tiny decision we’d be asking every supporter to make before even looking at the gift options. &lt;/p&gt;

&lt;p&gt;Handling payment details requires at least a few inputs, so let’s make sure we only ask supporters for information we really need. Rather than separate fields for first and last name, one field gets it all. Rather than asking for credit card brand, we can figure it out based on the number. Rather than making users scroll through an endless drop down menu of countries, we can provide a smart default and radio buttons for the most common ones based on our target audience (clicking “other&amp;quot; might expose a drop down menu). Rather than making everyone fill out all fields of the address, we can hit the google maps API and pre-populate city, state, and zip code based on street address. &lt;/p&gt;

&lt;p&gt;Is it better to divide the flow into two parts, as I’ve done here? That&amp;rsquo;s a reasonable question — certainly, breaking a long form into too many little pieces can be frustrating for users. However, in this case I see a couple of advantages. First, if the supporter opts not to receive a thank-you gift, we don’t really need to ask for shipping details and could simply remove that part of the second page. Second, it lets us chunk the form into easily digestible pieces. A common criticism of multipart form is that users don’t get a sense of how much they still have to complete. In this case, there are only two parts and there’s an easy-to-find back button, so I don’t believe it’s a problem. &lt;/p&gt;

&lt;div class=&quot;pic-normal&quot;&gt;
  &lt;span data-picture data-alt=&quot;The button text changes as a user toggles between monthly and one-time payments.&quot;&gt;
  &lt;span data-src=&quot;/assets/images/9-2014-pledge2/monthly-anim-small.gif&quot;&gt;&lt;/span&gt;
  &lt;span data-src=&quot;/assets/images/9-2014-pledge2/monthly-anim-med.gif&quot; data-media=&quot;(min-width: 26.25em)&quot;&gt;&lt;/span&gt;
  &lt;!-- Fallback content for non-JS browsers. Same img src as the initial, unqualified source element. --&gt;
  &lt;noscript&gt;
    &lt;img src=&quot;/assets/images/9-2014-pledge2/monthly-anim-small.gif&quot;&gt;
  &lt;/noscript&gt;
  &lt;/span&gt;
&lt;div class=&quot;caption&quot;&gt;The button text changes as a user toggles between monthly and one-time payments.&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Finally, the donate button (above) is specific and helpful. And for users who’d like to pay monthly, we’ve done the math for them.&lt;/p&gt;

&lt;div class=&quot;pic-medium pull-left&quot;&gt;
  





  &lt;span data-picture data-alt=&quot;&quot;&gt;
    &lt;span data-src=&quot;/assets/images/9-2014-pledge2/mobile-tiny.jpg&quot;&gt;&lt;/span&gt;
    &lt;span data-src=&quot;/assets/images/9-2014-pledge2/mobile-small.jpg&quot; data-media=&quot;(min-width: 36.5625em)&quot;&gt;&lt;/span&gt;
    &lt;!-- Fallback content for non-JS browsers. Same img src as the initial, unqualified source element. --&gt;
    &lt;noscript&gt;
      &lt;img src=&quot;/assets/images/9-2014-pledge2/mobile-tiny.jpg&quot;&gt;
    &lt;/noscript&gt;
  &lt;/span&gt;

&lt;div class=&quot;caption&quot;&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;I won’t say too much about designing for mobile, since I covered most of what should be done in my &lt;a href=&quot;/blog/2014/09/16/pledge-part-1/&quot;&gt;last post&lt;/a&gt;. The form should be responsive and take advantage of html5 input types. At large screen sizes, it might make sense to use imagery to make an emotional connection with supporters and reinforce their intent to give. This is a hard one, since radio isn’t a particularly visual medium — it’s not like an anti-hunger charity that could show a child receiving food. But it’s worth exploring, perhaps showing classical music imagery for a classical station like in this example. &lt;/p&gt;

&lt;p&gt;There you have it. A streamlined donation experience complete with various ways to give, gift premiums, and a payment form. The emphasis is on giving, as it should be, but I can imagine some stations would prefer offering more gifts in the hope of up-selling supporters on a larger donation. Does that work? I have some doubts, and I’ll explore them in a next post about how to handle a more robust set of premiums.&lt;/p&gt;

&lt;div class=&quot;pic-large&quot;&gt;
  &lt;span data-picture data-alt=&quot;&quot;&gt;
  &lt;span data-src=&quot;/assets/images/9-2014-pledge2/desktop-small.jpg&quot;&gt;&lt;/span&gt;
  &lt;span data-src=&quot;/assets/images/9-2014-pledge2/desktop-med.jpg&quot; data-media=&quot;(min-width: 26.25em)&quot;&gt;&lt;/span&gt;
  &lt;span data-src=&quot;/assets/images/9-2014-pledge2/desktop-large.jpg&quot; data-media=&quot;(min-width: 63.75em)&quot;&gt;&lt;/span&gt;
  &lt;!-- Fallback content for non-JS browsers. Same img src as the initial, unqualified source element. --&gt;
  &lt;noscript&gt;
    &lt;img src=&quot;/assets/images/9-2014-pledge2/desktop-small.jpg&quot;&gt;
  &lt;/noscript&gt;
  &lt;/span&gt;
&lt;div class=&quot;caption&quot;&gt;&lt;/div&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Bus Ride Reviews — On Web Typography</title>
   <link href="http://akiryk.github.io/blog/2014/09/20/web-type"/>
   <updated>2014-09-20T00:00:00-04:00</updated>
   <id>http://akiryk.github.io/blog/2014/09/20/web-type</id>
   <content type="html">&lt;div class=&quot;pic-medium pull-left&quot;&gt;
  


  &lt;a href=&quot;http://www.abookapart.com/products/on-web-typography&quot;&gt;




  &lt;span data-picture data-alt=&quot;&quot;&gt;
    &lt;span data-src=&quot;/assets/images/9-14-web-type/web-type-tiny.jpg&quot;&gt;&lt;/span&gt;
    &lt;span data-src=&quot;/assets/images/9-14-web-type/web-type-small.jpg&quot; data-media=&quot;(min-width: 36.5625em)&quot;&gt;&lt;/span&gt;
    &lt;!-- Fallback content for non-JS browsers. Same img src as the initial, unqualified source element. --&gt;
    &lt;noscript&gt;
      &lt;img src=&quot;/assets/images/9-14-web-type/web-type-tiny.jpg&quot;&gt;
    &lt;/noscript&gt;
  &lt;/span&gt;

  &lt;/a&gt;

&lt;div class=&quot;caption&quot;&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;I just read this book and wanted to get down some thoughts before I forget them. It’s a decent book that reviews general typographic principles in an accessible way. While it’s pretty basic stuff for an experienced designer, there were some things I’d forgotten, some I never knew, and I’ll probably refer back to it from time to time. &lt;/p&gt;

&lt;p&gt;If your goal is to learn about web fonts from a developer&amp;rsquo;s perspective, this probably isn&amp;rsquo;t a good choice because it&amp;rsquo;s so general and — being in print — can&amp;rsquo;t really compete with rapid changes for which researching online will be a better bet. For instance, he talks about icon fonts which are already becoming out-moded. &lt;/p&gt;

&lt;p&gt;However, if you&amp;rsquo;re a designer who just wants the basics — where to find web fonts, how to test them, and how to get them to display across browsers — this is a good place to start. &lt;/p&gt;

&lt;div class=&quot;pic-medium pull-right&quot;&gt;
  


  &lt;a href=&quot;http://freefaces.simonfosterdesign.com/&quot;&gt;




  &lt;span data-picture data-alt=&quot;Screen grab from the free faces website&quot;&gt;
    &lt;span data-src=&quot;/assets/images/9-14-web-type/freefonts-tiny.jpg&quot;&gt;&lt;/span&gt;
    &lt;span data-src=&quot;/assets/images/9-14-web-type/freefonts-small.jpg&quot; data-media=&quot;(min-width: 36.5625em)&quot;&gt;&lt;/span&gt;
    &lt;!-- Fallback content for non-JS browsers. Same img src as the initial, unqualified source element. --&gt;
    &lt;noscript&gt;
      &lt;img src=&quot;/assets/images/9-14-web-type/freefonts-tiny.jpg&quot;&gt;
    &lt;/noscript&gt;
  &lt;/span&gt;

  &lt;/a&gt;

&lt;div class=&quot;caption&quot;&gt;Screen grab from the free faces website&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Santa Maria doesn&amp;rsquo;t think too much of free fonts, which seems like fair advice in general, but there are exceptions. In the resources section, he sites &lt;a href=&quot;http://hellohappy.org/beautiful-web-type/&quot;&gt;Beautiful Web Type&lt;/a&gt;, a decent list of nice, free fonts, but one that hasn&amp;rsquo;t been updated in over a year. For a more up-to-date discussion, check out &lt;a href=&quot;http://www.smashingmagazine.com/2014/03/12/taking-a-second-look-at-free-fonts/&quot;&gt;Taking a second look at free fonts&lt;/a&gt;, by Jeremiah Shoaf. Also, a &lt;a href=&quot;http://freefaces.simonfosterdesign.com/&quot;&gt;nice collection of free fonts&lt;/a&gt; that aren&amp;rsquo;t necessarily web optimized. &lt;/p&gt;

&lt;p&gt;I liked his simple and approachable way of assessing a typeface so that you can decide whether it works well for your purposes. Although he briefly covers a larger range of considerations, he doesn’t delve much into things like counters, terminals, ascenders/descenders, and all the other aspects of letter anatomy. Instead, he talks about 3 key points for making sense of a typeface:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Contrast&lt;/strong&gt;: Are the stroke-weights relatively even, like with Helvetica — or varied, like with Bodoni?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;x-height&lt;/strong&gt;: Again, is it high like Helvetica or low like Bodoni?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Letterforms&lt;/strong&gt;: Basically, are the letterforms distinct from one another? Do they have a lot of character or little to no character?&lt;/p&gt;

&lt;p&gt;There&amp;rsquo;s a lot more to assessing a typeface that these three characteristics, but I like it as a starting place.&lt;/p&gt;

&lt;p&gt;Although he doesn’t get too into the technical aspects of how computers render letterforms, he mentions how Mac OS uses Core Text and Microsoft uses DirectWrite, and shows some of their quirks. Not much to do about it except to understand the basic unpredictability of how text is rendered on screen.&lt;/p&gt;

&lt;p&gt;For things web designers do have control over, I tended to agree with his take.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;FOUT (the flash of unstyled text). Sometimes thought of a bug, sometimes as a feature, Santa Maria sees it as more of a feature. I tend to agree. Better to get content to users faster even if it means the font might change after you start reading. Look to make the transition from one font to another as undramatic as possible. Specifically, if you set body copy to 18px with a web font, make sure that the backup font doesn&amp;rsquo;t appear too big or small at 18px — you might need a different size for the backup, something that&amp;rsquo;s possible with &lt;a href=&quot;https://developers.google.com/fonts/docs/webfont_loader&quot;&gt;web font loader&lt;/a&gt;. In addition to font size, consider line height, color, and other characteristics as well.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Baseline grids. Great in print because type can be seen through the paper. Nice that it creates a rhythm but exceptionally hard to pull of on web and probably not worth it when dealing with a CMS — where it’s so easy for assets like images to throw off the rhythm.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Consider using a system font for body text, since it will load super quickly and readability is greatly infuenced by familiarity. Although&amp;hellip; The book doesn&amp;rsquo;t say it, but &lt;a href=&quot;http://westleyknight.co.uk/farewell-web-safe-fonts/&quot;&gt;there’s no such thing as web-safe font anymore&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It’s possible to justify type with css but it isn’t usually worth doing because automatic hyphenation is poor and it can create awkward rivers.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That’s all. Check out &lt;a href=&quot;http://www.abookapart.com/products/on-web-typography&quot;&gt;the book&lt;/a&gt; here!&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>The Best Pledge Experience Ever, Part 1</title>
   <link href="http://akiryk.github.io/blog/2014/09/16/pledge-part-1"/>
   <updated>2014-09-16T00:00:00-04:00</updated>
   <id>http://akiryk.github.io/blog/2014/09/16/pledge-part-1</id>
   <content type="html">&lt;p&gt;I’ve been designing the online donation framework for public radio stations, and I think I&amp;rsquo;ve learned a few things worth sharing. It&amp;rsquo;s challenging to create a system that will meet the needs of every station because they each have their own priorities and assumptions. However, using the ideas I&amp;rsquo;ll discuss here, it should be possible to create an excellent user experience for both stations and donors.&lt;/p&gt;

&lt;p&gt;In this post, I’m going to review best practices, highlight some common mistakes, and show real-world examples of both. In &lt;a href=&quot;/blog/2014/09/28/pledge-part-2/&quot;&gt;a followup post&lt;/a&gt;, I’ll show mock-ups for a best-case scenario. I’ll also do a post about &lt;a href=&quot;/blog/2014/10/07/pledge-part-3/&quot;&gt;how to handle premiums&lt;/a&gt; (those tote-bags and other gifts we send supporters), which are common, yet complicated enough to warrant special attention.&lt;/p&gt;

&lt;p&gt;So, what are the ingredients of a great donation form?&lt;/p&gt;

&lt;h4&gt;1. Make it easy to find.&lt;/h4&gt; 

&lt;p&gt;When a supporter clicks on a &amp;ldquo;donate&amp;rdquo; button, follows a link from an email, or goes directly to your site&amp;rsquo;s donate page, they should be able to donate. Sounds obvious, but it’s surprisingly common for organizations to put speed-bumps or even roadblocks along the way.  &lt;/p&gt;

&lt;p&gt;For example, clicking &lt;em&gt;donate now&lt;/em&gt; on the Motor Neurone Disease Association&amp;rsquo;s site takes users to a landing page jam-packed with calls-to-action. Not good:&lt;/p&gt;

&lt;div class=&quot;pic-large&quot;&gt;
  &lt;span data-picture data-alt=&quot;Common anti-pattern: clicking on &#39;donate&#39; button takes users to a cluttered landing page. There are more than 50 buttons and links here — way too much distraction.&quot;&gt;
  &lt;span data-src=&quot;/assets/images/pledge/mnd-steps-small.jpg&quot;&gt;&lt;/span&gt;
  &lt;span data-src=&quot;/assets/images/pledge/mnd-steps-med.jpg&quot; data-media=&quot;(min-width: 26.25em)&quot;&gt;&lt;/span&gt;
  &lt;span data-src=&quot;/assets/images/pledge/mnd-steps-large.jpg&quot; data-media=&quot;(min-width: 63.75em)&quot;&gt;&lt;/span&gt;
  &lt;!-- Fallback content for non-JS browsers. Same img src as the initial, unqualified source element. --&gt;
  &lt;noscript&gt;
    &lt;img src=&quot;/assets/images/pledge/mnd-steps-small.jpg&quot;&gt;
  &lt;/noscript&gt;
  &lt;/span&gt;
&lt;div class=&quot;caption&quot;&gt;Common anti-pattern: clicking on &amp;lsquo;donate&amp;rsquo; button takes users to a cluttered landing page. There are more than 50 buttons and links here — way too much distraction.&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;marginator&quot;&gt;
  &lt;p&gt;
    Options can be a good thing but too many become overwhelming and counter-productive. At the very least, they make it harder for users to accomplish their goal (giving to your organization). 
  &lt;/p&gt;
  &lt;div class=&quot;marginalia&quot;&gt;
    &lt;p&gt;&lt;span class=&quot;margin-heading&quot;&gt;Paradox of Choice &lt;/span&gt;Too many choices can make it &lt;a href=&quot;http://www.ted.com/talks/barry_schwartz_on_the_paradox_of_choice?language=en&quot;&gt;harder to make a choice.&lt;/a&gt; Make it easy for your supporters wherever you can.
    &lt;/p&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Of course, the absense of options can also be a problem. For example, if the only way to donate is to create an account and login first, supporters may just walk away. &lt;/p&gt;

&lt;div class=&quot;pic-normal&quot;&gt;
  &lt;span data-picture data-alt=&quot;I found plenty of examples like this at the sites of several megachurches. It&#39;s not like they&#39;re required to do it and it&#39;s not a good idea.&quot;&gt;
  &lt;span data-src=&quot;/assets/images/pledge/church-login-small.jpg&quot;&gt;&lt;/span&gt;
  &lt;span data-src=&quot;/assets/images/pledge/church-login-med.jpg&quot; data-media=&quot;(min-width: 26.25em)&quot;&gt;&lt;/span&gt;
  &lt;!-- Fallback content for non-JS browsers. Same img src as the initial, unqualified source element. --&gt;
  &lt;noscript&gt;
    &lt;img src=&quot;/assets/images/pledge/church-login-small.jpg&quot;&gt;
  &lt;/noscript&gt;
  &lt;/span&gt;
&lt;div class=&quot;caption&quot;&gt;I found plenty of examples like this at the sites of several megachurches. It&amp;rsquo;s not like they&amp;rsquo;re required to do it and it&amp;rsquo;s not a good idea.&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Requiring login isn&amp;rsquo;t common for public media, but I&amp;rsquo;ve accross it several times in my research — like on this church donation page (above). If you want my money, then let me make a donation. “Login to Give” is a terrible call to action. &lt;/p&gt;

&lt;p&gt;I understand why these kinds of problems come about. In public radio we have the same pressures. We want to add members, we offer diverse ways to give, and we don&amp;rsquo;t want to miss an opportunity to draw people in. &lt;/p&gt;

&lt;div class=&quot;pullquote pull-left&quot;&gt;
  
&lt;div class=&quot;gamma&quot;&gt;When a user clicks the donate button, take them — in one step — to a place where they can enter payment details.&lt;/div&gt;

&lt;/div&gt;

&lt;p&gt;Solution: Start with a reasonably prominent call to action that says “donate.” I like it better than “support” because it says what it means. Make it look clickable, like a button. When a user clicks it, take them — in one step — to a place where they can enter payment details and donate. &lt;/p&gt;

&lt;p&gt;If you have other ways for people to support your organization — like the Motor Neurone Disease Association — that’s fine, but don’t disrupt the donation experience to tout it. One possibility: place a link saying &amp;ldquo;other ways to support&amp;rdquo; discretely at the top of your donation page. &lt;/p&gt;

&lt;p&gt;If you want to build your membership list, include an address field in the donation form. You don&amp;rsquo;t need a separate registration proceedure to do it.&lt;/p&gt;

&lt;p&gt;The folks at &lt;a href=&quot;http://www.water.org&quot;&gt;water.org&lt;/a&gt; do a nice job of this. The donate button seems a bit unnecessarily large, but that&amp;rsquo;s quibbling. It seems like the main reason you’d come to a site like this would be to give money, so go ahead, make it large. More importantly, when you click that big button, you go straight to a clean page that&amp;rsquo;s exclusively designed for taking donations. No competing calls to action. No clutter.&lt;/p&gt;

&lt;div class=&quot;pic-large&quot;&gt;
  &lt;span data-picture data-alt=&quot;Water.org gets users to the donation form in one step.&quot;&gt;
  &lt;span data-src=&quot;/assets/images/pledge/water-steps-small.jpg&quot;&gt;&lt;/span&gt;
  &lt;span data-src=&quot;/assets/images/pledge/water-steps-med.jpg&quot; data-media=&quot;(min-width: 26.25em)&quot;&gt;&lt;/span&gt;
  &lt;span data-src=&quot;/assets/images/pledge/water-steps-large.jpg&quot; data-media=&quot;(min-width: 63.75em)&quot;&gt;&lt;/span&gt;
  &lt;!-- Fallback content for non-JS browsers. Same img src as the initial, unqualified source element. --&gt;
  &lt;noscript&gt;
    &lt;img src=&quot;/assets/images/pledge/water-steps-small.jpg&quot;&gt;
  &lt;/noscript&gt;
  &lt;/span&gt;
&lt;div class=&quot;caption&quot;&gt;Water.org gets users to the donation form in one step.&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;&lt;hr&gt;
&lt;h4&gt;2. Make it easy to use. &lt;/h4&gt; &lt;/p&gt;

&lt;div class=&quot;pic-normal&quot;&gt;
  &lt;span data-picture data-alt=&quot;Part of Livestrong Foundation&#39;s form. Setting a default donation can make it easier on supporters.&quot;&gt;
  &lt;span data-src=&quot;/assets/images/pledge/anchor-amount-small.jpg&quot;&gt;&lt;/span&gt;
  &lt;span data-src=&quot;/assets/images/pledge/anchor-amount-med.jpg&quot; data-media=&quot;(min-width: 26.25em)&quot;&gt;&lt;/span&gt;
  &lt;!-- Fallback content for non-JS browsers. Same img src as the initial, unqualified source element. --&gt;
  &lt;noscript&gt;
    &lt;img src=&quot;/assets/images/pledge/anchor-amount-small.jpg&quot;&gt;
  &lt;/noscript&gt;
  &lt;/span&gt;
&lt;div class=&quot;caption&quot;&gt;Part of Livestrong Foundation&amp;rsquo;s form. Setting a default donation can make it easier on supporters.&lt;/div&gt;
&lt;/div&gt; 

&lt;div class=&quot;marginator&quot;&gt;
  &lt;p&gt;
    Once someone gets to the form — after one click (see above) — it should be as easy to get through as possible. Start by showing me a few gift amounts and defaulting to one. This helps by simplifying my decision making process, letting me move forward to the next part of the form without having to worry over the right amount. In addition, think hard about what data you need to gather so you can remove unnecessary fields and keep the form short. If possible, auto fill input fields where appropriate. The idea is to help people get to your submit button.
  &lt;/p&gt;
  &lt;div class=&quot;marginalia&quot;&gt;
    &lt;p&gt;&lt;span class=&quot;margin-heading&quot;&gt;Cognitive bias&lt;/span&gt; A default amount also sets the user&amp;rsquo;s expectation about what a &amp;ldquo;normal&amp;rdquo; donation should be. This is called &amp;ldquo;anchoring,&amp;rdquo; a cognitive bias that says people have a tendency to put more importance on the first piece of information they get. 
    &lt;/p&gt;&lt;/div&gt;
&lt;/div&gt; 

&lt;p&gt;The Girl Scouts of America &lt;a href=&quot;https://donate.girlscouts.org/give&quot;&gt;donation page&lt;/a&gt; demonstrates many common problems: it’s really long with a number of unnecessary fields, the labels aren&amp;rsquo;t super clear, and it’s awkwardly designed. If they only fixed one thing, however, I&amp;rsquo;d suggest they get rid of the capcha they&amp;rsquo;ve placed at the end of the form. It stops people just before they can give. It feels impersonal and mistrustful. Find another way of handling robot-entries — if they&amp;rsquo;re even really such a concern (I haven&amp;rsquo;t found a single other nonprofit that uses capchas like this).&lt;/p&gt;

&lt;div class=&quot;pic-normal&quot;&gt;
  &lt;span data-picture data-alt=&quot;&quot;&gt;
  &lt;span data-src=&quot;/assets/images/pledge/girlscouts-options-small.jpg&quot;&gt;&lt;/span&gt;
  &lt;span data-src=&quot;/assets/images/pledge/girlscouts-options-med.jpg&quot; data-media=&quot;(min-width: 26.25em)&quot;&gt;&lt;/span&gt;
  &lt;!-- Fallback content for non-JS browsers. Same img src as the initial, unqualified source element. --&gt;
  &lt;noscript&gt;
    &lt;img src=&quot;/assets/images/pledge/girlscouts-options-small.jpg&quot;&gt;
  &lt;/noscript&gt;
  &lt;/span&gt;
&lt;div class=&quot;caption&quot;&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;pic-normal&quot;&gt;
  &lt;span data-picture data-alt=&quot;Girl Scouts: do what you need to do to get rid of the capcha. I haven’t found any other nonprofit that uses one in this way.&quot;&gt;
  &lt;span data-src=&quot;/assets/images/pledge/capcha-small.jpg&quot;&gt;&lt;/span&gt;
  &lt;span data-src=&quot;/assets/images/pledge/capcha-med.jpg&quot; data-media=&quot;(min-width: 26.25em)&quot;&gt;&lt;/span&gt;
  &lt;!-- Fallback content for non-JS browsers. Same img src as the initial, unqualified source element. --&gt;
  &lt;noscript&gt;
    &lt;img src=&quot;/assets/images/pledge/capcha-small.jpg&quot;&gt;
  &lt;/noscript&gt;
  &lt;/span&gt;
&lt;div class=&quot;caption&quot;&gt;Girl Scouts: do what you need to do to get rid of the capcha. I haven’t found any other nonprofit that uses one in this way.&lt;/div&gt;
&lt;/div&gt; 

&lt;p&gt;&lt;a href=&quot;https://www.charitywater.org/donate/&quot;&gt;Charity: Water&lt;/a&gt; (not the same as water.org, above) is a good example of an organization that makes its donation form easy to complete, even on mobile. To minimize the number of fields supporters have to click through, they require just a single “name” field rather than firstname, lastname, and salutation. Smart. &lt;/p&gt;

&lt;div class=&quot;pic-large&quot;&gt;
  &lt;span data-picture data-alt=&quot;Nice and easy&quot;&gt;
  &lt;span data-src=&quot;/assets/images/pledge/charity-water-small.jpg&quot;&gt;&lt;/span&gt;
  &lt;span data-src=&quot;/assets/images/pledge/charity-water-med.jpg&quot; data-media=&quot;(min-width: 26.25em)&quot;&gt;&lt;/span&gt;
  &lt;span data-src=&quot;/assets/images/pledge/charity-water-large.jpg&quot; data-media=&quot;(min-width: 63.75em)&quot;&gt;&lt;/span&gt;
  &lt;!-- Fallback content for non-JS browsers. Same img src as the initial, unqualified source element. --&gt;
  &lt;noscript&gt;
    &lt;img src=&quot;/assets/images/pledge/charity-water-small.jpg&quot;&gt;
  &lt;/noscript&gt;
  &lt;/span&gt;
&lt;div class=&quot;caption&quot;&gt;Nice and easy&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;They’ve eliminated all labels in favor of hints, which makes for an exceptionally clean design. &lt;a href=&quot;http://www.uxmatters.com/mt/archives/2013/02/dont-put-labels-inside-text-boxes-unless-youre-luke-w.php&quot;&gt;Hints in text boxes can cause confusion&lt;/a&gt; (e.g. a user might not enter anything into a field because it already appears completed), but in this case I suspect that&amp;rsquo;s not a problem because the form is so simple. &lt;/p&gt;

&lt;p&gt;The credit card information is easy, just three fields, and the submit button is extremely clear. Saying &amp;ldquo;Give $30&amp;rdquo; is great because it does two things really well — acting as both submit button and summary.&lt;/p&gt;

&lt;div class=&quot;pic-normal&quot;&gt;
  &lt;span data-picture data-alt=&quot;Charity: Water completes your address for you.&quot;&gt;
  &lt;span data-src=&quot;/assets/images/pledge/autofill-small.gif&quot;&gt;&lt;/span&gt;
  &lt;span data-src=&quot;/assets/images/pledge/autofill-med.gif&quot; data-media=&quot;(min-width: 26.25em)&quot;&gt;&lt;/span&gt;
  &lt;!-- Fallback content for non-JS browsers. Same img src as the initial, unqualified source element. --&gt;
  &lt;noscript&gt;
    &lt;img src=&quot;/assets/images/pledge/autofill-small.gif&quot;&gt;
  &lt;/noscript&gt;
  &lt;/span&gt;
&lt;div class=&quot;caption&quot;&gt;Charity: Water completes your address for you.&lt;/div&gt;
&lt;/div&gt; 

&lt;p&gt;Further, they’ve used  smart defaults, like putting the United States in the country field. Even better, they’ve connected with a map API, so when I type the first part of my address, 22 Fresh&amp;hellip;, it suggests addresses that match (e.g. 22 Fresh Street, Arlington; 22 Fresh Pond Lane, Cambridge, etc). Also very cool: the form autocompletes town and zip code based on the street, so as soon as I select 22 Fresh Pond Lane I don’t need to fill out the other fields.&lt;/p&gt;

&lt;h4&gt;Create urgency for your campaign in a meaningful way&lt;/h4&gt;

&lt;p&gt;Probably half the time I discuss donation forms with a station, they raise the question of displaying a fund-drive thermometer. If it actually helps, I&amp;rsquo;d love to see some data, but I&amp;rsquo;m skeptical.&lt;/p&gt;

&lt;div class=&quot;pic-medium pull-right&quot;&gt;
  





  &lt;span data-picture data-alt=&quot;Cliché&quot;&gt;
    &lt;span data-src=&quot;/assets/images/pledge/thermo-tiny.jpg&quot;&gt;&lt;/span&gt;
    &lt;span data-src=&quot;/assets/images/pledge/thermo-small.jpg&quot; data-media=&quot;(min-width: 36.5625em)&quot;&gt;&lt;/span&gt;
    &lt;!-- Fallback content for non-JS browsers. Same img src as the initial, unqualified source element. --&gt;
    &lt;noscript&gt;
      &lt;img src=&quot;/assets/images/pledge/thermo-tiny.jpg&quot;&gt;
    &lt;/noscript&gt;
  &lt;/span&gt;

&lt;div class=&quot;caption&quot;&gt;Cliché&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;I don’t think you create much urgency with a fundraising thermometer. They&amp;rsquo;re overused to the point of being clichéd — and, as with all clichés, are easy to tune out. Even if you don’t tune them out, what do they really say about the nature of the nonprofit organization or why you’d want to support it? Anyway, most people who give do it because they believe in an organization’s mission, not because the organization is almost done with its fundraising drive.&lt;/p&gt;

&lt;p&gt;If you want to create urgency, do it in a way that’s related to your mission. Charity Water does it with imagery and a meaningful challenge: someone is matching all donations up to a million dollars to bring water to a specific place. The fact that it&amp;rsquo;s tied to something specific (the Sahel) helps drive home the point.&lt;/p&gt;

&lt;div class=&quot;pic-normal&quot;&gt;
  &lt;span data-picture data-alt=&quot;&quot;&gt;
  &lt;span data-src=&quot;/assets/images/pledge/sahel-small.gif&quot;&gt;&lt;/span&gt;
  &lt;span data-src=&quot;/assets/images/pledge/sahel-med.gif&quot; data-media=&quot;(min-width: 26.25em)&quot;&gt;&lt;/span&gt;
  &lt;!-- Fallback content for non-JS browsers. Same img src as the initial, unqualified source element. --&gt;
  &lt;noscript&gt;
    &lt;img src=&quot;/assets/images/pledge/sahel-small.gif&quot;&gt;
  &lt;/noscript&gt;
  &lt;/span&gt;
&lt;div class=&quot;caption&quot;&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;h4&gt;Reinforce the supporter’s good intentions&lt;/h4&gt;

&lt;p&gt;The Water Project (not the same as water.org or Charity: Water) also has a nice way of handling this by telling supporters what their gift can be used for. By the way, what is up with all the water organizations having good donation UIs?&lt;/p&gt;

&lt;div class=&quot;pic-normal&quot;&gt;
  &lt;span data-picture data-alt=&quot;The Water Project gives some context for each donation amount.&quot;&gt;
  &lt;span data-src=&quot;/assets/images/pledge/make-a-difference-small.gif&quot;&gt;&lt;/span&gt;
  &lt;span data-src=&quot;/assets/images/pledge/make-a-difference-med.gif&quot; data-media=&quot;(min-width: 26.25em)&quot;&gt;&lt;/span&gt;
  &lt;!-- Fallback content for non-JS browsers. Same img src as the initial, unqualified source element. --&gt;
  &lt;noscript&gt;
    &lt;img src=&quot;/assets/images/pledge/make-a-difference-small.gif&quot;&gt;
  &lt;/noscript&gt;
  &lt;/span&gt;
&lt;div class=&quot;caption&quot;&gt;The Water Project gives some context for each donation amount.&lt;/div&gt;
&lt;/div&gt; 

&lt;h4&gt;Handle premiums wisely&lt;/h4&gt;

&lt;div class=&quot;pic-medium pull-left&quot;&gt;
  





  &lt;span data-picture data-alt=&quot;The classic public radio premium.&quot;&gt;
    &lt;span data-src=&quot;/assets/images/pledge/mug-tiny.jpg&quot;&gt;&lt;/span&gt;
    &lt;span data-src=&quot;/assets/images/pledge/mug-small.jpg&quot; data-media=&quot;(min-width: 36.5625em)&quot;&gt;&lt;/span&gt;
    &lt;!-- Fallback content for non-JS browsers. Same img src as the initial, unqualified source element. --&gt;
    &lt;noscript&gt;
      &lt;img src=&quot;/assets/images/pledge/mug-tiny.jpg&quot;&gt;
    &lt;/noscript&gt;
  &lt;/span&gt;

&lt;div class=&quot;caption&quot;&gt;The classic public radio premium.&lt;/div&gt;
&lt;/div&gt; 

&lt;p&gt;Being in public radio, I’m familiar with the use of thank-you gifts — we call them premiums. We give supporters station-branded mugs, tote bags, calendars, and it’s generally all well and good. It seems like supporters enjoy getting these items, and it helps the station&amp;rsquo;s brand to get their name and logo out into the world. At the very least, something like a branded mug keeps the station in-mind — if not top-of-mind — for supporters who use them.&lt;/p&gt;

&lt;p&gt;However, beyond a certain point, managing gift selection becomes a real drag. It adds complexity for stations, who have to maintain inventory and shopping cart functionality. It adds complexity for supporters, who have to make more decisions and complete more form fields.&lt;/p&gt;

&lt;p&gt;Wanna donate? No problem, just choose a premium (below). Kill me now.&lt;/p&gt;

&lt;div class=&quot;pic-large&quot;&gt;
  &lt;span data-picture data-alt=&quot;This isn&#39;t even all of the gift premiums that a donor can choose.&quot;&gt;
  &lt;span data-src=&quot;/assets/images/pledge/gbh-gifts-small.jpg&quot;&gt;&lt;/span&gt;
  &lt;span data-src=&quot;/assets/images/pledge/gbh-gifts-med.jpg&quot; data-media=&quot;(min-width: 26.25em)&quot;&gt;&lt;/span&gt;
  &lt;span data-src=&quot;/assets/images/pledge/gbh-gifts-large.jpg&quot; data-media=&quot;(min-width: 63.75em)&quot;&gt;&lt;/span&gt;
  &lt;!-- Fallback content for non-JS browsers. Same img src as the initial, unqualified source element. --&gt;
  &lt;noscript&gt;
    &lt;img src=&quot;/assets/images/pledge/gbh-gifts-small.jpg&quot;&gt;
  &lt;/noscript&gt;
  &lt;/span&gt;
&lt;div class=&quot;caption&quot;&gt;This isn&amp;rsquo;t even all of the gift premiums that a donor can choose.&lt;/div&gt;
&lt;/div&gt; 

&lt;p&gt;How to handle premiums is a complicated enough topic that I&amp;rsquo;ve written about it in &lt;a href=&quot;/blog/2014/10/07/pledge-part-3/&quot;&gt;a different post&lt;/a&gt;. For now, I&amp;rsquo;ll leave it at this: keep premiums simple and remember that people give because they want to give. If they want to shop, they&amp;rsquo;ll likely go elsewhere — to an online retailer.&lt;/p&gt;

&lt;h5&gt;Make it work well on mobile&lt;/h5&gt;

&lt;div class=&quot;pic-medium pull-right&quot;&gt;
  





  &lt;span data-picture data-alt=&quot;Set the input type in a way that will display a minimal number keypad when handling phone numbers or credit cards.&quot;&gt;
    &lt;span data-src=&quot;/assets/images/pledge/number-pad-tiny.jpg&quot;&gt;&lt;/span&gt;
    &lt;span data-src=&quot;/assets/images/pledge/number-pad-small.jpg&quot; data-media=&quot;(min-width: 36.5625em)&quot;&gt;&lt;/span&gt;
    &lt;!-- Fallback content for non-JS browsers. Same img src as the initial, unqualified source element. --&gt;
    &lt;noscript&gt;
      &lt;img src=&quot;/assets/images/pledge/number-pad-tiny.jpg&quot;&gt;
    &lt;/noscript&gt;
  &lt;/span&gt;

&lt;div class=&quot;caption&quot;&gt;Set the input type in a way that will display a minimal number keypad when handling phone numbers or credit cards.&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Other than making the donation page responsive, there are a number of optimizations you should make to the form. First, make sure the form is as simple and minimal as possible without compromising clarity and without giving up on collecting information that you need.  &lt;/p&gt;

&lt;p&gt;Next, ensure each input works easily from a smartphone or tablet by taking advantage of HTML5 input types or finding alternatives when they don’t work well. For instance, when asking for a credit card number, use &lt;code&gt;input type=&amp;quot;number&amp;quot; pattern=&amp;quot;[0-9]*&amp;quot;&lt;/code&gt; for a simple number keypad &lt;a href=&quot;http://bradfrostweb.com/blog/mobile/better-numerical-inputs-for-mobile-forms/&quot;&gt;(more on this).&lt;/a&gt; For email addresses, set type=“email” and the smartphone will correctly show an email-optimized keypad. &lt;/p&gt;

&lt;h4&gt;Monthly giving&lt;/h4&gt;

&lt;p&gt;It&amp;rsquo;s generally considered a best practice to &lt;a href=&quot;http://nonprofit.about.com/od/onlinefundraising/a/Why-Your-Charity-Should-Have-A-Monthly-Giving-Program.htm&quot;&gt;encourage monthly giving&lt;/a&gt;. It makes sense, from the organization’s point of view, in that they get a stream of income and build a relationship that remains constant. &lt;/p&gt;

&lt;p&gt;On the other hand, it wouldn’t be my first choice as a donor. It seems like there’s an ever-growing number of subscription services that lock you into monthly credit card payments, and the idea of adding yet another is a bit of a turn-off. It also adds one more task for our supporters to complete — and one more chance to potentially add some confusion. &lt;/p&gt;

&lt;p&gt;If it’s important to receive payments in a regular and predictable way, the nonprofit could do the necessary accounting on their own end. Take my $120 and give yourself $10 a month — fine with me. &lt;/p&gt;

&lt;p&gt;Oh well, it may be that the benefit to the nonprofit outweighs the potential hassle for the supporter. And, of course, many supporters would happily pay by whatever method is most helpful. So include an easy way to make the donation monthly, just be transparent about how you handle the recurring part, because sometimes it isn&amp;rsquo;t clear. For example, if I check next to the $50 donation amount and then check &amp;ldquo;give monthly,&amp;rdquo; am I giving $50 monthly or will my $50 be divided over 12 months? I&amp;rsquo;ve seen both methods used. &lt;/p&gt;

&lt;p&gt;Autism Speaks has a nice way to reassure users that the monthly gift will be no more than they expect. Checking the monthly payment box changes the gift amount to a field where users can set whatever number they’d like.&lt;/p&gt;

&lt;div class=&quot;pic-normal&quot;&gt;
  &lt;span data-picture data-alt=&quot;Monthly gift selection for Autism Speaks&quot;&gt;
  &lt;span data-src=&quot;/assets/images/pledge/monthly-animation-small.gif&quot;&gt;&lt;/span&gt;
  &lt;span data-src=&quot;/assets/images/pledge/monthly-animation-med.gif&quot; data-media=&quot;(min-width: 26.25em)&quot;&gt;&lt;/span&gt;
  &lt;!-- Fallback content for non-JS browsers. Same img src as the initial, unqualified source element. --&gt;
  &lt;noscript&gt;
    &lt;img src=&quot;/assets/images/pledge/monthly-animation-small.gif&quot;&gt;
  &lt;/noscript&gt;
  &lt;/span&gt;
&lt;div class=&quot;caption&quot;&gt;Monthly gift selection for Autism Speaks&lt;/div&gt;
&lt;/div&gt; 
</content>
 </entry>
 
 <entry>
   <title>Composer Music Tracking Application</title>
   <link href="http://akiryk.github.io/portfolio/2014/06/18/composer"/>
   <updated>2014-06-18T00:00:00-04:00</updated>
   <id>http://akiryk.github.io/portfolio/2014/06/18/composer</id>
   <content type="html">&lt;p&gt;Composer is an application that radio stations use to create and manage playlists — both to help stations meet legal requirements regarding the songs they play and to serve listeners, by displaying song, artist, and other information. &lt;/p&gt;

&lt;p&gt;I implemented several features to the admin side of this application, including a typeahead search capability; a new interface for classical music stations; and a way to navigate through calendar views. &lt;/p&gt;

&lt;p&gt;Composer is built with backbone.js, so the work I did was primarily in backbone views, collections, and underscore templates — as well as css. &lt;/p&gt;

&lt;h3&gt;Classical Search&lt;/h3&gt;

&lt;p&gt;Classical music programming demands a different way to search for songs than what works for popular music. Songs are often selected or organized based on composer, like Mozart, rather than artist; the conductor&amp;rsquo;s name is significant; and data about the ensemble and soloists are often used to find a particular piece. Working in backbone, I created a new view and template for the classical search interface.&lt;/p&gt;

&lt;div class=&quot;pic-normal&quot;&gt;
  &lt;span data-picture data-alt=&quot;The search interface for classical music programs&quot;&gt;
  &lt;span data-src=&quot;/assets/images/composer/classical-search-small.jpg&quot;&gt;&lt;/span&gt;
  &lt;span data-src=&quot;/assets/images/composer/classical-search-med.jpg&quot; data-media=&quot;(min-width: 26.25em)&quot;&gt;&lt;/span&gt;
  &lt;!-- Fallback content for non-JS browsers. Same img src as the initial, unqualified source element. --&gt;
  &lt;noscript&gt;
    &lt;img src=&quot;/assets/images/composer/classical-search-small.jpg&quot;&gt;
  &lt;/noscript&gt;
  &lt;/span&gt;
&lt;div class=&quot;caption&quot;&gt;The search interface for classical music programs&lt;/div&gt;
&lt;/div&gt;

&lt;h3&gt;Custom Fields&lt;/h3&gt;

&lt;p&gt;I implemented a form with the option of adding up to three custom rows for data about a given song, and validation in the event a user tries to add more. &lt;/p&gt;

&lt;div class=&quot;pic-large&quot;&gt;
  &lt;span data-picture data-alt=&quot;The search interface for classical music programs&quot;&gt;
  &lt;span data-src=&quot;/assets/images/composer/edit-fields-small.jpg&quot;&gt;&lt;/span&gt;
  &lt;span data-src=&quot;/assets/images/composer/edit-fields-med.jpg&quot; data-media=&quot;(min-width: 26.25em)&quot;&gt;&lt;/span&gt;
  &lt;span data-src=&quot;/assets/images/composer/edit-fields-large.jpg&quot; data-media=&quot;(min-width: 63.75em)&quot;&gt;&lt;/span&gt;
  &lt;!-- Fallback content for non-JS browsers. Same img src as the initial, unqualified source element. --&gt;
  &lt;noscript&gt;
    &lt;img src=&quot;/assets/images/composer/edit-fields-small.jpg&quot;&gt;
  &lt;/noscript&gt;
  &lt;/span&gt;
&lt;div class=&quot;caption&quot;&gt;The search interface for classical music programs&lt;/div&gt;
&lt;/div&gt;

&lt;h3&gt;Calendar Navigation&lt;/h3&gt;

&lt;p&gt;Navigating the calendar view had been possible, but it required going one week at a time by clicking the little arrow icons beside the date. I added a way for administrators to navigate month-by-month and jump to a particular week, indicating with a highlighted row that they&amp;rsquo;d be going to a week and not a single day.&lt;/p&gt;

&lt;div class=&quot;pic-normal&quot;&gt;
  &lt;span data-picture data-alt=&quot;A station administrator can jump to a given week by navigating the calendar month by month.&quot;&gt;
  &lt;span data-src=&quot;/assets/images/composer/calendar-small.gif&quot;&gt;&lt;/span&gt;
  &lt;span data-src=&quot;/assets/images/composer/calendar-med.gif&quot; data-media=&quot;(min-width: 26.25em)&quot;&gt;&lt;/span&gt;
  &lt;!-- Fallback content for non-JS browsers. Same img src as the initial, unqualified source element. --&gt;
  &lt;noscript&gt;
    &lt;img src=&quot;/assets/images/composer/calendar-small.gif&quot;&gt;
  &lt;/noscript&gt;
  &lt;/span&gt;
&lt;div class=&quot;caption&quot;&gt;A station administrator can jump to a given week by navigating the calendar month by month.&lt;/div&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>5 Favorite (Sans-Serif) Fonts from Google</title>
   <link href="http://akiryk.github.io/blog/2014/01/24/best-free-fonts"/>
   <updated>2014-01-24T00:00:00-05:00</updated>
   <id>http://akiryk.github.io/blog/2014/01/24/best-free-fonts</id>
   <content type="html">&lt;p&gt;I was recently working on a project where we needed to choose a web font for body copy. There are thousands of choices, but far fewer that actually met our needs: the typeface should be good for reading over several paragraphs or pages. It should come in a few weights so that we&amp;rsquo;d have flexibility going forward. It should feel accessible and friendly but fairly plain — nothing too edgy or opinionated.&lt;/p&gt;

&lt;p&gt;And it had to be free.&lt;/p&gt;

&lt;p&gt;Following are the best ones I&amp;rsquo;ve found — all from google. Why? Because they&amp;rsquo;ll be served up quickly and reliably and because Google will handle quirks and oddities in how to handle compatibility issues. &lt;/p&gt;

&lt;p&gt;I found several that seemed nice but only came in one or two weights. While this isn&amp;rsquo;t necessarily a huge issue now — and, to keep file size down, we may not load more than a couple of weights anyway — it could become an issue at some point in the future as design needs change. Droid Sans, for example, is nice but only available in normal and bold without italic. So, the following all include at least four weights. &lt;/p&gt;

&lt;p&gt;Finally, here they are — each of the following paragraphs is set in the font it&amp;rsquo;s describing. I&amp;rsquo;ll take a look at serif fonts later&amp;hellip;&lt;/p&gt;

&lt;p&gt;&lt;link href=&#39;http://fonts.googleapis.com/css?family=Lato&#39; rel=&#39;stylesheet&#39; type=&#39;text/css&#39;&gt;
&lt;link href=&#39;http://fonts.googleapis.com/css?family=Ubuntu&#39; rel=&#39;stylesheet&#39; type=&#39;text/css&#39;&gt;
&lt;link href=&#39;http://fonts.googleapis.com/css?family=Roboto&#39; rel=&#39;stylesheet&#39; type=&#39;text/css&#39;&gt;
&lt;link href=&#39;http://fonts.googleapis.com/css?family=OpenSans&#39; rel=&#39;stylesheet&#39; type=&#39;text/css&#39;&gt;
&lt;link href=&#39;http://fonts.googleapis.com/css?family=PT+Sans&#39; rel=&#39;stylesheet&#39; type=&#39;text/css&#39;&gt;&lt;/p&gt;

&lt;style type=&quot;text/css&quot;&gt;

  .arial {
    color: #333;
    font-family: &#39;Arial&#39;;
    font-size: 14px;
  }
  .lato { 
    color: #333;
    font-family: &#39;Lato&#39;, sans-serif;
    font-size: .95em;
  }
  .roboto {
    font-family: &#39;Roboto&#39;, sans-serif;
    font-size: .95em;
  }
  .open-sans {
    color: #333;
    font-family: &#39;Open Sans&#39;, sans-serif;
    font-size:.9em;
  }
  .ubuntu {
    color: #444;
    font-family: &#39;Ubuntu&#39;, sans-serif;
    font-size: .95em;
  }
  .pt-sans {
    font-family: &#39;PT Sans&#39;, sans-serif;
    font-size: .95em;
  }
  .massive-letter {
    display: block;
    font-size: 150px;
    line-height: 1;
  }
  .massive-letter-caption {
    color: #999;
    font-size: .75em;
    display: block;
    margin-bottom: 1.5em;
  }

&lt;/style&gt;

&lt;p class=&quot;open-sans&quot;&gt;&lt;span class=&quot;massive-letter&quot;&gt;Aa&lt;/span&gt;&lt;span class=&quot;massive-letter-caption&quot;&gt;Open Sans, 400&lt;/span&gt;
Open Sans is one of my favorites — that&amp;rsquo;s why I&amp;rsquo;m putting it first — because it&amp;rsquo;s clean and readable. It&amp;rsquo;s got nice open counters, a comfortable x-height, and plenty of weights to choose from (something like ten). It&amp;rsquo;s also become popular — not necessarily a bad thing at all. Because it&amp;rsquo;s common, it&amp;rsquo;s likely
to be cached on many people&amp;rsquo;s computers. Nice for performance. As with the other fonts, take a look at how it handles the phrase &amp;ldquo;1 Il ocean&amp;rdquo; at a small size (below). Not perfect – the i and the l aren&amp;rsquo;t super distinguishable — but it does a tiny bit better than Arial (shown beside). The &amp;lsquo;c&amp;rsquo; is nice and open, so contrasts nicely with the &#39;o&amp;rsquo; and &#39;e&amp;rsquo;.&lt;/p&gt;

&lt;div class=&quot;pic-medium pull-left&quot;&gt;
  &lt;img src=&quot;/assets/images/free-google-sans-serif-fonts/opensans-x-height-400.gif&quot;&gt;
&lt;/div&gt;

&lt;p class=&quot;open-sans&quot;&gt;Some lorem ipsum text: Ethnic Pitchfork tofu year. Drinking vinegar wayfarers, roof party art party McSweeney&amp;rsquo;s beard
tousled flexitarian. Blue Bottle aesthetic tofu slow-carb, fixie kale chips artisan typewriter gentrify Truffaut
post-ironic VHS. Pinterest fixie mumblecore, mustache fingerstache roof party tofu pug kitsch brunch Echo Park
gluten-free PBR street art lomo. Wolf fap biodiesel Intelligentsia, Tumblr letterpress Carles irony YOLO kale chips
try-hard Portland. Twee 3 wolf moon put a bird on it quinoa banjo whatever. Bushwick Schlitz locavore ennui.&lt;/p&gt;

&lt;p class=&quot;open-sans&quot; style=&quot;font-size:14px&quot;&gt;Open Sans: 1 Il ocean. | &lt;span class=&quot;arial&quot;&gt;Arial: 1 Il ocean.&lt;/span&gt;&lt;/p&gt;

&lt;p class=&quot;open-sans&quot;&gt;Authentic butcher leggings cray sartorial tattooed, Portland High Life ugh. Aesthetic Blue Bottle hoodie selvage Brooklyn polaroid. Photo booth Portland 90&amp;rsquo;s Williamsburg, deep v selvage cornhole church-key Tonx. Cornhole mustache post-ironic, art party banh mi Cosby sweater church-key butcher. Ugh quinoa McSweeney&amp;rsquo;s, flannel post-ironic stumptown hoodie vegan Blue Bottle synth tote bag street art swag. +1 quinoa VHS, hella church-key Cosby sweater asymmetrical iPhone shabby chic banh mi Odd Future 3 wolf moon pork belly organic. Small batch brunch tattooed, readymade lomo raw denim American Apparel four loko Odd Future fixie.&lt;/p&gt;

&lt;p class=&quot;pt-sans&quot;&gt;&lt;span class=&quot;massive-letter&quot;&gt;Aa&lt;/span&gt;&lt;span class=&quot;massive-letter-caption&quot;&gt;pt-sans&lt;/span&gt;PT-Sans. Ethnic Pitchfork tofu year. Drinking vinegar wayfarers, roof party art party McSweeney&amp;rsquo;s beard tousled flexitarian. Blue Bottle aesthetic tofu slow-carb, fixie kale chips artisan typewriter gentrify Truffaut post-ironic VHS. Pinterest fixie mumblecore, mustache fingerstache roof party tofu pug kitsch brunch Echo Park gluten-free PBR street art lomo. Wolf fap biodiesel Intelligentsia, Tumblr letterpress Carles irony YOLO kale chips try-hard Portland. Twee 3 wolf moon put a bird on it quinoa banjo whatever. Bushwick Schlitz locavore ennui.&lt;/p&gt;

&lt;div class=&quot;pic-medium pull-left&quot;&gt;
  &lt;img src=&quot;/assets/images/free-google-sans-serif-fonts/pt-x-height-400.gif&quot;&gt;
&lt;/div&gt;

&lt;p class=&quot;pt-sans&quot; style=&quot;font-size:14px&quot;&gt;A little test: 1 Il ocean. | &lt;span class=&quot;arial&quot;&gt;With arial: 1 Il ocean.&lt;/span&gt; &lt;/p&gt;

&lt;p class=&quot;pt-sans&quot;&gt;Authentic butcher leggings cray sartorial tattooed, Portland High Life ugh.
Aesthetic Blue Bottle hoodie selvage Brooklyn polaroid. Photo booth Portland 90&amp;rsquo;s Williamsburg,
deep v selvage cornhole church-key Tonx. Cornhole mustache post-ironic, art party banh mi Cosby
sweater church-key butcher. Ugh quinoa McSweeney&amp;rsquo;s, flannel post-ironic stumptown hoodie vegan
Blue Bottle synth tote bag street art swag. +1 quinoa VHS, hella church-key Cosby sweater asymmetrical
iPhone shabby chic banh mi Odd Future 3 wolf moon pork belly organic. Small batch brunch tattooed,
readymade lomo raw denim American Apparel four loko Odd Future fixie.&lt;/p&gt;

&lt;p class=&quot;lato&quot;&gt;&lt;span class=&quot;massive-letter&quot;&gt;Aa&lt;/span&gt;&lt;span class=&quot;massive-letter-caption&quot;&gt;Lato font, 400&lt;/span&gt;
Lato. Ethnic Pitchfork tofu year. Drinking vinegar wayfarers, roof party art party McSweeney&amp;rsquo;s beard tousled flexitarian. Blue Bottle aesthetic tofu slow-carb, fixie kale chips artisan typewriter gentrify Truffaut post-ironic VHS. Pinterest fixie mumblecore, mustache fingerstache roof party tofu pug kitsch brunch Echo Park gluten-free PBR street art lomo. Wolf fap biodiesel Intelligentsia, Carles irony YOLO kale chips try-hard Portland. Twee 3 wolf moon put a bird on it quinoa banjo whatever. Bushwick Schlitz locavore ennui.&lt;/p&gt;

&lt;p class=&quot;lato&quot; style=&quot;font-size:14px&quot;&gt;With lato: 1 Il ocean. | &lt;span class=&quot;arial&quot;&gt;With arial: 1 Il ocean.&lt;/span&gt; &lt;/p&gt;

&lt;div class=&quot;pic-medium pull-left&quot;&gt;
  &lt;img src=&quot;/assets/images/free-google-sans-serif-fonts/lato-x-height-400.gif&quot;&gt;
&lt;/div&gt;

&lt;p class=&quot;lato&quot;&gt;Authentic butcher leggings cray sartorial tattooed, Portland High Life ugh. Aesthetic Blue Bottle hoodie selvage Brooklyn polaroid. Photo booth Portland 90&amp;rsquo;s Williamsburg, deep v selvage cornhole church-key Tonx. Cornhole mustache post-ironic, art party banh mi Cosby sweater church-key butcher. Ugh quinoa McSweeney&amp;rsquo;s, flannel post-ironic stumptown hoodie vegan Blue Bottle synth tote bag street art swag. +1 quinoa VHS, hella church-key Cosby sweater asymmetrical iPhone shabby chic banh mi Odd Future 3 wolf moon pork belly organic. Small batch brunch tattooed, readymade lomo raw denim American Apparel four loko Odd Future fixie.&lt;/p&gt;

&lt;p class=&quot;roboto&quot;&gt;&lt;span class=&quot;massive-letter&quot;&gt;Aa&lt;/span&gt;&lt;span class=&quot;massive-letter-caption&quot;&gt;Roboto font, 300&lt;/span&gt;Roboto. Ethnic Pitchfork tofu year. Drinking vinegar wayfarers, roof party art party McSweeney&amp;rsquo;s beard tousled flexitarian. Blue Bottle aesthetic tofu slow-carb, fixie kale chips artisan typewriter gentrify Truffaut post-ironic VHS. Pinterest fixie mumblecore, mustache fingerstache roof party tofu pug kitsch brunch Echo Park gluten-free PBR street art lomo. Wolf fap biodiesel Intelligentsia, Tumblr letterpress Carles irony YOLO kale chips try-hard Portland. Twee 3 wolf moon put a bird on it quinoa banjo whatever. Bushwick Schlitz locavore ennui.&lt;/p&gt;

&lt;div class=&quot;pic-medium pull-left&quot;&gt;
  &lt;img src=&quot;/assets/images/free-google-sans-serif-fonts/roboto-x-height-400.gif&quot;&gt;
&lt;/div&gt;

&lt;p class=&quot;roboto&quot; style=&quot;font-size:14px&quot;&gt;A little test: 1 Il ocean. | &lt;span class=&quot;arial&quot;&gt;With arial: 1 Il ocean.&lt;/span&gt;&lt;/p&gt;

&lt;p class=&quot;roboto&quot;&gt;Authentic butcher leggings cray sartorial tattooed, Portland High Life ugh. Aesthetic Blue Bottle hoodie selvage Brooklyn polaroid. Photo booth Portland 90&amp;rsquo;s Williamsburg, deep v selvage cornhole church-key Tonx. Cornhole mustache post-ironic, art party banh mi Cosby sweater church-key butcher. Ugh quinoa McSweeney&amp;rsquo;s, flannel post-ironic stumptown hoodie vegan Blue Bottle synth tote bag street art swag. +1 quinoa VHS, hella church-key Cosby sweater asymmetrical iPhone shabby chic banh mi Odd Future 3 wolf moon pork belly organic. Small batch brunch tattooed, readymade lomo raw denim American Apparel four loko Odd Future fixie.&lt;/p&gt;

&lt;p class=&quot;ubuntu&quot;&gt;&lt;span class=&quot;massive-letter&quot;&gt;Aa&lt;/span&gt;&lt;span class=&quot;massive-letter-caption&quot;&gt;Ubuntu&lt;/span&gt;Ubuntu. Ethnic Pitchfork tofu year. Drinking vinegar wayfarers, roof party art party McSweeney&amp;rsquo;s beard tousled flexitarian. Blue Bottle aesthetic tofu slow-carb, fixie kale chips artisan typewriter gentrify Truffaut post-ironic VHS. Pinterest fixie mumblecore, mustache fingerstache roof party tofu pug kitsch brunch Echo Park gluten-free PBR street art lomo. Wolf fap biodiesel Intelligentsia, Tumblr letterpress Carles irony YOLO kale chips try-hard Portland. Twee 3 wolf moon put a bird on it quinoa banjo whatever. Bushwick Schlitz locavore ennui.&lt;/p&gt;

&lt;div class=&quot;pic-medium pull-left&quot;&gt;
  &lt;img src=&quot;/assets/images/free-google-sans-serif-fonts/ubuntu-x-height-400.gif&quot;&gt;
&lt;/div&gt;

&lt;p class=&quot;ubuntu&quot; style=&quot;font-size:14px&quot;&gt;A little test: 1 Il ocean. | &lt;span class=&quot;arial&quot;&gt;With arial: 1 Il ocean.&lt;/span&gt; &lt;/p&gt;

&lt;p class=&quot;ubuntu&quot;&gt;Authentic butcher leggings cray sartorial tattooed, Portland High Life ugh. Aesthetic Blue Bottle hoodie selvage Brooklyn polaroid. Photo booth Portland 90&amp;rsquo;s Williamsburg, deep v selvage cornhole church-key Tonx. Cornhole mustache post-ironic, art party banh mi Cosby sweater church-key butcher. Ugh quinoa McSweeney&amp;rsquo;s, flannel post-ironic stumptown hoodie vegan Blue Bottle synth tote bag street art swag. +1 quinoa VHS, hella church-key Cosby sweater asymmetrical iPhone shabby chic banh mi Odd Future 3 wolf moon pork belly organic. Small batch brunch tattooed, readymade lomo raw denim American Apparel four loko Odd Future fixie.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>What's Wrong With Browsing?</title>
   <link href="http://akiryk.github.io/blog/2014/01/15/whats-wrong-with-browsing"/>
   <updated>2014-01-15T00:00:00-05:00</updated>
   <id>http://akiryk.github.io/blog/2014/01/15/whats-wrong-with-browsing</id>
   <content type="html">&lt;p&gt;Compared with walking into a real-world book store, browsing for a book online kind of sucks. I don’t mean buying a book online or reading a book on screen or anything like that. Those things are fine. Simply finding a book that you already know you want and purchasing it is pretty well taken care of by Amazon and Apple. I&amp;rsquo;m talking about the experience of looking for something you don&amp;rsquo;t know you want. Browsing, in the sense of wandering into your local independent bookseller and just poking around. That experience just isn&amp;rsquo;t handled very well in the digital world.&lt;/p&gt;

&lt;p&gt;Maybe there’s an opportunity there for someone.&lt;/p&gt;

&lt;h3&gt;What Job Do We Hire Bookstores To Provide?&lt;/h3&gt;

&lt;p&gt;Perhaps you’re familiar with the marketing study that &lt;a href=&quot;http://www.earwolf.com/episode/creating-scarcity/&quot;&gt;looked at milkshake sales&lt;/a&gt;. Marketers saw that their fast-food business was selling a lot of milkshakes in the mornings. Instead of just patting each other on the backs and saying, good for us, we sell milkshakes at a weird hour, they asked a novel question: &lt;/p&gt;

&lt;p&gt;What job are people hiring these milkshakes to do? &lt;/p&gt;

&lt;p&gt;What they learned is that people wanted a breakfast that could be easily consumed in a car while driving to work — sucked through a straw, to put it plainly — which suggested they could make money by selling other, possibly more nutritious (although probably not), drinkable breakfast options.&lt;/p&gt;

&lt;p&gt;That same approach could be applied to book browsing. What service or services do people hire a bookstore for when they browse — and could an app or website provide any of those services better? (Gee, am I really advocating yet another blow against beleaguered local book sellers? Hmmm. I&amp;rsquo;m not &lt;em&gt;advocating&lt;/em&gt; it, I&amp;rsquo;m just saying it would be nice to have a better online experience&amp;hellip; Maybe that&amp;rsquo;s weak. I&amp;rsquo;ll have to think about this some more).&lt;/p&gt;

&lt;p&gt;Anyway.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ll use myself as a study subject. Here’s what I believe I’m hiring when I browse at the Book ’n Bar, my local shop here in France:  &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Free entertainment. Unless I buy a coffee (or a book). Either way, the browsing itself is fun and costs nothing.&lt;/li&gt;
&lt;li&gt;A chance to relax. It’s me-time, to use a helpful cliché.&lt;/li&gt;
&lt;li&gt;Inspiration. I don’t mean that in a spiritual sense, I just mean that all the images and titles and ideas trigger associations, new thoughts. It’s a chance to learn something and it’s energizing.&lt;/li&gt;
&lt;li&gt;Connection. Like many book stores, this one serves a particular community, something it does by specializing in certain kinds of books (American and British novels), hiring a certain kind of staff (friendly, speak English), and encouraging people to stick around (with croissants and comfortable chairs). It’s nice to feel connected to a community, even if you’re just a visitor.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Does online browsing provide these services? I don’t think very well. It’s free, but it&amp;rsquo;s not very entertaining. It isn&amp;rsquo;t fun. You could argue it&amp;rsquo;s educational — but it&amp;rsquo;s not inspiring. In short, there’s room for improvement. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;I want browsing to be fun&lt;/strong&gt;. Not &amp;ldquo;look, Ma, no hands!&amp;rdquo; fun — but I&amp;rsquo;d like some entertainment value at least. Does this interface look fun? &lt;/p&gt;

&lt;div class=&quot;pic-normal&quot;&gt;
  &lt;span data-picture data-alt=&quot;The iBooks Top Charts screen on an iPad.&quot;&gt;
  &lt;span data-src=&quot;/assets/images/book-browsing/ibooks-topcharts-small.jpg&quot;&gt;&lt;/span&gt;
  &lt;span data-src=&quot;/assets/images/book-browsing/ibooks-topcharts-med.jpg&quot; data-media=&quot;(min-width: 26.25em)&quot;&gt;&lt;/span&gt;
  &lt;!-- Fallback content for non-JS browsers. Same img src as the initial, unqualified source element. --&gt;
  &lt;noscript&gt;
    &lt;img src=&quot;/assets/images/book-browsing/ibooks-topcharts-small.jpg&quot;&gt;
  &lt;/noscript&gt;
  &lt;/span&gt;
&lt;div class=&quot;caption&quot;&gt;The iBooks Top Charts screen on an iPad.&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;No, it’s a functional and usable way to identify a book, but that’s about it. You wouldn’t want to spend thirty minutes browsing through lists like that.&lt;/p&gt;

&lt;p&gt;Okay, perhaps that’s a bit of a low blow, since you might expect a section on top books to employ a list-style format. But monotonous lists are the rule when it comes to browsing online. On Amazon and Barnes and Noble and the service used by public libraries, the standard seems to be to display a thumbnail image of a book cover beside the title and maybe a little bit of information. Thumbnail after thumbnail after thumbnail. &lt;/p&gt;

&lt;p&gt;Contrast that with the good old Book ’n Bar (why the goofy name? I don’t know, but I suspect it’s some kind of British-ism). It’s visually interesting. There are different shapes and colors, there’s contrast, there’s rhythm. There’s clearly order, but it’s far from repetitive or monotonous. It’s quirky. It feels personal, with hand-written notices on the message board and selected promotions that the staff believes will appeal to their clientele.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;I want to slow down, relax, feel at ease&lt;/strong&gt;.  Here’s the Amazon app&amp;rsquo;s best-seller page and the pop-up you get if you select one of them. Very business-like and to-the-point. Find it, buy it, you’re done.&lt;/p&gt;

&lt;div class=&quot;pic-large&quot;&gt;
  &lt;span data-picture data-alt=&quot;The Amazon bookstore app&quot;&gt;
  &lt;span data-src=&quot;/assets/images/book-browsing/amazon-before-after-small.jpg&quot;&gt;&lt;/span&gt;
  &lt;span data-src=&quot;/assets/images/book-browsing/amazon-before-after-med.jpg&quot; data-media=&quot;(min-width: 26.25em)&quot;&gt;&lt;/span&gt;
  &lt;span data-src=&quot;/assets/images/book-browsing/amazon-before-after-large.jpg&quot; data-media=&quot;(min-width: 63.75em)&quot;&gt;&lt;/span&gt;
  &lt;!-- Fallback content for non-JS browsers. Same img src as the initial, unqualified source element. --&gt;
  &lt;noscript&gt;
    &lt;img src=&quot;/assets/images/book-browsing/amazon-before-after-small.jpg&quot;&gt;
  &lt;/noscript&gt;
  &lt;/span&gt;
&lt;div class=&quot;caption&quot;&gt;The Amazon bookstore app&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;But browsing isn’t about finding and buying. It’s about meandering. It’s about taking your time.  &lt;/p&gt;

&lt;p&gt;It should be easy to pick something up, flip through the pages, and put it down again —  this is literally true in the case of the real world; could it be metaphorically true in the case of digital? The iBooks store and Amazon may be aiming to provide that experience — very generally — but if they are, they’re wide of the mark. &lt;/p&gt;

&lt;p&gt;You can click on a book for more information, but it’s fairly one-dimensional, technical even. Look at the iBooks example: a prominent price and buy button, an official description, and a list of publishing details. You can download a sample — and that is great — but it takes you out of the browsing experience, and it’s never that quick. &lt;/p&gt;

&lt;div class=&quot;pic-normal&quot;&gt;
  &lt;span data-picture data-alt=&quot;The iBooks book details page.&quot;&gt;
  &lt;span data-src=&quot;/assets/images/book-browsing/ibooks-details-small.jpg&quot;&gt;&lt;/span&gt;
  &lt;span data-src=&quot;/assets/images/book-browsing/ibooks-details-med.jpg&quot; data-media=&quot;(min-width: 26.25em)&quot;&gt;&lt;/span&gt;
  &lt;!-- Fallback content for non-JS browsers. Same img src as the initial, unqualified source element. --&gt;
  &lt;noscript&gt;
    &lt;img src=&quot;/assets/images/book-browsing/ibooks-details-small.jpg&quot;&gt;
  &lt;/noscript&gt;
  &lt;/span&gt;
&lt;div class=&quot;caption&quot;&gt;The iBooks book details page.&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;At the Book ’n Bar, I can pick up a book and quickly get a ton of information. Much of it — like the weight, the texture, the quality of the printing — is immediate. And it’s easy to turn between promotional quotes on the back, an official description on the inner flap, and the actual content itself. That ease fosters further exploration.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;I want to feel energized and inspired&lt;/strong&gt;. The digital sellers give you data. They give you meta-data. They try to move you down the funnel from looking to buying. They don’t inspire you. They don’t surprise you. There’s no serendipity. &lt;/p&gt;

&lt;p&gt;I like serendipity.&lt;/p&gt;

&lt;p&gt;I like a balance between what-I-think-I’m-looking-for and what-I-didn&amp;rsquo;t-realize-I-should-be-looking-for. Bookstores that  achieve this balance are the best ones. They energize and inspire you with great stuff you hadn&amp;rsquo;t been thinking about or never knew existed.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;I want a feeling of community&lt;/strong&gt;. The selection on Apple or Amazon is a weird blend of generically mass-market and overly personalized. It’s not special. You don’t get the sense that there’s a unique voice to the iBooks store — beyond the general Apple design sensibility. Amazon doesn’t give the impression of being a member of a community; being local isn’t their thing&lt;/p&gt;

&lt;p&gt;A positive browsing experience doesn’t necessarily require that a bookstore have a strong community-based point of view. But it helps to have some kind of grounding. The Harvard Coop has a particular vibe that feels Harvard-y and Cambridge-y (even though it’s owned by Barnes &amp;amp; Noble). The Book ’n Bar in Aix-en-Provence feels like a slice of the British world inserted in France. These are qualities that make the experience feel interesting and enriching.&lt;/p&gt;

&lt;h3&gt;Can a digital experience provide these things?&lt;/h3&gt;

&lt;p&gt;I’m not asking if a digital experience can do the same things that a bookstore does. I&amp;rsquo;m just asking if a digital browsing experience can solve the same problems that bookstores solve — that is, can it be fun? Can it be relaxing? Can it energize or inspire? Can it create community? I think it can. &lt;/p&gt;

&lt;p&gt;How? I’ll have to think about that. &lt;/p&gt;

&lt;p&gt;Editor&amp;rsquo;s note: I recently returned to this topic — check out my post about &lt;a href=&quot;/blog/2015/12/11/better-book-browsing/&quot;&gt;a better browsing experience&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Help With Learning Javascript Properly</title>
   <link href="http://akiryk.github.io/blog/2013/12/16/learn-js"/>
   <updated>2013-12-16T00:00:00-05:00</updated>
   <id>http://akiryk.github.io/blog/2013/12/16/learn-js</id>
   <content type="html">&lt;p&gt;Ed note: this is an edited version of &lt;a href=&quot;http://javascriptissexy.com/how-to-learn-javascript-properly/&quot;&gt;How To Learn Javascript Properly&lt;/a&gt;. I didn&amp;rsquo;t write it and claim no credit, but I think it&amp;rsquo;s a great resource. I&amp;rsquo;ve recreated it here with a couple of minor changes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Instead of listing several alteratives for each reading assignment, I&amp;rsquo;ve just given one. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Instead of packing lots of stuff into two-week segments, I&amp;rsquo;ve packed less stuff into one-week segments. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;I&amp;rsquo;ve removed most of the words of encouragement. Sorry. You&amp;rsquo;ll do fine!&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Before You Start&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Buy &lt;em&gt;&lt;a href=&quot;http://www.amazon.com/gp/product/1118026691/ref=as_li_tf_tl?ie=UTF8&amp;amp;camp=1789&amp;amp;creative=9325&amp;amp;creativeASIN=1118026691&amp;amp;linkCode=as2&amp;amp;tag=interhaptic-20&quot;&gt;Professional Javascript for Web Developers&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Sign up for an account on StackOverflow, a forum for asking programming questions.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Sign up for an account on Codecademy, a free tool for learning programming.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Sign up for an account on JSFiddle and/or CodePen, free tools for hacking around with front-end development.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If you don&amp;rsquo;t already know your way around Chrome&amp;rsquo;s dev tools (you may not know them as well as you think), check out &lt;a href=&quot;http://discover-devtools.codeschool.com/&quot;&gt;this set of tutorials&lt;/a&gt; from codeschool.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Visit the &lt;a href=&quot;http://www.reddit.com/r/learnjavascript/comments/1ceefw/learn_javascript_properly_omnibus_post/&quot;&gt;Learn JS Reddit&lt;/a&gt;; it&amp;rsquo;s a useful complement to the class with suggestions and problems to work on. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If you do not already know HTML and CSS very well, complete the &lt;a href=&quot;http://www.codecademy.com/tracks/web&quot;&gt;Web Fundamentals Track&lt;/a&gt; on Codecademy.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Last but not least, read through the &lt;a href=&quot;http://javascriptissexy.com/how-to-learn-javascript-properly/&quot;&gt;original guide here&lt;/a&gt;. Only use this if you decide you like my simplified sequence. Also, the original has good advice about how to use Codecademy (hint: don&amp;rsquo;t use it as a crutch) and how to learn (hint: lots of playing around in your browser&amp;rsquo;s console window).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;My own suggestion:&lt;/strong&gt; Find a good way to memorize at least the basics with a good flash card app. I like &lt;a href=&quot;http://brainscape.com/&quot;&gt;brainscape&lt;/a&gt;, and I&amp;rsquo;ve created a &lt;a href=&quot;https://www.brainscape.com/study?pack_id=1226858&quot;&gt;set of flashcards&lt;/a&gt; that anyone can download.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Week 1&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Read the Introduction and Chapters 1 and 2 of &lt;em&gt;Professional JavaScript for Web Developers&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Week 2&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Work through &lt;a href=&quot;http://www.codecademy.com/tracks/javascript&quot;&gt;Introduction to JavaScript&lt;/a&gt;, sections 1 and 2, on Codecademy.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Read the Preface and Chapters 3 and 4 of Professional JavaScript for Web Developers. (According to javascript is sexy: &amp;ldquo;you can skip the section on &amp;lsquo;Bitwise Operators&amp;rsquo;; it is hardly likely you will use those in your JavaScript career.&amp;rdquo;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Work through sections 3, 4, and 5 on &lt;a href=&quot;http://www.codecademy.com/tracks/javascript&quot;&gt;Codecademy&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Week 3&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Read chapters 5, 6 and 7 of Professional JavaScript for Web Developers. Note: Only read the “Understanding Objects” section in Chapter 6.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Week 4&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Finish the JavaScript track on &lt;a href=&quot;http://www.codecademy.com/tracks/javascript&quot;&gt;Codecademy&lt;/a&gt; (through Objects 1 and Objects 2).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;While you are on Codecademy, go ahead and build the 5 little Basic Projects on the Projects track. After this, you are done with Codecademy. And this is a good thing, because the more you work on your own, the faster you will learn and the better prepared you will be to start programming on your own.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Read chapters 8, 9, 10, 11, 13, and 14 of Professional JavaScript for Web Developers. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Learn jQuery using this free course: http://try.jquery.com/. Work through the entire course. &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Mid Terms: Your First Project&lt;/h4&gt;

&lt;p&gt;&lt;em&gt;Ed note: this is still all taken straight from &lt;a href=&quot;http://javascriptissexy.com/how-to-learn-javascript-properly&quot;&gt;javascript is sexy&lt;/a&gt;. All I&amp;rsquo;ve done is simplify by making it plain what you should do each week.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Before you build your first project, if you plan to be a JavaScript developer or use JavaScript often, you should take a break now and download a trial copy of &lt;a href=&quot;http://www.jetbrains.com/webstorm/&quot;&gt;WebStorm&lt;/a&gt;. Learn how to get started with WebStorm &lt;a href=&quot;http://2oahu.com/blog/webstorm-javascript/&quot;&gt;here&lt;/a&gt; (written especially for this course).&lt;/p&gt;

&lt;p&gt;Make sure you set WebStorm to use JSHint. JSHint is a “tool to detect errors and potential problems in JavaScript code and to enforce your team’s coding conventions.” The cool thing with using WebStorm is that JSHint automatically adds a red line under errors in your code, just like a spell checker does in a word processing application. So JSHint will show you all the errors in your code (including HTML errors) and make you a better JavaScript programmer, even as you are learning. This is extremely important. You will thank me later after you realize how much WebStorm and JSHint have helped you become a better programmer.&lt;/p&gt;

&lt;p&gt;At this juncture, you have learned enough to build a solid web application that is manageable. Don’t proceed any further until you can successfully build this application I describe below. If you are stuck, ask questions on Stack Overflow and reread sections of the book to properly understand the concepts.&lt;/p&gt;

&lt;p&gt;You are building a JavaScript quiz application (you will use HTML and CSS as well) that will function as follows:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It is a simple quiz that has radio button choices, and it will show the user her score upon completion.&lt;/li&gt;
&lt;li&gt;The quiz can show any number of questions and any number of choices.&lt;/li&gt;
&lt;li&gt;Tally the user’s score and display the final score on the last page. The last page will only show the score, so remove the last question.&lt;/li&gt;
&lt;li&gt;Use an array to store all the questions. Each question, along with its choices and correct answer, should be stored in an object. The array of questions should look similar to this:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Only one question is in this array, but you will add all the questions.&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;allQuestions&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;question&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Who is Prime Minister of the United Kingdom?&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;choices&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;David Cameron&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Gordon Brown&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Winston Churchill&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Tony Blair&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;correctAnswer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}];&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;Dynamically (with document.getElementById or jQuery) add the next question and remove the current question from the screen, when the user clicks the “Next” button. The Next button will be the only button to navigate this version of the quiz.&lt;/li&gt;
&lt;li&gt;You can ask for help in the comments below or preferably on Stack Overflow. You are likely to get a prompt and accurate answer on Stack Overflow.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Week 5&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Read chapters 20 and 23 of Professional JavaScript for Web Developers.&lt;/li&gt;
&lt;li&gt;At this point, you should be very comfortable with JavaScript, probably feeling like a Jedi. You are not quite a Jedi yet, you must keep using your newly acquired knowledge and skills as often as possible to keep learning and improving.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Week 6&lt;/h4&gt;

&lt;p&gt;Improve Your Quiz Application From Earlier:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Add client-side data validation: make sure the user answers each question before proceeding to the next question.&lt;/li&gt;
&lt;li&gt;Add a “Back” button to allow the user to go back and change her answer. The user can go back up to the first question. For the questions that the user has answered already, be sure to show the radio button selected, so that the user is not forced to answer the questions again, which she has completed.&lt;/li&gt;
&lt;li&gt;Use jQuery to add animation (fade out the current question and fade in the next question).&lt;/li&gt;
&lt;li&gt;Test the quiz on IE 8 and 9, and fix any bugs. This will give you a good workout ;)&lt;/li&gt;
&lt;li&gt;Store the quiz questions in an external JSON file.&lt;/li&gt;
&lt;li&gt;Add user authentication: allow users log in, and save their login credentials to local storage (HTML5 browser storage).&lt;/li&gt;
&lt;li&gt;Use cookies to remember the user, and show a “Welcome, First Name” message when the user returns to the quiz.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Week 7&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Read chapter 6 (only the “Object Creation” and “Inheritance” sections this time).&lt;/li&gt;
&lt;li&gt;Read chapters 16, 22, and 24. NOTE: The reading in this section of the book is the most technical reading you will encounter in this entire roadmap. It is up to you if you want to read all of it. You should at least learn the Prototype Pattern, Factory Pattern, and Prototypal Inheritance from chapter 6. You don’t have to know all the other patterns.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Week 8&lt;/h4&gt;

&lt;p&gt;Improve Your Quiz Application Even Further:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Use Twitter Bootstrap for the entire page layout, including the quiz elements to make it look more professional. As an added bonus, use the tabs user interface component from Twitter Bootstrap and show 4 different quizzes, one on each tab.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://javascriptissexy.com/handlebars-js-tutorial-learn-everything-about-handlebars-js-javascript-templating/&quot;&gt;Learn Handlebars.js&lt;/a&gt; and add Handlebars.js templating to the quiz. You should no longer have any HTML in your JavaScript code. Your quiz is getting more advanced bit by bit.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Keep a record of all the users who take the quiz and show each user how her score ranks amongst the scores from other quiz takers.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Final Exam: A Personal Project&lt;/h4&gt;

&lt;p&gt;Decide on a personal project to build, and start building your project promptly (while everything is fresh in your mind). Use the book, &lt;em&gt;Professional JavaScript for Web Developers,&lt;/em&gt; as a reference when you are stuck. And of course be an active member of Stack Overflow: ask questions and answer other programmers’ questions.&lt;/p&gt;

&lt;h4&gt;Continue Improving&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Learn &lt;a href=&quot;http://javascriptissexy.com/learn-backbone-js-completely/&quot;&gt;Backbone.js Completely&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Learn &lt;a href=&quot;http://javascriptissexy.com/learn-intermediate-and-advanced-javascript/&quot;&gt;Intermediate and Advanced JavaScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Learn &lt;a href=&quot;http://javascriptissexy.com/learn-node-js-completely-and-with-confidence/&quot;&gt;Node.js Completely and With Confidence&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Read the forthcoming post on javascript is sexy on Getting Started with Meteor.js&lt;/li&gt;
&lt;li&gt;Read my forthcoming posts on javascript is sexy on the Three Best Front-end JavaScript Frameworks&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>How I'm Handling Responsive Images With Jekyll</title>
   <link href="http://akiryk.github.io/blog/2013/12/05/responsive-images-baby-steps"/>
   <updated>2013-12-05T00:00:00-05:00</updated>
   <id>http://akiryk.github.io/blog/2013/12/05/responsive-images-baby-steps</id>
   <content type="html">&lt;p&gt;At the moment of this writing, there are a number of options for handling responsive images — yet none are perfect. I could say more about those options, but Chris Coyier already did such a good job in bringing together pluses and minuses in &lt;a href=&quot;https://docs.google.com/spreadsheet/ccc?key=0Al0lI17fOl9DdDgxTFVoRzFpV3VCdHk2NTBmdVI2OXc#gid=0&quot;&gt;this spreadsheet&lt;/a&gt;. And he&amp;rsquo;s got an article that talks &lt;a href=&quot;http://css-tricks.com/which-responsive-images-solution-should-you-use/&quot;&gt;in greater detail&lt;/a&gt; as well.&lt;/p&gt;

&lt;p&gt;Anyway, I decided to use the picturefill polyfill method. It works better for me than many of the alternatives do because a) I don&amp;rsquo;t have a server since I&amp;rsquo;m using Jekyll; b) I don&amp;rsquo;t want to use a 3rd party since I want to control and understand what I&amp;rsquo;m doing; and c) it gives me a lot of flexibility for art direction.&lt;/p&gt;

&lt;p&gt;Using picturefill is easy. I just pasted a bit of minified javascript in the head of my Jekyll default template, no jQuery required, and whenever I need an image I just insert the following snippet of html. The picturefill.js script identifies the screen size and inserts the appropriate image file between the &lt;span&gt; elements.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;my-picturefill-image&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;span&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-picture&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-alt=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;The image title&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;span&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;/assets/images/image-small.jpg&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;span&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;/assets/images/image-medium.jpg&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-media=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;(min-width: 38em)&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;span&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;/assets/images/image-large.jpg&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-media=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;(min-width: 50em)&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Fallback content for non-JS browsers. Same img src as the initial, unqualified source element. --&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;noscript&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;/assets/images/image-small.jpg&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/noscript&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;caption&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;The caption for this image&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;div class=&quot;marginator&quot;&gt;
   &lt;p&gt;
    Whoa. That&amp;rsquo;s kind of a lot of html for one image. But that&amp;rsquo;s fine. I can live with that for a while, since it works so well and helps me achieve what I want — I mean, look at all the flexibility inherent in that markup. As long as I&amp;rsquo;m willing to prepare all the different images required for it to work, it will be fine.
  &lt;/p&gt;
  &lt;div class=&quot;marginalia&quot;&gt;
    &lt;p&gt;&lt;span class=&quot;margin-heading&quot;&gt;And That&amp;rsquo;s Not All:&lt;/span&gt; It gets even more complicated if you want to include images for hi-res devices.
    &lt;/p&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Obviously, there are some problems with this. A big one for me is that I&amp;rsquo;ll end up copying and pasting the same chunk of markup over and over again. Plenty of opportunities to make a mistake, leave something out, insert an errant character, whatever. &lt;/p&gt;

&lt;p&gt;There&amp;rsquo;s probably a Jekyll plugin out there that would solve my problem. Actually, &lt;a href=&quot;https://github.com/robwierzbowski/jekyll-picture-tag&quot;&gt;there is one&lt;/a&gt;, but using it will take me some time. I need to make sure it does what I want it to do, gives me the flexibility I need, doesn&amp;rsquo;t break other things, whatever. &lt;/p&gt;

&lt;h3&gt;Baby Step Solution&lt;/h3&gt;

&lt;p&gt;Here&amp;rsquo;s my short term solution that probably won&amp;rsquo;t suit me for long but works for now. Jekyll allows you to separate out pieces of a site (partials) that get used in several places. For example, you can make a bit of markup for a sidebar, call it &amp;lsquo;sidebar&amp;rsquo; and then include it in other templates by saying:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;partials&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sidebar&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I can use that same model for the picturefill markup. Rather than pasting the it over and over again, I can put it in a partial.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;partials&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;picturefill&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now I just needed a way to tell the partial what image to use — because otherwise the picturefill partial will only ever display the same image which has been hard-coded into the markup. Enter the &#39;assign&amp;rsquo; tag. Jekyll uses something called liquid to handle variables and simple logic when generating markup. It can handle if/else statements, loops, and variables, among other things (&lt;a href=&quot;https://github.com/Shopify/liquid/wiki/Liquid-for-Designers&quot;&gt;a lot of other things&lt;/a&gt;, actually).&lt;/p&gt;

&lt;p&gt;The liquid tag I care about here lets you assign a value to a variable which can be used elsewhere. Thus, when I insert the picturefill partial, I just need to add a second line like this:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-fancy&quot; data-lang=&quot;fancy&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;assign&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;myImage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;flower-image&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;partials&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;picturefill&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I can now make the picturefill markup dynamic by replacing every instance of &#39;image&amp;rsquo; with the liquid output markup . This allows the picturefill partial to work for all of my posts, even for multiple pictures in the same post. Actually, it&amp;rsquo;s a mite more complicated than that because I&amp;rsquo;ve got a caption as well — but that can be handled with one additional variable. &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-fancy&quot; data-lang=&quot;fancy&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;assign&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;myImage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;flower-image&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;assign&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;myCaption&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;A picture of flowers&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;partials&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;picturefill&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The picturefill markup works with the myImage and myCaption variables like this: &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;my-picturefill-image&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;span&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-picture&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-alt=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;span&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;/assets/images/-small.jpg&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;span&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;/assets/images/-medium.jpg&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-media=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;(min-width: 38em)&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;span&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;/assets/images/-large.jpg&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-media=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;(min-width: 50em)&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Fallback content for non-JS browsers. Same img src as the initial, unqualified source element. --&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;noscript&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;/assets/images/-small.jpg&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/noscript&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;caption&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I&amp;rsquo;ll try it here with an image of some flowers I took last spring:&lt;/p&gt;



&lt;div class=&quot;pic-large&quot;&gt;
  &lt;span data-picture data-alt=&quot;A picture of flowers&quot;&gt;
  &lt;span data-src=&quot;/assets/images/random/flowers-small.jpg&quot;&gt;&lt;/span&gt;
  &lt;span data-src=&quot;/assets/images/random/flowers-med.jpg&quot; data-media=&quot;(min-width: 26.25em)&quot;&gt;&lt;/span&gt;
  &lt;span data-src=&quot;/assets/images/random/flowers-large.jpg&quot; data-media=&quot;(min-width: 63.75em)&quot;&gt;&lt;/span&gt;
  &lt;!-- Fallback content for non-JS browsers. Same img src as the initial, unqualified source element. --&gt;
  &lt;noscript&gt;
    &lt;img src=&quot;/assets/images/random/flowers-small.jpg&quot;&gt;
  &lt;/noscript&gt;
  &lt;/span&gt;
&lt;div class=&quot;caption&quot;&gt;A picture of flowers&lt;/div&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>After Looking At Twenty Different Typefaces, I Chose...</title>
   <link href="http://akiryk.github.io/blog/2013/12/04/using-georgia"/>
   <updated>2013-12-04T00:00:00-05:00</updated>
   <id>http://akiryk.github.io/blog/2013/12/04/using-georgia</id>
   <content type="html">&lt;p&gt;In designing this site, I wanted to focus on creating a good reading experience, so I spent a bunch of time considering how best to handle body copy. I have a Typekit subscription, Google Fonts are free, and Typecast makes it super easy to try different options. So why would I stick with Georgia?&lt;/p&gt;

&lt;div class=&quot;pullquote pull-left&quot;&gt;
  
&lt;div class=&quot;gamma&quot;&gt;Georgia. It&amp;rsquo;s a pleasure to read. It doesn&amp;rsquo;t draw attention to itself. And it&amp;rsquo;s already on your computer. &lt;/div&gt;

&lt;/div&gt;

&lt;p&gt;First of all, it&amp;rsquo;s interesting to note that &lt;a href=&quot;http://www.bbc.co.uk/news/world-11573666&quot;&gt;studies show people learn and remember better&lt;/a&gt; when material is presented in a difficult-to-read manner. If text is set in a hand-writing font or if it&amp;rsquo;s small or very faint, readers experience &amp;ldquo;disfluency&amp;rdquo; (cool word). It seems that when readers experience disfluency, they lose a bit of confidence — and lack of confidence causes people to slow down and pay closer attention. Paying closer attention results in better recall.&lt;/p&gt;

&lt;p&gt;That&amp;rsquo;s cool, but it doesn&amp;rsquo;t apply here. Obviously — since you&amp;rsquo;re here voluntarily, and probably won’t read for very long under the best of circumstances. (I’m just saying, based on what analytics usually shows about bounce-rate and so on). So I’d like to do the opposite of encouraging disfluency, and I think I’ll do it by making text clean, clear, and readable. Georgia does these things well.&lt;/p&gt;

&lt;p&gt;Georgia does some other things well, too. Like live on your computer. Web site performance isn’t typically thought of as a readability issue, per se, but the two things are closely linked. If you have to wait a couple of extra seconds to load a page, readability is compromised — because there’s nothing to read. One easy way to make pages load faster is for them to load less stuff, and unfortunately, web fonts count as &lt;em&gt;more&lt;/em&gt; stuff. So with that in mind, I’m being cautious about loading anything that isn’t absolutely essential. Of course, I &lt;em&gt;will&lt;/em&gt; load things that aren’t absolutely essential — I’ll just do it judiciously.&lt;/p&gt;

&lt;p&gt;But Georgia’s so … commonplace. Can it be beautiful? &lt;/p&gt;

&lt;p&gt;Yes, it can. For one thing, choosing an appropriate font is only part of good typography. It’s how one uses the font that enables content to really shine. For body copy on the web, this means finding the best balance of line length, leading, and font-size — and adjusting those things as necessary for different screen sizes.  It’s true that a badly designed font is going to look bad even when set really nicely. But a merely competent font could be made to look pretty good. And Georgia isn’t merely competent. &lt;/p&gt;

&lt;p&gt;You probably already know this, but Georgia was designed by Matthew Carter (&lt;a href=&quot;http://designmuseum.org/design/matthew-carter&quot;&gt;not just any old type designer&lt;/a&gt;) for the specific purpose of looking good on screen. He based it on a family of fonts that had been created in the early 19th century but modified the original structure in order to make his font nice for low-resolution devices. He simplified certain details that would get lost or muddied; he increased the x-height; he lightened the uppercase letters. In short, he worked hard to make a great font for pixel displays, and that partly explains why it’s become so ubiquitous.&lt;/p&gt;

&lt;p&gt;Hmmm, ubiquitous doesn’t sound so cool. Things that are ubiquitous are easy to ignore; they have less punch; they have less meaning. True, but I’m also swayed by the notion of the crystal goblet. The idea, from the classic typography essay, &lt;a href=&quot;http://en.wikipedia.org/wiki/The_Crystal_Goblet&quot;&gt;Printing Should Be Invisible&lt;/a&gt;, is that a well-crafted wineglass reveals its contents plainly, without drawing attention to itself. Well-crafted body text should do the same. In this sense, I think Georgia’s ubiquity could be an asset — you don’t pay it much attention; you just get down to reading. &lt;/p&gt;

&lt;p&gt;So why would I ever use a web font? &lt;/p&gt;

&lt;p&gt;One obvious reason is if I needed access to certain characters — something like small-caps or a particular weight or characters from another language. But that&amp;rsquo;s a special case that doesn&amp;rsquo;t apply to me right now.&lt;/p&gt;

&lt;div class=&quot;marginator&quot;&gt;
  &lt;p&gt;
    Aside from that, I&amp;rsquo;d use a web font in order to communicate a mood or feeling or character. For example, if I wanted to communicate a sense of literary seriousness, I&amp;rsquo;d explore using something like Hoeffler. If I wanted to communicate a more solid, corporate tone, I might work with Neue Haas Grotesque. In my case, I&amp;rsquo;d like the text to feel friendly, unpretentious, straightforward, approachable — all perfectly compatible with Georgia.
  &lt;/p&gt;
  &lt;div class=&quot;marginalia&quot;&gt;
    &lt;p&gt;&lt;span class=&quot;margin-heading&quot;&gt;Authoritative Fonts&lt;/span&gt; Baskerville has a small but statistically significant edge over other fonts in terms of trust-worthiness, according to this &lt;a href=&quot;http://opinionator.blogs.nytimes.com/2012/08/08/hear-all-ye-people-hearken-o-earth/&quot;&gt;clever study at the nytimes&lt;/a&gt;.
    &lt;/p&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;So there you have it. Georgia has a friendly character, displays well on screen, comes fast and for free, and suits my purposes well. I&amp;rsquo;ll take it. &lt;/p&gt;

&lt;p&gt;As an addendum, here are screenshots from &lt;a href=&quot;http://www.typecast.com&quot;&gt;typecast&lt;/a&gt; of a few of the fonts I considered using instead of Georgia. &lt;/p&gt;

&lt;h3&gt;Chaparral&lt;/h3&gt;

&lt;p&gt;Chaparral feels distinct, but not overly so. It has a friendly, approachable feel, and looks like something I’d be happy to read when set at something like 22/34, as in the image below. &lt;/p&gt;

&lt;div class=&quot;pic-original&quot;&gt;
  &lt;img class=&quot;natural-size&quot; src=&quot;/assets/images/fonts/chaparral.png&quot;&gt;
  &lt;div class=&quot;caption&quot;&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;h3&gt;Tisa 20, 32&lt;/h3&gt;

&lt;p&gt;Tisa also has a distinct look, which I like a lot. Medium uses it, and has written a &lt;a href=&quot;http://www.forbes.com/sites/quora/2013/07/05/why-did-medium-choose-ff-tisa-web-pro-as-the-font-for-posts/&quot;&gt;good piece&lt;/a&gt; of why they chose it.&lt;/p&gt;

&lt;div class=&quot;pic-original&quot;&gt;
  &lt;img class=&quot;natural-size&quot; src=&quot;/assets/images/fonts/tisa-20-32.png&quot;&gt;
  &lt;div class=&quot;caption&quot;&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;h3&gt;Merriweather&lt;/h3&gt;

&lt;p&gt;This is a free font from Google that I like because it feels just a bit elegant and serious, but perfectly accessible and easy-to-read.&lt;/p&gt;

&lt;div class=&quot;pic-original&quot;&gt;
  &lt;img class=&quot;natural-size&quot; src=&quot;/assets/images/fonts/merriweather.png&quot;&gt;
  &lt;div class=&quot;caption&quot;&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;h3&gt;A Few Others That I Like:&lt;/h3&gt;

&lt;h3&gt;Kepler, 22/32&lt;/h3&gt;

&lt;div class=&quot;pic-original&quot;&gt;
  &lt;img class=&quot;natural-size&quot; src=&quot;/assets/images/fonts/kepler.png&quot;&gt;
  &lt;div class=&quot;caption&quot;&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;h3&gt;Nimrod, 18/30&lt;/h3&gt;

&lt;div class=&quot;pic-original&quot;&gt;
  &lt;img class=&quot;natural-size&quot; src=&quot;/assets/images/fonts/nimrod.png&quot;&gt;
  &lt;div class=&quot;caption&quot;&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;h3&gt;Skolar 20, 32&lt;/h3&gt;

&lt;div class=&quot;pic-original&quot;&gt;
  &lt;img class=&quot;natural-size&quot; src=&quot;/assets/images/fonts/skolar.png&quot;&gt;
  &lt;div class=&quot;caption&quot;&gt;&lt;/div&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Responsive Videos in Jekyll</title>
   <link href="http://akiryk.github.io/blog/2013/12/01/responsive-video-jekyll"/>
   <updated>2013-12-01T00:00:00-05:00</updated>
   <id>http://akiryk.github.io/blog/2013/12/01/responsive-video-jekyll</id>
   <content type="html">&lt;p&gt;There are a bunch of cool &lt;a href=&quot;http://jekyllrb.com/docs/plugins/&quot;&gt;Jekyll plugins&lt;/a&gt; out there, but using them can be a bit fussy if you&amp;rsquo;re deploying to GitHub pages since GitHub disables custom plugins. You can do it, but you&amp;rsquo;ll need to generate your site locally — and then push the generated site to Github. Is that a problem? Not for me, although it might be if you had a much bigger site than mine. Anyway, it meant I held off on trying any plugins until such time when I would really need one. That time has come. &lt;/p&gt;

&lt;div class=&quot;marginator&quot;&gt;
  &lt;p&gt;
    See, I&amp;rsquo;d like to post a video or several, and I&amp;rsquo;d like them to handle different viewport sizes well — but I don&amp;rsquo;t want to rely on the &lt;a href=&quot;http://fitvidsjs.com/&quot;&gt;FitVids plugin&lt;/a&gt; since I&amp;rsquo;m not using jQuery on this site. After exploring a few options, I found a YouTube plugin for Jekyll that seemed pretty good, &lt;a href=&quot;https://github.com/ttscoff/JekyllPlugins/tree/master/YouTube&quot;&gt;youtube_tag.rb&lt;/a&gt; by Brett Terpstra.
  &lt;/p&gt;
  &lt;div class=&quot;marginalia&quot;&gt;
    &lt;p&gt;&lt;span class=&quot;margin-heading&quot;&gt;How To:&lt;/span&gt; To learn about generating a static site and hosting it on Github, just read &lt;a href=&quot;http://ixti.net/software/2013/01/28/using-jekyll-plugins-on-github-pages.html&quot;&gt;this article from ixti.net&lt;/a&gt;. Don&amp;rsquo;t worry about how they used octopress; I&amp;rsquo;m not using octopress and their methods worked for me.
    &lt;/p&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;This plugin uses the approach described in &lt;a href=&quot;http://alistapart.com/article/creating-intrinsic-ratios-for-video&quot;&gt;&amp;ldquo;Creating Instrinsic Ratios for Video&amp;rdquo;&lt;/a&gt;, which I believe is the same approach used by FitVids: it calculates the video&amp;rsquo;s aspect ratio and uses that ratio to set just the right percentage of padding for the video to resize correctly. &lt;/p&gt;

&lt;p&gt;Using the plugin is simple. Once it&amp;rsquo;s in your Jekyll plugins directory, simply put the &amp;lsquo;youtube&amp;rsquo; liquid tag in your post along with the youtube video ID and optional width and height parameters:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt; {% youtube uEdRLlqdgA4 640 480 %} 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;One gotcha: If you use this plugin with rDiscount, the default Jekyll markdown rendering engine, you might run into a problem with the way it plugin injects an inline style tag. The styles don&amp;rsquo;t get rendered and the videos don&amp;rsquo;t end up being resizeable. I found two possible solutions. One is to put the necessary styles in your css and then comment out the offending line:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;c&quot;&gt;/* Put these styles in your css */&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;iframe&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; 
&lt;span class=&quot;nt&quot;&gt;embed&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;absolute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;100%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;100%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;margin-top&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And comment out line 33 from youtube_tag.rb&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;#video = &amp;quot;&amp;lt;style&amp;gt;.bt-video-container iframe,.bt-video-container object,.bt-video-container embed { position:absolute; top:0; left:0; width:100%; height:100%; margin-top:0 } &amp;lt;/style&amp;gt;\n&amp;quot;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# Then modify line 34 so that video is simply set to = and not +=:&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;video&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;%Q{&amp;lt;div class=&amp;quot;bt-video-container&amp;quot; style=&amp;quot;position:relative;padding-bottom:&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;padding_bottom&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;;padding-top:30px;height:0;overflow:hidden&amp;quot;&amp;gt;&amp;lt;iframe width=&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@width&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;&amp;quot; height=&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@height&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;&amp;quot; src=&amp;quot;http://www.youtube.com/embed/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@videoid&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;?rel=0&amp;quot; frameborder=&amp;quot;0&amp;quot; allowfullscreen&amp;gt;&amp;lt;/iframe&amp;gt;&amp;lt;/div&amp;gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The other option is to use a different markdown renderer — RedCarpet seems to work fine. You might need to install it; you&amp;rsquo;ll definitely need to tell Jekyll about it. Open the Jekyll config.yml file and add the following:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;ss&quot;&gt;markdown&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;redcarpet&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Vimeo&lt;/h3&gt;

&lt;p&gt;The youtube_tag plugin is designed for YouTube, but the approach is the same no matter where your video is hosted. I made a version that works with Vimeo by making just a few modifications. See my &lt;a href=&quot;https://gist.github.com/akiryk/7750273&quot;&gt;gist for a vimeo plugin&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Here are the plugins live in action showing a couple videos I&amp;rsquo;ve seen recently on &lt;a href=&quot;http://www.kottke.org&quot;&gt;kottke&lt;/a&gt;. Here are the two liquid tags I used:&lt;br&gt;&lt;br&gt;
 {% vimeo 80310253 500 281 %} &lt;br&gt;&lt;br&gt;and&lt;br&gt;&lt;br&gt;
 {% youtube uEdRLlqdgA4 640 480 %} 
&lt;div class=&quot;bt-video-container&quot; style=&quot;position:relative;padding-bottom:56.20%;padding-top:30px;height:0;overflow:hidden&quot;&gt;&lt;iframe width=&quot;500&quot; height=&quot;281&quot; src=&quot;http://player.vimeo.com/video/80310253?rel=0&amp;amp;title=0&amp;amp;byline=0&amp;amp;portrait=0&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;&lt;/div&gt;
&lt;div class=&quot;bt-video-container&quot; style=&quot;position:relative;padding-bottom:75.00%;padding-top:30px;height:0;overflow:hidden&quot;&gt;&lt;iframe width=&quot;640&quot; height=&quot;480&quot; src=&quot;http://www.youtube.com/embed/uEdRLlqdgA4?rel=0&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Comic Stripping for UX</title>
   <link href="http://akiryk.github.io/blog/2013/09/21/comic-ux"/>
   <updated>2013-09-21T00:00:00-04:00</updated>
   <id>http://akiryk.github.io/blog/2013/09/21/comic-ux</id>
   <content type="html">&lt;p&gt;I thought this was a &lt;a href=&quot;http://uxmas.com/2012/ux-design-role-playing-and-micromoments&quot;&gt;pretty interesting approach to researching UI design&lt;/a&gt;&amp;hellip; The idea is to role play a &amp;lsquo;conversation&amp;rsquo; with the user-interface you&amp;rsquo;re thinking about in order to reveal its deficiencies and gain insight. I bet it can be helpful, under certain circumstances, and it&amp;rsquo;s definitely memorable — imagine role playing a conversation with a client&amp;rsquo;s web site along with your client. You&amp;rsquo;d make your point hit home, most likely. &lt;/p&gt;

&lt;p&gt;Anyway, it got me thinking about a related exercise. Something less theatrical that could be used to encourage a client or a team to think about what is most important in a given interaction. I&amp;rsquo;ll take you through what I did and why. &lt;/p&gt;

&lt;p&gt;The clients were struggling to understand the relative importance of various elements of a public radio station&amp;rsquo;s web site home page. We&amp;rsquo;d agreed to work mobile first and were therefore in the (desirable) position of starting with only what was necessary and making every new piece of content or functionality justify itself. But that didn&amp;rsquo;t mean there weren&amp;rsquo;t people advocating for their own pet elements.&lt;/p&gt;

&lt;p&gt;For example, there was pressure to add space and attention to a branded masthead (Make the logo bigger! Add a tagline!); we couldn&amp;rsquo;t neglect the &amp;ldquo;Donate Now&amp;rdquo; button; we&amp;rsquo;d obviously need underwriting (an ad); listen to the live stream had to be prominent; what if the station was having a pledge drive? We&amp;rsquo;d need a big promotional unit. And what about regular old content — you know, news stories, interviews, first listens to new music… Yup, we&amp;rsquo;d need that to be important, too.&lt;/p&gt;

&lt;p&gt;Since we&amp;rsquo;re doing this mobile-first, let&amp;rsquo;s start to think about how to handle all of those elements at a very small screen size.  &lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/comic-ux/comic-wireframe-1.jpg&quot; alt=&quot;A basic wireframe&quot;&gt;&lt;/p&gt;

&lt;p&gt;Lots of room for improvement, sure, but it&amp;rsquo;s a start, a way to display the priorities that the clients were pushing for. I decided to create a cartoon conversation that would reveal a few key points about this arrangement. Read on&amp;hellip;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/comic-ux/comic-1.png&quot; alt=&quot;Illustration of a site-visitor&quot;&gt;&lt;/p&gt;

&lt;p&gt;He&amp;rsquo;s perfect because he&amp;rsquo;s totally generic. Thats&amp;rsquo;s the point. The first time someone visits our site&amp;rsquo;s home page, we really don&amp;rsquo;t know very much about them or what they&amp;rsquo;re after. We have to give them a default set of choices. &lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/comic-ux/comic-2.png&quot; alt=&quot;Comic of a guy representing a computer screen&quot;&gt;&lt;/p&gt;

&lt;p&gt;The bearded guy represents the website. He&amp;rsquo;s got a bow tie, he&amp;rsquo;s got a little personality. That&amp;rsquo;s fine — the website will have some personality. &lt;/p&gt;

&lt;p&gt;However, it&amp;rsquo;s still just a website. No artificial intelligence. No supernatural abilities to perceive what a particular site visitor wants. So no matter that the user &amp;#39;says&amp;rsquo; in response to this initial greeting, the site&amp;rsquo;s response is going to be the same. If we display a branded masthead with big logo and tagline at the top, front and center, then we might agree that this is what the site says to our hypothetical user&amp;rsquo;s first comment:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/comic-ux/comic-3.png&quot; alt=&quot;Comic of a person speaking to a computer screen&quot;&gt;&lt;/p&gt;

&lt;p&gt;The point is: we&amp;rsquo;d better all agree that this first statement makes sense. And maybe it does. Or maybe it suggests to us that we want our welcome statement to be a little less one-track. It&amp;rsquo;s an important thing to consider, and it becomes obvious to clients and the team when presented in this way. &lt;/p&gt;

&lt;p&gt;Moving onto a more specific type of user… Let&amp;rsquo;s see how the conversation goes with a user who&amp;rsquo;s interested in reading local news, given that our prioritization puts the logo/brand first above listen; listen is above underwriting/pledge; news is last.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/comic-ux/comic-4.png&quot; alt=&quot;Conversation between person and computer screen&quot;&gt;&lt;/p&gt;

&lt;p&gt;Is that the right experience? It might be. Perhaps the point of this site isn&amp;rsquo;t to serve readers of local news. But if that&amp;rsquo;s true, let&amp;rsquo;s make sure we all understand it and agree to the principle. &lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s say we talk about it, though, and agree to a different conversation, one that feels like the right one we should be having…&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/comic-ux/comic-5.png&quot; alt=&quot;Conversation between person and computer screen&quot;&gt;&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s not perfect for the reader, but it&amp;rsquo;s reasonably smooth. If listening is the primary purpose for this site, then we can probably live with it. We&amp;rsquo;ll need to adjust our set of priorities in our wireframe a bit, shift some content/functionality around, possibly adjust the visual weight of certain elements. We might come up with something like the following. The logo/brand gets damped town a little — we remove the tagline, say; the sequence of where we see the ad and the pledge announcement changes; news comes up. &lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/comic-ux/comic-wireframe-2.jpg&quot; alt=&quot;A basic wireframe&quot;&gt;&lt;/p&gt;

&lt;p&gt;Again, a fairly loose wireframe, but a flow that&amp;rsquo;s much improved over the first example — and one that our stakeholders have agreed to. It gives us a good starting point for refinement, prototyping, and testing with real users.&lt;/p&gt;

&lt;h3&gt;Results&lt;/h3&gt;

&lt;p&gt;So, could cartooning be an effective approach to guiding UX? Of course. In my case, we were struggling to get everyone on the same page. A few little examples like this helped reveal that we didn&amp;rsquo;t agree about some fundamental things. They helped us articulate those differences and come up with some next steps for us to explore. I&amp;rsquo;d say that made it a successful exploration. I probably wouldn&amp;rsquo;t take it a lot farther than I did here, because it doesn&amp;rsquo;t take much to make the key points. But — simply by surprising people with a hopefully funny way to tackle a problem — it can get folk&amp;rsquo;s attention and possibly encourage them to think in a new way. It did that for us.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>NPR Stations on Facebook</title>
   <link href="http://akiryk.github.io/portfolio/2013/02/09/facebook-project"/>
   <updated>2013-02-09T00:00:00-05:00</updated>
   <id>http://akiryk.github.io/portfolio/2013/02/09/facebook-project</id>
   <content type="html">&lt;p class=&quot;intro&quot;&gt;
  In 2012, I helped launch an experiment to leverage NPR&amp;rsquo;s Facebook presence to grow the audience for member stations. NPR has more than three million Facebook followers, but most member stations have far less. By posting member station stories onto NPR&amp;rsquo;s Facebook page, we had an opportunity to expose their content to a much wider group of people. It’s been a &lt;a href=&quot;http://www.niemanlab.org/2012/02/how-npr-drove-traffic-to-a-local-station-by-geotargeting-stories-on-facebook/?hq_e=el&amp;hq_m=2040998&amp;hq_l=1&amp;hq_v=437cc910b2&quot;&gt;big success.&lt;/a&gt; 
&lt;/p&gt;

&lt;div class=&quot;pullquote pull-right&quot;&gt;
  
&lt;div class=&quot;gamma&quot;&gt;NPR depends on money from member stations, so it&amp;rsquo;s in our interest to help stations build engaged audiences.&lt;/div&gt;

&lt;/div&gt;

&lt;p&gt;In case you aren&amp;rsquo;t a National Public Radio insider, you may not realize exactly how the organization works. It&amp;rsquo;s non-profit and gets some support from the federal government. But it only gets a fraction of its budget that way (like, around 10%). The rest comes from underwriting, grants, an endowment, and payments from member stations. That last one is pretty important. Member stations pay a fee for NPR programming (and for a bunch of other stuff, too). NPR depends on that money, so it depends on each member station to build a loyal audience who will give to that station, which will in turn be able to pay NPR. NPR can&amp;rsquo;t solicit member donations on its own — that&amp;rsquo;s just part of its charter.&lt;/p&gt;

&lt;p&gt;We believed we could drive new potential fans to member stations&amp;rsquo; web sites if we posted their content to NPR&amp;rsquo;s Facebook page, but we wanted to do it smartly, without weakening NPR&amp;rsquo;s brand in any way. In brand terms, NPR has a particular &amp;ldquo;voice&amp;rdquo; that it maintains on Facebook, and watering it down with too many other brand &amp;ldquo;voices&amp;rdquo; wouldn&amp;rsquo;t be cool. &lt;/p&gt;

&lt;div class=&quot;pic-normal&quot;&gt;
  &lt;span data-picture data-alt=&quot;Example of a member station story that&#39;s been shared on NPR&#39;s Facebook page.&quot;&gt;
  &lt;span data-src=&quot;/assets/images/amplify/example-share-small.jpg&quot;&gt;&lt;/span&gt;
  &lt;span data-src=&quot;/assets/images/amplify/example-share-med.jpg&quot; data-media=&quot;(min-width: 26.25em)&quot;&gt;&lt;/span&gt;
  &lt;!-- Fallback content for non-JS browsers. Same img src as the initial, unqualified source element. --&gt;
  &lt;noscript&gt;
    &lt;img src=&quot;/assets/images/amplify/example-share-small.jpg&quot;&gt;
  &lt;/noscript&gt;
  &lt;/span&gt;
&lt;div class=&quot;caption&quot;&gt;Example of a member station story that&amp;rsquo;s been shared on NPR&amp;rsquo;s Facebook page.&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Solution: we selected a small number of stations and asked them to propose stories, maybe one a day, that would go on NPR&amp;rsquo;s Facebook page. If a story passed muster — if it had qualities that NPR editors believed would drive interest, if it was written in the NPR tone — we&amp;rsquo;d post it and geotarget it to the member station&amp;rsquo;s area. For example, a story posted by KPLU in Seattle would be geotargetted to the Seattle region; a story from WBUR in Boston would be targetted to Boston. It was a very successful experiment.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;During the first four months of the experiment, we posted about 50 geofocused KPLU links — a fraction of all KPLU content — on NPR’s Facebook page. These posts accounted for 12 percent of KPLU.org’s sitewide visits during this four-month period. The test helped KPLU achieve three milestones: record traffic for a single day (January 19), second-highest traffic for a single month (October 2011) and the highest traffic for a single month (January). — From the &lt;a href=&quot;http://digitalservices.npr.org/post/how-%3Ewere-experimenting-member-station-content-nprs-facebook-page&quot;&gt;NPR DS blog&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;An Online Tool To Help With The Process&lt;/h3&gt;

&lt;p&gt;This was great, but it was somewhat of a hassle to manage day-to-day. Two editors at NPR were spending almost all of their time reading and editing station submissions; going back and forth with station editors about changes; and copying and pasting the actual content into Facebook. Silly. More painful yet, they had to manually enter the geotargeting data for every station every time, carefully identifying the precise town and city names where the post should be seen. &lt;/p&gt;

&lt;p&gt;To improve this situation, we assembled a small team — two backend developers, an editor, and me (UX, design, and front-end) — to build a tool that would make it easier. We created an alpha version of something we&amp;rsquo;re calling Amplify. It&amp;rsquo;s got a minimal but clean design that enables stations to pitch ideas by simply pasting a link to their story.&lt;/p&gt;

&lt;p&gt;Here&amp;rsquo;s how it works. Let&amp;rsquo;s say a writer in Seattle wants to drive readers to a story they&amp;rsquo;ve just published about a bicycle condom-delivery service (true story). They go to our site, paste the link into a simple form field, and immediately see a how the text will appear on Facebook, more or less (i). Since this format is distinct from the news posts they ordinarily write for their own web site, they may want to edit it — and they can do so inline. When they&amp;rsquo;re happy with the result, they submit the pitch (we called it a pitch because that&amp;rsquo;s really what it is: a proposal to get something published by NPR). &lt;/p&gt;

&lt;div class=&quot;pic-large&quot;&gt;
  &lt;span data-picture data-alt=&quot;Pitch review and submit screen for alpha version.&quot;&gt;
  &lt;span data-src=&quot;/assets/images/amplify/amplify1-small.jpg&quot;&gt;&lt;/span&gt;
  &lt;span data-src=&quot;/assets/images/amplify/amplify1-med.jpg&quot; data-media=&quot;(min-width: 26.25em)&quot;&gt;&lt;/span&gt;
  &lt;span data-src=&quot;/assets/images/amplify/amplify1-large.jpg&quot; data-media=&quot;(min-width: 63.75em)&quot;&gt;&lt;/span&gt;
  &lt;!-- Fallback content for non-JS browsers. Same img src as the initial, unqualified source element. --&gt;
  &lt;noscript&gt;
    &lt;img src=&quot;/assets/images/amplify/amplify1-small.jpg&quot;&gt;
  &lt;/noscript&gt;
  &lt;/span&gt;
&lt;div class=&quot;caption&quot;&gt;Pitch review and submit screen for alpha version.&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;As soon as the pitch is submitted, the app notifies editors from NPR and other participating member stations, who can see it and add comments or ask questions. Assuming the pitch is good enough, or is modified to become good enough, an NPR editor simply clicks &amp;ldquo;publish.&amp;rdquo; Rather than having to carefully enter a bunch of geotargetting data every time, they only have to do it once — our tool takes care of it from there. &lt;/p&gt;

&lt;p&gt;Naturally, this has been very popular with member stations. We immediately jumped from having 5 or 6 participants to 40, and 30 more wanted to join. Why so much interest? Stations love having their stories get the massive reach that NPR can provide, so they&amp;rsquo;re eager to get stories accepted. And they want to know what other stations are submitting so they can learn from those stations&amp;rsquo; successes. We even implemented a small bit of competition by tracking the most viral stories (according to Facebook&amp;rsquo;s algorithm for determining virality). Stations can now see how their stories fare compared to other stations. Actually, this list of top stories has other benefits: if we make it public, it&amp;rsquo;s like a daily rundown of top stories from the NPR universe. &lt;/p&gt;

&lt;p&gt;Check out the videos below that give a better sense of the experience. The first video shows a station editor&amp;rsquo;s view as they look at comments and submit a new pitch. The second shows what NPR editors see — it’s mostly the same as station journalists, but they can choose whether to accept or reject a given pitch.&lt;/p&gt;

&lt;div class=&quot;bt-video-container&quot; style=&quot;position:relative;padding-bottom:62.60%;padding-top:30px;height:0;overflow:hidden&quot;&gt;&lt;iframe width=&quot;500&quot; height=&quot;313&quot; src=&quot;http://player.vimeo.com/video/61651127?rel=0&amp;amp;title=0&amp;amp;byline=0&amp;amp;portrait=0&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;&lt;/div&gt;

&lt;div class=&quot;bt-video-container&quot; style=&quot;position:relative;padding-bottom:62.60%;padding-top:30px;height:0;overflow:hidden&quot;&gt;&lt;iframe width=&quot;500&quot; height=&quot;313&quot; src=&quot;http://player.vimeo.com/video/61651125?rel=0&amp;amp;title=0&amp;amp;byline=0&amp;amp;portrait=0&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;&lt;/div&gt;

&lt;p class=&quot;notes&quot;&gt;
  &lt;span class=&quot;counter&quot;&gt;i&lt;/span&gt; I didn&amp;rsquo;t make the story display exactly as it would look on Facebook for a couple of reasons. First, I knew we probably wouldn&amp;rsquo;t have the resources to maintain this product as much as we&amp;rsquo;d like, and that it would therefore be hard to keep up with changes Facebook would inevitably make to its own design. We could reflect a true facsimile of how a story would appear &lt;em&gt;now&lt;/em&gt;&amp;hellip; but in six months? Second, I knew that a long-term goal of the web app was to potentially expand beyond Facebook — for example, to managing submissions to NPR&amp;rsquo;s twitter feed or to an as-yet-uncreated NPR service for sharing content among stations. Tying our visual approach to Facebook seemed shortsited.
&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>An Easier Way To Create News Posts</title>
   <link href="http://akiryk.github.io/portfolio/2012/10/10/corepub-post"/>
   <updated>2012-10-10T00:00:00-04:00</updated>
   <id>http://akiryk.github.io/portfolio/2012/10/10/corepub-post</id>
   <content type="html">&lt;p&gt;Most NPR member stations use a content management system (CMS) based on Drupal to manage their websites. I redesigned key parts of this CMS to make content-creation simpler and more intuitive. I worked with the dev team and one other front-end developer to implement our designs. &lt;/p&gt;

&lt;div class=&quot;pic-medium pull-right&quot;&gt;
  





  &lt;span data-picture data-alt=&quot;The old post page before redesign.&quot;&gt;
    &lt;span data-src=&quot;/assets/images/corepub-post/before-long-tiny.jpg&quot;&gt;&lt;/span&gt;
    &lt;span data-src=&quot;/assets/images/corepub-post/before-long-small.jpg&quot; data-media=&quot;(min-width: 36.5625em)&quot;&gt;&lt;/span&gt;
    &lt;!-- Fallback content for non-JS browsers. Same img src as the initial, unqualified source element. --&gt;
    &lt;noscript&gt;
      &lt;img src=&quot;/assets/images/corepub-post/before-long-tiny.jpg&quot;&gt;
    &lt;/noscript&gt;
  &lt;/span&gt;

&lt;div class=&quot;caption&quot;&gt;The old post page before redesign.&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;In the past (see screenshot), key pieces of content needed to be entered throughout a long and unwieldy page. Things that were alike (for example, related content and related programs) were not near one another. The process of saving and publishing was unnecessarily confusing — you clicked a “Save” button, which was clear enough, but had to remember to mark the &amp;ldquo;publish&amp;rdquo; checkbox down below or it wouldn’t go live. And scheduling a post for later publication was scary. You could only enter the time and date in a computer-friendly numeric format, and it was hard to tell whether something was scheduled for publication or was simply a draft awaiting approval.&lt;/p&gt;

&lt;p&gt;Just a few of the improvements we made: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;save/publish remains fixed in its position, so it’s always easy to reach; &lt;/li&gt;
&lt;li&gt;the important stuff that editors handle all the time, like writing text content and inserting images, are near the top and close to one another; &lt;/li&gt;
&lt;li&gt;we used smart defaults where appropriate — for example, we automatically make the slug the same as the category; editors can change it, but they usually don&amp;rsquo;t.&lt;/li&gt;
&lt;li&gt;scheduling is much simpler — you click in the date field and a date-picker appears — and a label makes it obvious that the post is now scheduled.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A screenshot and brief video below show it in action&amp;hellip;&lt;/p&gt;

&lt;div class=&quot;pic-normal&quot;&gt;
  &lt;span data-picture data-alt=&quot;The new post page after redesign.&quot;&gt;
  &lt;span data-src=&quot;/assets/images/corepub-post/new-post-small.jpg&quot;&gt;&lt;/span&gt;
  &lt;span data-src=&quot;/assets/images/corepub-post/new-post-med.jpg&quot; data-media=&quot;(min-width: 26.25em)&quot;&gt;&lt;/span&gt;
  &lt;!-- Fallback content for non-JS browsers. Same img src as the initial, unqualified source element. --&gt;
  &lt;noscript&gt;
    &lt;img src=&quot;/assets/images/corepub-post/new-post-small.jpg&quot;&gt;
  &lt;/noscript&gt;
  &lt;/span&gt;
&lt;div class=&quot;caption&quot;&gt;The new post page after redesign.&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;bt-video-container&quot; style=&quot;position:relative;padding-bottom:75.00%;padding-top:30px;height:0;overflow:hidden&quot;&gt;&lt;iframe width=&quot;480&quot; height=&quot;360&quot; src=&quot;http://www.youtube.com/embed/yNzEbArVz7Y?rel=0&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Gronster&#58; A Drawing Game</title>
   <link href="http://akiryk.github.io/portfolio/2012/09/15/gronster-drawing-game"/>
   <updated>2012-09-15T00:00:00-04:00</updated>
   <id>http://akiryk.github.io/portfolio/2012/09/15/gronster-drawing-game</id>
   <content type="html">&lt;div class=&quot;marginator&quot;&gt;
  &lt;p&gt;
    I had the idea for creating an online version of a game that I&amp;rsquo;d played once or twice on paper — maybe you&amp;rsquo;ve played it. You start with a page folded into thirds. The first person draws the head and shoulders, then passes the paper to the second person but keeps the drawing hidden. The second person draws the mid-section and passes it to the last player. No one knows what the others have drawn, so the resulting illustration is a strange mashup. 
  &lt;/p&gt;
  &lt;div class=&quot;marginalia&quot;&gt;
    &lt;p&gt;&lt;span class=&quot;margin-heading&quot;&gt;Exquisite Corpse &lt;/span&gt;It turns out that this game has a name — Exquisite Corpse — and was either invented or popularized by Surrealists in the 1920s. 
    &lt;/p&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Anyway, I built this game/app as a side project by myself, using CakePHP and JavaScript. It lets you and some friends create three segments of a drawing (without knowing what the others have done), and it stitches them together into a connected whole. &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://gronster.adamkiryk.com&quot;&gt;Check it out&lt;/a&gt; — or read on&amp;hellip;&lt;/p&gt;

&lt;h3&gt;Making A Drawing&lt;/h3&gt;

&lt;p&gt;You start on an intro page, which shows in simple terms how the game works (the site cookies you, so if you return later you&amp;rsquo;ll go straight to the drawing panel). You can click on the big Get Started button — or you can explore the gallery.&lt;/p&gt;

&lt;div class=&quot;pic-normal&quot;&gt;
  &lt;span data-picture data-alt=&quot;The Gronster start screen, visible to first-time users.&quot;&gt;
  &lt;span data-src=&quot;/assets/images/gronster/start-small.jpg&quot;&gt;&lt;/span&gt;
  &lt;span data-src=&quot;/assets/images/gronster/start-med.jpg&quot; data-media=&quot;(min-width: 26.25em)&quot;&gt;&lt;/span&gt;
  &lt;!-- Fallback content for non-JS browsers. Same img src as the initial, unqualified source element. --&gt;
  &lt;noscript&gt;
    &lt;img src=&quot;/assets/images/gronster/start-small.jpg&quot;&gt;
  &lt;/noscript&gt;
  &lt;/span&gt;
&lt;div class=&quot;caption&quot;&gt;The Gronster start screen, visible to first-time users.&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;The drawing panel is easy and basic. You simply draw with the defaults or expand the paintbrush or colors menus to see other options — I kept them limited by design, since my goal was to enable quick and easy sketching rather than elaborate illustration. There are some nice contextual help features, as well. For example, when you are new to the site, you get a little help call-out; returning visitors won&amp;rsquo;t see it. If you click the brush controls a couple of times, you get a little help call-out that shows you how to use the brush shortcuts.&lt;/p&gt;

&lt;div class=&quot;pic-large&quot;&gt;
  &lt;span data-picture data-alt=&quot;&quot;&gt;
  &lt;span data-src=&quot;/assets/images/gronster/startDrawing-small.jpg&quot;&gt;&lt;/span&gt;
  &lt;span data-src=&quot;/assets/images/gronster/startDrawing-med.jpg&quot; data-media=&quot;(min-width: 26.25em)&quot;&gt;&lt;/span&gt;
  &lt;span data-src=&quot;/assets/images/gronster/startDrawing-large.jpg&quot; data-media=&quot;(min-width: 63.75em)&quot;&gt;&lt;/span&gt;
  &lt;!-- Fallback content for non-JS browsers. Same img src as the initial, unqualified source element. --&gt;
  &lt;noscript&gt;
    &lt;img src=&quot;/assets/images/gronster/startDrawing-small.jpg&quot;&gt;
  &lt;/noscript&gt;
  &lt;/span&gt;
&lt;div class=&quot;caption&quot;&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;pic-large&quot;&gt;
  &lt;span data-picture data-alt=&quot;The drawing panel, with options for changing color, erasing, and drawing with a fatter or thinner line. There aren&#39;t a ton of choices because I wanted to keep this simple — no fuss, just draw something and share it.&quot;&gt;
  &lt;span data-src=&quot;/assets/images/gronster/drawingPart2-small.jpg&quot;&gt;&lt;/span&gt;
  &lt;span data-src=&quot;/assets/images/gronster/drawingPart2-med.jpg&quot; data-media=&quot;(min-width: 26.25em)&quot;&gt;&lt;/span&gt;
  &lt;span data-src=&quot;/assets/images/gronster/drawingPart2-large.jpg&quot; data-media=&quot;(min-width: 63.75em)&quot;&gt;&lt;/span&gt;
  &lt;!-- Fallback content for non-JS browsers. Same img src as the initial, unqualified source element. --&gt;
  &lt;noscript&gt;
    &lt;img src=&quot;/assets/images/gronster/drawingPart2-small.jpg&quot;&gt;
  &lt;/noscript&gt;
  &lt;/span&gt;
&lt;div class=&quot;caption&quot;&gt;The drawing panel, with options for changing color, erasing, and drawing with a fatter or thinner line. There aren&amp;rsquo;t a ton of choices because I wanted to keep this simple — no fuss, just draw something and share it.&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Once you&amp;rsquo;re satisfied with the drawing, click &amp;ldquo;Next&amp;rdquo;, and go to the share screen. If you choose to invite a friend, they&amp;rsquo;ll receive an email with a link back to the original drawing. Only they won&amp;rsquo;t see all of what you drew — they&amp;rsquo;ll see just the very bottom part, beneath the dotted line on the drawing panel, so they can connect their piece with yours. The result may look crazy, but it will be an intentional sort of crazy.&lt;/p&gt;

&lt;div class=&quot;pic-normal&quot;&gt;
  &lt;span data-picture data-alt=&quot;The Gronster share screen.&quot;&gt;
  &lt;span data-src=&quot;/assets/images/gronster/share-small.jpg&quot;&gt;&lt;/span&gt;
  &lt;span data-src=&quot;/assets/images/gronster/share-med.jpg&quot; data-media=&quot;(min-width: 26.25em)&quot;&gt;&lt;/span&gt;
  &lt;!-- Fallback content for non-JS browsers. Same img src as the initial, unqualified source element. --&gt;
  &lt;noscript&gt;
    &lt;img src=&quot;/assets/images/gronster/share-small.jpg&quot;&gt;
  &lt;/noscript&gt;
  &lt;/span&gt;
&lt;div class=&quot;caption&quot;&gt;The Gronster share screen.&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;pic-large&quot;&gt;
  &lt;span data-picture data-alt=&quot;A couple of strange ones from the gallery. You can see how my application stitches the pieces together so that they can feel like connected, self-contained images. Of course, some users choose to ignore the guidelines, and it still works...&quot;&gt;
  &lt;span data-src=&quot;/assets/images/gronster/gallery1-small.jpg&quot;&gt;&lt;/span&gt;
  &lt;span data-src=&quot;/assets/images/gronster/gallery1-med.jpg&quot; data-media=&quot;(min-width: 26.25em)&quot;&gt;&lt;/span&gt;
  &lt;span data-src=&quot;/assets/images/gronster/gallery1-large.jpg&quot; data-media=&quot;(min-width: 63.75em)&quot;&gt;&lt;/span&gt;
  &lt;!-- Fallback content for non-JS browsers. Same img src as the initial, unqualified source element. --&gt;
  &lt;noscript&gt;
    &lt;img src=&quot;/assets/images/gronster/gallery1-small.jpg&quot;&gt;
  &lt;/noscript&gt;
  &lt;/span&gt;
&lt;div class=&quot;caption&quot;&gt;A couple of strange ones from the gallery. You can see how my application stitches the pieces together so that they can feel like connected, self-contained images. Of course, some users choose to ignore the guidelines, and it still works&amp;hellip;&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;It&amp;rsquo;s up and running, so check it out at &lt;a href=&quot;http://gronster.adamkiryk.com&quot;&gt;gronster.adamkiryk.com&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;bt-video-container&quot; style=&quot;position:relative;padding-bottom:62.60%;padding-top:30px;height:0;overflow:hidden&quot;&gt;&lt;iframe width=&quot;500&quot; height=&quot;313&quot; src=&quot;http://player.vimeo.com/video/85163079?rel=0&amp;amp;title=0&amp;amp;byline=0&amp;amp;portrait=0&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Redesigning A Culture Blog</title>
   <link href="http://akiryk.github.io/portfolio/2011/12/20/arts-and-letters"/>
   <updated>2011-12-20T00:00:00-05:00</updated>
   <id>http://akiryk.github.io/portfolio/2011/12/20/arts-and-letters</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;http://www.aldaily.com/&quot;&gt;Arts &amp;amp; Letters Daily&lt;/a&gt; is a great website. I first heard of it years ago — I believe in 1997 — when I attended an &lt;a href=&quot;http://www.edwardtufte.com/tufte/&quot;&gt;Edward Tufte&lt;/a&gt; lecture and he recommended it, and since then I&amp;rsquo;ve visited it regularly for its great links to interesting content. The thing is, the design&amp;rsquo;s remained the same since then, and it&amp;rsquo;s getting a little past it&amp;rsquo;s prime. &lt;/p&gt;

&lt;div class=&quot;pic-medium pull-right&quot;&gt;
  





  &lt;span data-picture data-alt=&quot;This is the original design, still the same as ever as of February, 2015.&quot;&gt;
    &lt;span data-src=&quot;/assets/images/arts-and-letters/original-side-tiny.jpg&quot;&gt;&lt;/span&gt;
    &lt;span data-src=&quot;/assets/images/arts-and-letters/original-side-small.jpg&quot; data-media=&quot;(min-width: 36.5625em)&quot;&gt;&lt;/span&gt;
    &lt;!-- Fallback content for non-JS browsers. Same img src as the initial, unqualified source element. --&gt;
    &lt;noscript&gt;
      &lt;img src=&quot;/assets/images/arts-and-letters/original-side-tiny.jpg&quot;&gt;
    &lt;/noscript&gt;
  &lt;/span&gt;

&lt;div class=&quot;caption&quot;&gt;This is the original design, still the same as ever as of February, 2015.&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Here&amp;rsquo;s a screen grab on the left. The page is dense, with too many small-print options for comfortable reading and a terrible user experience on smartphones. The content is organized into categories called &lt;em&gt;Articles of Note&lt;/em&gt;, &lt;em&gt;New Books&lt;/em&gt;, and &lt;em&gt;Essays and Opinion,&lt;/em&gt; which may seem reasonable at first glance, but aren&amp;rsquo;t really meaningful because each is so fluid that it could easily contain almost any link on the site.&lt;/p&gt;

&lt;p&gt;My biggest criticism, though, is that it&amp;rsquo;s hard to find stuff that interests me. What would make it easier? Perhaps just a few simple things: a cleaner, less cluttered design; more meaningful categories; a way to know the source (e.g. &lt;em&gt;New York Times&lt;/em&gt; or &lt;em&gt;Chronicle of Higher Education&lt;/em&gt;), and a clear publication date so I know what&amp;rsquo;s fresh.&lt;/p&gt;

&lt;p&gt;To show my love for the site, I designed what I believe would be &lt;a href=&quot;http://www.aldaily.adamkiryk.com/&quot;&gt;a big improvement&lt;/a&gt; and shared it with the editors. They haven&amp;rsquo;t implemented it, but, hey — you can&amp;rsquo;t win them all. &lt;/p&gt;

&lt;p&gt;In any case, here&amp;rsquo;s what I did. I created a wordpress theme that&amp;rsquo;s easy to maintain, and a cleaned-up design in which each link is given the space it deserves. It still emphasizes the editors&amp;rsquo; quirky comments on all manner of content, but displays category, date, and source right alongside. &lt;/p&gt;

&lt;div class=&quot;pic-normal&quot;&gt;
  &lt;span data-picture data-alt=&quot;On hover, the comment changes color and displays an arrow icon, indicating it&#39;s a link. Category, date, and source, are presented clearly.&quot;&gt;
  &lt;span data-src=&quot;/assets/images/arts-and-letters/single-small.jpg&quot;&gt;&lt;/span&gt;
  &lt;span data-src=&quot;/assets/images/arts-and-letters/single-med.jpg&quot; data-media=&quot;(min-width: 26.25em)&quot;&gt;&lt;/span&gt;
  &lt;!-- Fallback content for non-JS browsers. Same img src as the initial, unqualified source element. --&gt;
  &lt;noscript&gt;
    &lt;img src=&quot;/assets/images/arts-and-letters/single-small.jpg&quot;&gt;
  &lt;/noscript&gt;
  &lt;/span&gt;
&lt;div class=&quot;caption&quot;&gt;On hover, the comment changes color and displays an arrow icon, indicating it&amp;rsquo;s a link. Category, date, and source, are presented clearly.&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;My focus was very much on highlighting to content so that users could find engaging content. With a cleaner, more open, more readable look, I think I&amp;rsquo;ve done that. And it looks good. I even included all the sidebar links — even though they&amp;rsquo;re somewhat confusing, I think they help make Arts and Letters Daily unique. &lt;/p&gt;

&lt;div class=&quot;pic-normal&quot;&gt;
  &lt;span data-picture data-alt=&quot;My redesign for Arts &amp; Letters Daily.&quot;&gt;
  &lt;span data-src=&quot;/assets/images/arts-and-letters/desktop-small.jpg&quot;&gt;&lt;/span&gt;
  &lt;span data-src=&quot;/assets/images/arts-and-letters/desktop-med.jpg&quot; data-media=&quot;(min-width: 26.25em)&quot;&gt;&lt;/span&gt;
  &lt;!-- Fallback content for non-JS browsers. Same img src as the initial, unqualified source element. --&gt;
  &lt;noscript&gt;
    &lt;img src=&quot;/assets/images/arts-and-letters/desktop-small.jpg&quot;&gt;
  &lt;/noscript&gt;
  &lt;/span&gt;
&lt;div class=&quot;caption&quot;&gt;My redesign for Arts &amp; Letters Daily.&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Finally, I made it responsive — a very basic version, to be sure, but miles better than the existing site.&lt;/p&gt;

&lt;div class=&quot;pic-normal&quot;&gt;
  &lt;span data-picture data-alt=&quot;My redesign on tablet and smartphone.&quot;&gt;
  &lt;span data-src=&quot;/assets/images/arts-and-letters/ipad-iphone-small.jpg&quot;&gt;&lt;/span&gt;
  &lt;span data-src=&quot;/assets/images/arts-and-letters/ipad-iphone-med.jpg&quot; data-media=&quot;(min-width: 26.25em)&quot;&gt;&lt;/span&gt;
  &lt;!-- Fallback content for non-JS browsers. Same img src as the initial, unqualified source element. --&gt;
  &lt;noscript&gt;
    &lt;img src=&quot;/assets/images/arts-and-letters/ipad-iphone-small.jpg&quot;&gt;
  &lt;/noscript&gt;
  &lt;/span&gt;
&lt;div class=&quot;caption&quot;&gt;My redesign on tablet and smartphone.&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Check out &lt;a href=&quot;http://www.aldaily.adamkiryk.com/&quot;&gt;my proposed site&lt;/a&gt; and look at the &lt;a href=&quot;http://www.aldaily.com/&quot;&gt;original&lt;/a&gt;. &lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Story Making Application</title>
   <link href="http://akiryk.github.io/portfolio/2011/06/21/story-making-app"/>
   <updated>2011-06-21T00:00:00-04:00</updated>
   <id>http://akiryk.github.io/portfolio/2011/06/21/story-making-app</id>
   <content type="html">&lt;p&gt;I designed and built this web application for creating (and reading) choose-your-own-adventure 
stories. If you like inventing stories, this application can be addictive — and strange. 
The stories often end up twisting and turning in ridiculous, MadLib style ways.&lt;/p&gt;

&lt;p&gt;Once you register, you can create branching stories with as much complexity as you choose. 
And you can read them anywhere — the application is a responsive design, meaning it displays 
well whether on desktop computer, tablet, or mobile phone.&lt;/p&gt;

&lt;p&gt;One of the challenges posed to anyone creating a choose-your-own-adventure story is 
that the number of chapters grows exponentially. Every time you create a choice, you need 
two new chapters. It quickly becomes impossible to manage.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve reduced the pain to some extent by letting authors re-use chapters — stories can loop and multiple pathways can lead to the same result. 
In the end, however, creating an endlessly looping and evolving story is part of the fun.&lt;/p&gt;

&lt;p&gt;I developed Storili using php (the same programming language that runs WordPress), 
in part because I wanted to increase my expertise in creating content management systems 
for clients. Unlike a regular content management system, however, this branching story 
game had a number of very specific requirements. It needed to accommodate multiple stories, 
each with multiple chapters that might or might not lead to new chapters.&lt;/p&gt;

&lt;p&gt;The challenge of branching stories&lt;/p&gt;

&lt;div class=&quot;pic-large&quot;&gt;
  &lt;span data-picture data-alt=&quot;Reduce, reuse, recycle. As each chapter branches into two options, the story becomes exponentially more complex. One possible solution is to let chapters circle back on one another .&quot;&gt;
  &lt;span data-src=&quot;/assets/images/storili/exponential-small.jpg&quot;&gt;&lt;/span&gt;
  &lt;span data-src=&quot;/assets/images/storili/exponential-med.jpg&quot; data-media=&quot;(min-width: 26.25em)&quot;&gt;&lt;/span&gt;
  &lt;span data-src=&quot;/assets/images/storili/exponential-large.jpg&quot; data-media=&quot;(min-width: 63.75em)&quot;&gt;&lt;/span&gt;
  &lt;!-- Fallback content for non-JS browsers. Same img src as the initial, unqualified source element. --&gt;
  &lt;noscript&gt;
    &lt;img src=&quot;/assets/images/storili/exponential-small.jpg&quot;&gt;
  &lt;/noscript&gt;
  &lt;/span&gt;
&lt;div class=&quot;caption&quot;&gt;Reduce, reuse, recycle. As each chapter branches into two options, the story becomes exponentially more complex. One possible solution is to let chapters circle back on one another .&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;My son and a couple of his friends (then in seventh-grade) side-stepped the problem of 
branching chapters. They would give choices at the end of 
each segment, but only one choice actually goes anywhere — the other is just a thought. 
The result is a linear story in which, 
as a reader, you forever encounter options that the narrator opted not to give you, which
 can be funny and weirdly engaging.&lt;/p&gt;

&lt;p&gt;Check out the site and create your own story. &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://storyengine.adamkiryk.com&quot;&gt;Check it out&lt;/a&gt; — or read on&amp;hellip;&lt;/p&gt;

&lt;h3&gt;Making A Drawing&lt;/h3&gt;

&lt;p&gt;You start on an intro page, which shows in simple terms how the game works (the site cookies you, so if you return later you&amp;rsquo;ll go straight to the drawing panel). You can click on the big Get Started button — or you can explore the gallery.&lt;/p&gt;

&lt;div class=&quot;pic-normal&quot;&gt;
  &lt;span data-picture data-alt=&quot;The Gronster share screen.&quot;&gt;
  &lt;span data-src=&quot;/assets/images/storili/editing-small.jpg&quot;&gt;&lt;/span&gt;
  &lt;span data-src=&quot;/assets/images/storili/editing-med.jpg&quot; data-media=&quot;(min-width: 26.25em)&quot;&gt;&lt;/span&gt;
  &lt;!-- Fallback content for non-JS browsers. Same img src as the initial, unqualified source element. --&gt;
  &lt;noscript&gt;
    &lt;img src=&quot;/assets/images/storili/editing-small.jpg&quot;&gt;
  &lt;/noscript&gt;
  &lt;/span&gt;
&lt;div class=&quot;caption&quot;&gt;The Gronster share screen.&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;bt-video-container&quot; style=&quot;position:relative;padding-bottom:62.60%;padding-top:30px;height:0;overflow:hidden&quot;&gt;&lt;iframe width=&quot;500&quot; height=&quot;313&quot; src=&quot;http://player.vimeo.com/video/85163080?rel=0&amp;amp;title=0&amp;amp;byline=0&amp;amp;portrait=0&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Save The Whales!</title>
   <link href="http://akiryk.github.io/portfolio/2008/07/19/save-the-whales"/>
   <updated>2008-07-19T00:00:00-04:00</updated>
   <id>http://akiryk.github.io/portfolio/2008/07/19/save-the-whales</id>
   <content type="html">&lt;p&gt;What’s the right balance of fun and challenge to keep people playing a game? That&amp;rsquo;s one of the questions I was thinking about when making Save The Whales, a game where you slingshot a little man into the air to pop balloons and send whales back into the ocean. You have to aim the guy, shoot with the right amount of power, and pop at just the right time!&lt;/p&gt;

&lt;p&gt;Note that I programmed this game in actionscript, so it requires Flash and won’t work on iOS, but &lt;a href=&quot;http://www.adamkiryk.com/whales/&quot;&gt;check it out&lt;/a&gt; if you have flash.&lt;/p&gt;

&lt;div class=&quot;bt-video-container&quot; style=&quot;position:relative;padding-bottom:62.60%;padding-top:30px;height:0;overflow:hidden&quot;&gt;&lt;iframe width=&quot;500&quot; height=&quot;313&quot; src=&quot;http://player.vimeo.com/video/50937011?rel=0&amp;amp;title=0&amp;amp;byline=0&amp;amp;portrait=0&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Smarts Company Brand/Package Design</title>
   <link href="http://akiryk.github.io/portfolio/2004/10/10/winesmarts"/>
   <updated>2004-10-10T00:00:00-04:00</updated>
   <id>http://akiryk.github.io/portfolio/2004/10/10/winesmarts</id>
   <content type="html">&lt;p class=&quot;intro&quot;&gt;I was lead illustrator and designer on this project way back in 2002. It involved creating branding for a new company and designing the packaging for it&amp;rsquo;s first product, a trivia-style card game for wine lovers.&lt;/p&gt;

&lt;div class=&quot;pic-large&quot;&gt;
  &lt;span data-picture data-alt=&quot;&quot;&gt;
  &lt;span data-src=&quot;/assets/images/winesmarts/winesmarts-box1-small.jpg&quot;&gt;&lt;/span&gt;
  &lt;span data-src=&quot;/assets/images/winesmarts/winesmarts-box1-med.jpg&quot; data-media=&quot;(min-width: 26.25em)&quot;&gt;&lt;/span&gt;
  &lt;span data-src=&quot;/assets/images/winesmarts/winesmarts-box1-large.jpg&quot; data-media=&quot;(min-width: 63.75em)&quot;&gt;&lt;/span&gt;
  &lt;!-- Fallback content for non-JS browsers. Same img src as the initial, unqualified source element. --&gt;
  &lt;noscript&gt;
    &lt;img src=&quot;/assets/images/winesmarts/winesmarts-box1-small.jpg&quot;&gt;
  &lt;/noscript&gt;
  &lt;/span&gt;
&lt;div class=&quot;caption&quot;&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;marginator&quot;&gt;
  &lt;p&gt;
    For this project to succeed, I needed to create a visual language that could work for both the Smarts Company brand and the WineSmarts product — neither of which existed at the time. Further, the design had to have enough flexibility that it could be extended to a line of future products: trivia games about subjects like chocolate, food, and golf that the company&amp;rsquo;s founders intended to create before long. 
  &lt;/p&gt;
  &lt;div class=&quot;marginalia&quot;&gt;
    &lt;p&gt;&lt;span class=&quot;margin-heading&quot;&gt;Success!&lt;/span&gt; It looks like my original clients went on to sell the product, and somebody has been &lt;a href=&quot;http://www.barnesandnoble.com/s/?pn=SmartsCo&quot;&gt;going crazy making spinoffs&lt;/a&gt; of my original design 
    &lt;/p&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;To begin, I designed a logo — the Smarts Company logo — that expressed a combination of playfulness, education, and fun. (That was my goal, anyway. Logo design isn&amp;rsquo;t my strength or my passion, but in this case, I think I succeeded in subtly referencing things like a cheer-leader&amp;rsquo;s bullhorn, or a cartoon&amp;rsquo;s shouted speech bubble, or a team flag, or even — very subtly — the swoosh of a checkmark, any or all of which supported the brand&amp;rsquo;s message of fun, learning, good cheer). Oh, and it would also lock-up well with other titles such as Chocolate Smarts or Food Smarts or Sex Smarts.&lt;/p&gt;

&lt;div class=&quot;pic-normal&quot;&gt;
  &lt;span data-picture data-alt=&quot;Smarts Company logo designed to lock-up with various titles&quot;&gt;
  &lt;span data-src=&quot;/assets/images/winesmarts/smarts-close1-small.jpg&quot;&gt;&lt;/span&gt;
  &lt;span data-src=&quot;/assets/images/winesmarts/smarts-close1-med.jpg&quot; data-media=&quot;(min-width: 26.25em)&quot;&gt;&lt;/span&gt;
  &lt;!-- Fallback content for non-JS browsers. Same img src as the initial, unqualified source element. --&gt;
  &lt;noscript&gt;
    &lt;img src=&quot;/assets/images/winesmarts/smarts-close1-small.jpg&quot;&gt;
  &lt;/noscript&gt;
  &lt;/span&gt;
&lt;div class=&quot;caption&quot;&gt;Smarts Company logo designed to lock-up with various titles&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Once we settled on a logo, I started work on the packaging. Why not begin with the cards, since they were the foundation of the enterprise? Business reasons. The clients needed to sell the idea to retailers before they actually had the finished product in-hand, and for that they needed a compelling package design.&lt;/p&gt;

&lt;p&gt;I created illustrations and a visual language that was modular, in the sense that the pieces could be fit together in different ways to suit different product categories. Per the creative brief, the design was intended to look informal, contemporary, and inviting, playful without being a kid&amp;rsquo;s toy and modern without being cold. &lt;/p&gt;

&lt;p&gt;Was it successful? To a large degree. The product wasn&amp;rsquo;t a blockbuster, but the founders were written up in various business magazines because of it; they got it carried by desirable retailers (like the Museum of Modern Art gift store); and it stuck around for several years and several editions. And, hey, I was happy with the results. I think WineSmarts is still available — search for it on Amazon or Google. &lt;/p&gt;

&lt;div class=&quot;pic-normal&quot;&gt;
  &lt;span data-picture data-alt=&quot;Smarts Company logo designed to lock-up with various titles&quot;&gt;
  &lt;span data-src=&quot;/assets/images/winesmarts/winesmarts-box3-small.jpg&quot;&gt;&lt;/span&gt;
  &lt;span data-src=&quot;/assets/images/winesmarts/winesmarts-box3-med.jpg&quot; data-media=&quot;(min-width: 26.25em)&quot;&gt;&lt;/span&gt;
  &lt;!-- Fallback content for non-JS browsers. Same img src as the initial, unqualified source element. --&gt;
  &lt;noscript&gt;
    &lt;img src=&quot;/assets/images/winesmarts/winesmarts-box3-small.jpg&quot;&gt;
  &lt;/noscript&gt;
  &lt;/span&gt;
&lt;div class=&quot;caption&quot;&gt;Smarts Company logo designed to lock-up with various titles&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;pic-normal&quot;&gt;
  &lt;span data-picture data-alt=&quot;Box showing the booklet of instructions&quot;&gt;
  &lt;span data-src=&quot;/assets/images/winesmarts/winesmarts-box2-small.jpg&quot;&gt;&lt;/span&gt;
  &lt;span data-src=&quot;/assets/images/winesmarts/winesmarts-box2-med.jpg&quot; data-media=&quot;(min-width: 26.25em)&quot;&gt;&lt;/span&gt;
  &lt;!-- Fallback content for non-JS browsers. Same img src as the initial, unqualified source element. --&gt;
  &lt;noscript&gt;
    &lt;img src=&quot;/assets/images/winesmarts/winesmarts-box2-small.jpg&quot;&gt;
  &lt;/noscript&gt;
  &lt;/span&gt;
&lt;div class=&quot;caption&quot;&gt;Box showing the booklet of instructions&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;pic-normal&quot;&gt;
  &lt;span data-picture data-alt=&quot;A sampling of the trivia cards&quot;&gt;
  &lt;span data-src=&quot;/assets/images/winesmarts/winesmarts-cards1-small.jpg&quot;&gt;&lt;/span&gt;
  &lt;span data-src=&quot;/assets/images/winesmarts/winesmarts-cards1-med.jpg&quot; data-media=&quot;(min-width: 26.25em)&quot;&gt;&lt;/span&gt;
  &lt;!-- Fallback content for non-JS browsers. Same img src as the initial, unqualified source element. --&gt;
  &lt;noscript&gt;
    &lt;img src=&quot;/assets/images/winesmarts/winesmarts-cards1-small.jpg&quot;&gt;
  &lt;/noscript&gt;
  &lt;/span&gt;
&lt;div class=&quot;caption&quot;&gt;A sampling of the trivia cards&lt;/div&gt;
&lt;/div&gt;
</content>
 </entry>
 
 
</feed>